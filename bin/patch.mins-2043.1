From 638fab3e4aa8277107e870b079b4d12aa0655609 Mon Sep 17 00:00:00 2001
From: Min <min.yang@zglue.com>
Date: Tue, 20 Mar 2018 15:43:23 -0700
Subject: [PATCH]     FAST support for Zeus1 M

    --amend:  Add more of the driver code from my dev branches.
              Create a new board directory, configs/zeus_austin.

    --amend:  Rename the configs board directory to fast_api_debug.

    --amend:  Finish rename changes with updates for Kconfig and
              nrf52_serial.c; if CONFIG_DEBUG_FEATURES were not
              selected then arch/arm/src/nrf52 would fail to build
              because calls to some functions were blocked out
              without that config var and -Werror -Wall is set.

    --amend:  Update Kconfig and add config spec variables such
              as setting gpio pins for jtag.  Added nsh/ in
              configs/fast_api_debug

    --amend:  Garbage associated with getting files to build that
              call into the fast_debug driver.

    Enabling fast_jtag_read/write

    --amend:  Correct header blocking defines to reflect
              the .git relative path appropriately
              Pick up a couple of files that had been missed
              in the earlier check-in.

    --amend:  Added "#inclucde "fast_api.h" to  fast_api_zeus1.c
              to pick up jtag defines.  Need to reorg this sothat
              the api file doesn't have to contain this info which
              should be internal only anyway.

    Prep for adding a gpio api

    --amend: Pick up the gpio files that were forgotten.  They are
             added here.

    --amend: Add IOC commands for Zeus1.

    --amend: Swap out Dialog SDK gpio calls for nRF52. Get to compile
             Still need to update pin values in the calls.

    --amend:  A) Cleanup of the code
    --amend:  R) Added JTAG driver and kconfig for nrf52
    --amend:  J) Cleanup the FAST API driver folder
    --amend:  U) Run a good version of pre_commit for styling.
    --amend:  N) remove drivers/fast_api/fast_zeus.h
        :-)

   --amend:  Rebuild the nsh/defconfig file to pick up the new config
             sym names converting code references appropriately.

   --amend:  Update defconfig files in configs/fast_api_debug to point
             ARCH_BOARD to "fast_api_debug"

Change-Id: I42d549a59b01fbf46623c526c8a0be03af6eb5c0
---
 arch/arm/src/Makefile                             |    4 +-
 arch/arm/src/nrf52/Kconfig                        |   46 +
 arch/arm/src/nrf52/Make.defs                      |    8 +
 arch/arm/src/nrf52/Make.vars                      |    0
 arch/arm/src/nrf52/nrf.h                          |    2 +-
 arch/arm/src/nrf52/nrf52.h                        |    2 +-
 arch/arm/src/nrf52/nrf52_fast_config_file_read.c  |   78 ++
 arch/arm/src/nrf52/nrf52_gpio.h                   |    9 +
 arch/arm/src/nrf52/nrf52_jtag.c                   |  251 ++++
 arch/arm/src/nrf52/nrf52_jtag.h                   |  113 ++
 arch/arm/src/nrf52/nrf52_serial.c                 |    8 +-
 configs/Kconfig                                   |   19 +-
 configs/fast_api_debug/Kconfig                    |   29 +
 configs/fast_api_debug/Makefile                   |  200 +++
 configs/fast_api_debug/defaults.mk                |  213 ++++
 configs/fast_api_debug/fast_api_demo/Make.defs    |   40 +
 configs/fast_api_debug/fast_api_demo/defconfig    | 1380 +++++++++++++++++++++
 configs/fast_api_debug/include/board.h            |  191 +++
 configs/fast_api_debug/include/fast_api_include.h |   36 +
 configs/fast_api_debug/include/pca10040.h         |  244 ++++
 configs/fast_api_debug/nsh/Make.defs              |   40 +
 configs/fast_api_debug/nsh/defconfig              | 1379 ++++++++++++++++++++
 configs/fast_api_debug/scripts/.gitignore         |    3 +
 configs/fast_api_debug/scripts/arm-gdb.init       |    4 +
 configs/fast_api_debug/scripts/ld.script          |  136 ++
 configs/fast_api_debug/scripts/ld.standard.script |  248 ++++
 configs/fast_api_debug/scripts/ld.template        |  249 ++++
 configs/fast_api_debug/scripts/nrf-debug          |   16 +
 configs/fast_api_debug/scripts/nuttx-debug        |   52 +
 configs/fast_api_debug/src/Makefile               |   64 +
 configs/fast_api_debug/src/code_analysis.c        |  261 ++++
 configs/fast_api_debug/src/nrf52832-dk.h          |  125 ++
 configs/fast_api_debug/src/nrf52_appinit.c        |  922 ++++++++++++++
 configs/fast_api_debug/src/nrf52_autoleds.c       |  121 ++
 configs/fast_api_debug/src/nrf52_boot.c           |  113 ++
 configs/fast_api_debug/src/nrf52_buttons.c        |  166 +++
 configs/fast_api_debug/src/nrf52_ostest.c         |  111 ++
 configs/fast_api_debug/src/nrf52_user_spi.c       |  210 ++++
 configs/nrf52832_dk/Makefile                      |   24 +-
 configs/nrf52832_dk/ble_dfu/defconfig             |    1 +
 configs/nrf52832_dk/hello_nuttx/Make.defs         |   42 +
 configs/nrf52832_dk/scripts/.gitignore            |    3 +
 configs/nrf52832_dk/src/micro_ecc_lib_nrf52       |    0
 drivers/Kconfig                                   |    4 +
 drivers/Makefile                                  |    5 +
 drivers/fast_api/Kconfig                          |    9 +
 drivers/fast_api/Make.defs                        |   45 +
 drivers/fast_api/fast_zeus.c                      |  191 +++
 drivers/gpio_api/Kconfig                          |   22 +
 drivers/gpio_api/Make.defs                        |   46 +
 drivers/gpio_api/gpio_api.c                       |   15 +
 drivers/gpio_api/gpio_api.h                       |    9 +
 drivers/i2c/Make.defs                             |    2 +-
 include/nuttx/drivers/fast_zeus.h                 |   68 +
 include/nuttx/fast_api/fast_api.h                 |  495 ++++++++
 include/nuttx/fs/ioctl.h                          |    1 +
 lib/lib_fast_api                                  |  Bin 0 -> 13342 bytes
 lib/lib_fast_api_temp                             |  Bin 0 -> 13166 bytes
 lib/lib_nrf52                                     |  Bin 150867 -> 150870 bytes
 nordic_fastapi.bat                                |    4 +
 60 files changed, 8064 insertions(+), 15 deletions(-)
 mode change 100644 => 100755 arch/arm/src/Makefile
 mode change 100644 => 100755 arch/arm/src/nrf52/Kconfig
 mode change 100755 => 100644 arch/arm/src/nrf52/Make.vars
 create mode 100644 arch/arm/src/nrf52/nrf52_fast_config_file_read.c
 mode change 100644 => 100755 arch/arm/src/nrf52/nrf52_gpio.h
 create mode 100644 arch/arm/src/nrf52/nrf52_jtag.c
 create mode 100755 arch/arm/src/nrf52/nrf52_jtag.h
 create mode 100644 configs/fast_api_debug/Kconfig
 create mode 100644 configs/fast_api_debug/Makefile
 create mode 100644 configs/fast_api_debug/defaults.mk
 create mode 100755 configs/fast_api_debug/fast_api_demo/Make.defs
 create mode 100755 configs/fast_api_debug/fast_api_demo/defconfig
 create mode 100644 configs/fast_api_debug/include/board.h
 create mode 100644 configs/fast_api_debug/include/fast_api_include.h
 create mode 100644 configs/fast_api_debug/include/pca10040.h
 create mode 100644 configs/fast_api_debug/nsh/Make.defs
 create mode 100755 configs/fast_api_debug/nsh/defconfig
 create mode 100644 configs/fast_api_debug/scripts/.gitignore
 create mode 100644 configs/fast_api_debug/scripts/arm-gdb.init
 create mode 100644 configs/fast_api_debug/scripts/ld.script
 create mode 100644 configs/fast_api_debug/scripts/ld.standard.script
 create mode 100644 configs/fast_api_debug/scripts/ld.template
 create mode 100755 configs/fast_api_debug/scripts/nrf-debug
 create mode 100755 configs/fast_api_debug/scripts/nuttx-debug
 create mode 100644 configs/fast_api_debug/src/Makefile
 create mode 100644 configs/fast_api_debug/src/code_analysis.c
 create mode 100644 configs/fast_api_debug/src/nrf52832-dk.h
 create mode 100644 configs/fast_api_debug/src/nrf52_appinit.c
 create mode 100644 configs/fast_api_debug/src/nrf52_autoleds.c
 create mode 100755 configs/fast_api_debug/src/nrf52_boot.c
 create mode 100644 configs/fast_api_debug/src/nrf52_buttons.c
 create mode 100644 configs/fast_api_debug/src/nrf52_ostest.c
 create mode 100644 configs/fast_api_debug/src/nrf52_user_spi.c
 create mode 100644 configs/nrf52832_dk/hello_nuttx/Make.defs
 create mode 100644 configs/nrf52832_dk/scripts/.gitignore
 delete mode 100644 configs/nrf52832_dk/src/micro_ecc_lib_nrf52
 create mode 100644 drivers/fast_api/Kconfig
 create mode 100644 drivers/fast_api/Make.defs
 create mode 100644 drivers/fast_api/fast_zeus.c
 create mode 100644 drivers/gpio_api/Kconfig
 create mode 100644 drivers/gpio_api/Make.defs
 create mode 100644 drivers/gpio_api/gpio_api.c
 create mode 100644 drivers/gpio_api/gpio_api.h
 create mode 100755 include/nuttx/drivers/fast_zeus.h
 create mode 100755 include/nuttx/fast_api/fast_api.h
 create mode 100755 lib/lib_fast_api
 create mode 100755 lib/lib_fast_api_temp
 create mode 100755 nordic_fastapi.bat

diff --git a/arch/arm/src/Makefile b/arch/arm/src/Makefile
old mode 100644
new mode 100755
index 97c470f894..f57edf8e8a
--- a/arch/arm/src/Makefile
+++ b/arch/arm/src/Makefile
@@ -130,8 +130,8 @@ BIN  = libarch$(LIBEXT)
 LDFLAGS += $(ARCHSCRIPT)
 
 
-
 NRF52_LIB=lib_nrf52.a
+FAST_LIB =lib_fast_api.a
 ZGLUE_LIB=$(TOPDIR)/arch/$(CONFIG_ARCH)/src/nrf52/$(NRF52_LIB)
 ZGLUE_LIB=$(TOPDIR)/lib/$(NRF52_LIB)
 #
@@ -139,7 +139,9 @@ ZGLUE_LIB=$(TOPDIR)/lib/$(NRF52_LIB)
 # arch specific objects so they may all be linked at the same time.
 #
 $(shell cp $(TOPDIR)/lib/${NRF52_LIB:%.a=%} $(TOPDIR)/arch/$(CONFIG_ARCH)/src/$(NRF52_LIB))
+$(shell cp $(TOPDIR)/lib/${FAST_LIB:%.a=%} $(TOPDIR)/arch/$(CONFIG_ARCH)/src/$(FAST_LIB))
 EXTRA_LIBS += $(NRF52_LIB)
+EXTRA_LIBS += $(FAST_LIB)
 
 
 # Override in Make.defs if linker is not 'ld'
diff --git a/arch/arm/src/nrf52/Kconfig b/arch/arm/src/nrf52/Kconfig
old mode 100644
new mode 100755
index 53f672fb92..82187d42dd
--- a/arch/arm/src/nrf52/Kconfig
+++ b/arch/arm/src/nrf52/Kconfig
@@ -246,6 +246,14 @@ config NRF52_LPTIM
 
 # comment "AHB1 Peripherals"
 
+config NRF52_JTAG
+	bool "JTAG"
+	default n
+
+config NRF52_FAST_CONFIG_FILE_READ
+	bool "NRF52_FAST_CONFIG_FILE_READ"
+	default n
+
 config NRF52_ADC
 	bool "ADC"
 	default n
@@ -1937,6 +1945,44 @@ config NRF52_SERIALBRK_BSDCOMPAT
 
 endmenu # U[S]ART Configuration
 
+menu "JTAG Configuration"
+	depends on NRF52_JTAG
+
+
+config NRF52_JTAG_TMS_PIN
+	int "JTAG TMS Pin number"
+	range 0 31
+	default 13
+
+config NRF52_JTAG_TCK_PIN
+	int "JTAG TCK Pin number"
+	range 0 31
+	default 14
+
+config NRF52_JTAG_TDI_PIN
+	int "JTAG TDI Pin number"
+	range 0 31
+	default 12
+
+config NRF52_JTAG_TDO_PIN
+	int "JTAG TDO Pin number"
+	range 0 31
+	default 22
+
+endmenu
+
+menu "FAST CONFIG FILE READ Configuration"
+	depends on NRF52_FAST_CONFIG_FILE_READ
+
+
+config FLASH_REF_ADDRESS_FASTAPI
+	int "fast api bin starting address in the flash"
+	range 0x0 0x80000
+	default 0x60000
+
+endmenu
+
+
 menu "SPI Configuration"
 	depends on NRF52_SPI || NRF52_LEGACY_SPI
 
diff --git a/arch/arm/src/nrf52/Make.defs b/arch/arm/src/nrf52/Make.defs
index 01825eeee7..b8e5beda0a 100755
--- a/arch/arm/src/nrf52/Make.defs
+++ b/arch/arm/src/nrf52/Make.defs
@@ -164,6 +164,14 @@ ifeq ($(CONFIG_I2C),y)
 CHIP_CSRCS += nrf52_i2c.c
 endif
 
+ifeq ($(CONFIG_NRF52_JTAG),y)
+CHIP_CSRCS += nrf52_jtag.c
+endif
+
+ifeq ($(CONFIG_NRF52_FAST_CONFIG_FILE_READ),y)
+CHIP_CSRCS += nrf52_fast_config_file_read.c
+endif
+
 ifeq ($(CONFIG_NRF52_SPI),y)
 CHIP_CSRCS += nrf52_spi.c
 endif
diff --git a/arch/arm/src/nrf52/Make.vars b/arch/arm/src/nrf52/Make.vars
old mode 100755
new mode 100644
diff --git a/arch/arm/src/nrf52/nrf.h b/arch/arm/src/nrf52/nrf.h
index 9253bd6931..1f1946b03b 100644
--- a/arch/arm/src/nrf52/nrf.h
+++ b/arch/arm/src/nrf52/nrf.h
@@ -6,7 +6,7 @@
  ***************************************************************************/
 
 
-#include <nrf52.h>
+#include "nrf52.h"
 
 #define __STATIC_INLINE static inline
 #define __STATIC_ static
diff --git a/arch/arm/src/nrf52/nrf52.h b/arch/arm/src/nrf52/nrf52.h
index 2eb9619617..c243ea831b 100644
--- a/arch/arm/src/nrf52/nrf52.h
+++ b/arch/arm/src/nrf52/nrf52.h
@@ -105,7 +105,7 @@ typedef enum
 #define NRF52
 #endif
 
-#if CONFIG_ARCH_BOARD_NRF52832_DK == 1
+#if defined(CONFIG_ARCH_BOARD_NRF52832_DK)  && CONFIG_ARCH_BOARD_NRF52832_DK == 1
 #define BOARD_PCA10040 1
 #endif
 
diff --git a/arch/arm/src/nrf52/nrf52_fast_config_file_read.c b/arch/arm/src/nrf52/nrf52_fast_config_file_read.c
new file mode 100644
index 0000000000..c2c311ffd7
--- /dev/null
+++ b/arch/arm/src/nrf52/nrf52_fast_config_file_read.c
@@ -0,0 +1,78 @@
+/****************************************************************************
+ * arch/arm/src/nrf52/nrf52_fast_config_file_read.c
+ *
+ *   Copyright (C) 2012, 2014-2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ *   Copyright (C) 2011 Li Zhuoyi. All rights reserved.
+ *   Author: Li Zhuoyi <lzyy.cn@gmail.com> (Original author)
+ *
+ * Derived from arch/arm/src/nrf52/nrf52_i2c.c
+ *
+ *   Author: David Hewson
+ *
+ *   Copyright (C) 2010-2011 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/******************************************************************************
+ * INCLUDE FILES
+ *****************************************************************************/
+
+#include <nuttx/config.h>
+
+#ifdef CONFIG_NRF52_FAST_CONFIG_FILE_READ
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <sys/types.h>
+#include <nuttx/arch.h>
+
+#ifndef CONFIG_FLASH_REF_ADDRESS_FASTAPI
+#  define CONFIG_FLASH_REF_ADDRESS_FASTAPI 0x60000
+#endif
+
+/******************************************************************************
+ * @brief fast_config_file_read locate the fast config data in flash and
+ *                               pass it back to the caller (the API)
+ *
+ *****************************************************************************/
+int16_t fast_config_file_read(uint32_t offset, uint32_t length,
+                              uint16_t *buffer)
+{
+  for (uint32_t i = 0 ; i < length ; i++)
+    {
+      buffer[i] = *((uint32_t *)(CONFIG_FLASH_REF_ADDRESS_FASTAPI + offset * 2 + i * 2));
+    }
+  return OK;
+}
+
+#endif /* CONFIG_NRF52_FAST_CONFIG_FILE_READ */
diff --git a/arch/arm/src/nrf52/nrf52_gpio.h b/arch/arm/src/nrf52/nrf52_gpio.h
old mode 100644
new mode 100755
index a6b5e1dae9..979e384f05
--- a/arch/arm/src/nrf52/nrf52_gpio.h
+++ b/arch/arm/src/nrf52/nrf52_gpio.h
@@ -770,6 +770,15 @@ static inline void nrf_gpio_pin_latch_clear(uint32_t pin_number)
 
 /** @} */
 
+
+/******************************************************************************
+ * FUNCTION DECLARATIONS
+ *****************************************************************************/
+/*Write one or zero to the selected GPIO pin */
+void nrf52_gpiowrite(uint32_t pinset, bool value);
+/*Read one or zero from the selected GPIO pin */
+bool nrf52_gpioread(uint32_t pinset);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/arch/arm/src/nrf52/nrf52_jtag.c b/arch/arm/src/nrf52/nrf52_jtag.c
new file mode 100644
index 0000000000..a9664c6071
--- /dev/null
+++ b/arch/arm/src/nrf52/nrf52_jtag.c
@@ -0,0 +1,251 @@
+/****************************************************************************
+ * arch/arm/src/nrf52/nrf52_jtag.c
+ *
+ *   Copyright (C) 2012, 2014-2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ *   Copyright (C) 2011 Li Zhuoyi. All rights reserved.
+ *   Author: Li Zhuoyi <lzyy.cn@gmail.com> (Original author)
+ *
+ * Derived from arch/arm/src/nrf52/nrf52_i2c.c
+ *
+ *   Author: David Hewson
+ *
+ *   Copyright (C) 2010-2011 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/******************************************************************************
+ * INCLUDE FILES
+ *****************************************************************************/
+
+#include <nuttx/config.h>
+
+#ifdef CONFIG_NRF52_JTAG
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <sys/types.h>
+#include <nuttx/arch.h>
+#include "nrf52_gpio.h"
+#include "nrf52_jtag.h"
+
+#ifndef CONFIG_NRF52_JTAG_TDI_PIN
+#  define CONFIG_NRF52_JTAG_TDI_PIN   12
+#endif
+
+#ifndef CONFIG_NRF52_JTAG_TMS_PIN
+#  define CONFIG_NRF52_JTAG_TMS_PIN  13
+#endif
+
+#ifndef CONFIG_NRF52_JTAG_TCK_PIN
+#  define CONFIG_NRF52_JTAG_TCK_PIN   14
+#endif
+
+#ifndef CONFIG_NRF52_JTAG_TDO_PIN
+#  define CONFIG_NRF52_JTAG_TDO_PIN    22
+#endif
+
+static const struct tms_sequences short_tms_seqs[7][7] =   /* [from_state_ndx][to_state_ndx] */
+{
+  /* to state: */
+  /*  RESET        IDLE            DRSHIFT         DRPAUSE         IRSHIFT         IRPAUSE         CAPTUREDR*/                                                 /* from state: */
+  {B8(1111111, 7), B8(0000000, 7), B8(0010111, 7), B8(0001010, 7), B8(0011011, 7), B8(0010110, 7), B8(010111, 6)                                },         /* RESET */
+  {B8(1111111, 7), B8(0000000, 7), B8(001, 3),     B8(0101, 4),    B8(0011, 4),    B8(01011, 5), B8(01, 2)                                                },     /* IDLE */
+  {B8(1111111, 7), B8(011, 3),     B8(00111, 5),   B8(01, 2),      B8(001111, 6),  B8(0101111, 7), B8(0111, 4),                                },         /* DRSHIFT */
+  {B8(1111111, 7), B8(011, 3),     B8(01, 2),      B8(0, 1),       B8(001111, 6),  B8(0101111, 7), B8(0111, 4),                                },         /* DRPAUSE */
+  {B8(1111111, 7), B8(011, 3),     B8(00111, 5),   B8(010111, 6),  B8(001111, 6),  B8(01, 2), B8(0111, 4),                                },                                 /* IRSHIFT */
+  {B8(1111111, 7), B8(011, 3),     B8(00111, 5),   B8(010111, 6),  B8(01, 2),      B8(0, 1), B8(0111, 4),                                },                                 /* IRPAUSE */
+  {B8(1111111, 7), B8(01, 2),      B8(0011, 4),    B8(01011, 5),   B8(00111, 5),   B8(0, 1), B8(011, 3),                                        },                                 /* IR1EXIT */
+};
+
+
+
+/******************************************************************************
+ * @brief jtag_pins_init. We need 4 JTAG pins. TDI,TDO,TMS and TCK
+ *                        Be caureful and make sure that the above
+ *                        pins are not being used for any other
+ *                        purpose like I2C, SPI, UART or GPIOs
+ * @param None
+ *
+ *****************************************************************************/
+
+void jtag_pins_init(void)
+{
+  nrf_gpio_cfg_output(CONFIG_NRF52_JTAG_TCK_PIN);
+  nrf_gpio_cfg_output(CONFIG_NRF52_JTAG_TMS_PIN);
+  nrf_gpio_cfg_output(CONFIG_NRF52_JTAG_TDI_PIN);
+  nrf_gpio_cfg_input(CONFIG_NRF52_JTAG_TDO_PIN, NRF_GPIO_PIN_NOPULL);
+}
+
+
+/******************************************************************************
+ * @brief send_jtag_instruction. sends an 4 bit JTAG instruction by bit
+ *                               banging the TMS, TCK and TDI pins.
+ * @param jtag_instruction - 4 bit instruction to send to the FAST
+ *        tms_sequence     - TMS sequence to use. since the JTAG needs to be
+ *                           correct to the exact clock cycle
+ *
+ *****************************************************************************/
+void send_jtag_instruction(uint32_t jtag_instruction, uint32_t tms_sequence)
+{
+  int count = 0;
+  uint32_t jtag_local_instruction = jtag_instruction;
+
+  for (count = 0; count < JTAG_INSTRUCTION_SIZE; count++)
+    {
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 0);
+      (jtag_local_instruction & 0x01) ? (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TDI_PIN, 1)) : \
+      (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TDI_PIN, 0));
+      (tms_sequence & 0x01) ? (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 1)) : \
+      (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 0));
+      up_udelay(20);
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 1);
+      jtag_local_instruction = jtag_local_instruction >> 1;
+      tms_sequence = tms_sequence >> 1;
+      up_udelay(20);
+    }
+}
+
+void get_jtag_data(uint32_t *data)
+{
+  int count = 0;
+  unsigned int local_data = 0;
+  for (count = 0; count < JTAG_DATA_SIZE; count++)
+    {
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 0);
+      local_data |= (nrf_gpio_pin_read(CONFIG_NRF52_JTAG_TDO_PIN) << count);
+      up_udelay(20);
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 1);
+      up_udelay(20);
+    }
+  *data = local_data;
+}
+
+
+/******************************************************************************
+ * @brief send_jtag_instruction. sends an 4 bit JTAG instruction by bit banging
+ *                               the TMS, TCK and TDI pins.
+ * @param jtag_instruction - 4 bit instruction to send to the FAST
+ *        tms_sequence     - TMS sequence to use. since the JTAG needs to be
+ *                           correct to exact clock cycle
+ *
+ *****************************************************************************/
+void send_jtag_data(uint32_t data, uint32_t tms_sequence)
+{
+  int count = 0;
+  for (count = 0; count < JTAG_DATA_SIZE; count++)
+    {
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 0);
+      (data & 0x01) ? (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TDI_PIN, 1)) : \
+      (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TDI_PIN, 0));
+      (tms_sequence & 0x01) ? (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 1)) : \
+      (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 0));
+      data >>= 1;
+      tms_sequence = tms_sequence >> 1;
+      up_udelay(20);
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 1);
+      up_udelay(20);
+    }
+}
+
+
+/******************************************************************************
+ * @brief switch_tap_state from current_state to next_state. The TMS sequence
+ *                         to be used is defined in the global variable
+ *                         short_tms_seqs. We then bit bang manually through
+ *                         the GPIO PINS JTAG_TMS and JTAG_TCK
+ * @param current_state - current state of the JTAG state machine
+ *        next_state    - state to which the  JTAG state machine should go to
+ *
+ *****************************************************************************/
+void switch_tap_state(uint8_t current_state, uint8_t next_state)
+{
+  int count = 0;
+  uint8_t tms_sequence = short_tms_seqs[current_state][next_state].bits;
+  for (count = 0; count < short_tms_seqs[current_state][next_state].bit_count; count++)
+    {
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 0);
+      (tms_sequence & 0x01) ? (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 1)) : \
+      (nrf52_gpiowrite(CONFIG_NRF52_JTAG_TMS_PIN, 0));
+      up_udelay(20);
+      nrf52_gpiowrite(CONFIG_NRF52_JTAG_TCK_PIN, 1);
+      tms_sequence = tms_sequence >> 1;
+      up_udelay(20);
+    }
+}
+
+
+
+/******************************************************************************
+ * @brief fast_jtag_read writes 8 bits to the instrution register followed by
+ *                       32 bits  read from the data register. This is  simple
+ *                       jtag read command
+ * @param instruction  - 8 bit JTAG instruction code
+ *        data         - pointer that contains the data
+ *
+ *****************************************************************************/
+int16_t fast_jtag_read(uint8_t jtag_instruction, uint32_t *data)
+{
+
+  switch_tap_state(TAP_RESET, TAP_RESET);
+  switch_tap_state(TAP_RESET, TAP_IRSHIFT);
+  send_jtag_instruction(jtag_instruction, JTAG_INSTRUCTION_EXIT_IR_TMS_SEQUENCE);
+  switch_tap_state(TAP_IREXIT1, TAP_DRSHIFT);
+  get_jtag_data(data);
+  switch_tap_state(TAP_DRSHIFT, TAP_RESET);
+
+  return OK;
+}
+
+/******************************************************************************
+ *
+ * @brief fast_jtag_write writes 8 bits to the instrution register followed by
+ *                        32 bits to the data register. This is  simple jtag
+ *                        command with its data.
+ * @param instruction   - 8 bit JTAG instruction code
+ *        data          - 32 bit data to the JTAG instruction
+ *
+ *****************************************************************************/
+int16_t fast_jtag_write(uint8_t jtag_instruction, uint32_t data)
+{
+
+  switch_tap_state(TAP_RESET, TAP_RESET);
+  switch_tap_state(TAP_RESET, TAP_IRSHIFT);
+  send_jtag_instruction(jtag_instruction, JTAG_INSTRUCTION_EXIT_IR_TMS_SEQUENCE);
+  switch_tap_state(TAP_IREXIT1, TAP_DRSHIFT);
+  send_jtag_data(data, JTAG_DATA_EXIT_DR_TMS_SEQUENCE);
+  switch_tap_state(TAP_DRSHIFT, TAP_RESET);
+
+  return OK;
+}
+
+#endif /*CONFIG_NRF52_JTAG */
diff --git a/arch/arm/src/nrf52/nrf52_jtag.h b/arch/arm/src/nrf52/nrf52_jtag.h
new file mode 100755
index 0000000000..83b08c0a38
--- /dev/null
+++ b/arch/arm/src/nrf52/nrf52_jtag.h
@@ -0,0 +1,113 @@
+/****************************************************************************
+ * arch/arm/src/nrf52xx/nrf52_i2c.h
+ *
+ *   Copyright (C) 2010, 2013 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+#ifndef __ARCH_ARM_SRC_NRF52_JTAG_H
+#define __ARCH_ARM_SRC_NRF52_JTAG_H
+
+/******************************************************************************
+ * INCLUDE FILES
+ *****************************************************************************/
+
+
+/******************************************************************************
+ * DEFINES
+ *****************************************************************************/
+
+#define JTAG_INSTRUCTION_SIZE 4
+#define JTAG_DATA_SIZE                                 32
+
+#define JTAG_INSTRUCTION_EXIT_IR_TMS_SEQUENCE 0x08
+#define JTAG_DATA_EXIT_DR_TMS_SEQUENCE 0x80000000
+
+/* JTAG COMMANDS  */
+#define JTAG_IDCODE_INSTRUCTION         0x02
+
+#define HEX__(n) 0x##n##LU
+
+#define B8__(x) \
+       ((((x) & 0x0000000FLU) ? (1 << 0) : 0) \
+       +(((x) & 0x000000F0LU) ? (1 << 1) : 0) \
+       +(((x) & 0x00000F00LU) ? (1 << 2) : 0) \
+       +(((x) & 0x0000F000LU) ? (1 << 3) : 0) \
+       +(((x) & 0x000F0000LU) ? (1 << 4) : 0) \
+       +(((x) & 0x00F00000LU) ? (1 << 5) : 0) \
+       +(((x) & 0x0F000000LU) ? (1 << 6) : 0) \
+       +(((x) & 0xF0000000LU) ? (1 << 7) : 0))
+
+#define B8(bits, count) {((uint8_t)B8__(HEX__(bits))), (count)}
+
+/******************************************************************************
+ * TYPE DEFINITIONS
+ *****************************************************************************/
+
+typedef enum tap_state
+{
+  TAP_INVALID     = -1,
+  TAP_RESET       = 0,
+  TAP_IDLE        = 1,
+  TAP_DRSHIFT     = 2,
+  TAP_DRPAUSE     = 3,
+  TAP_IRSHIFT     = 4,
+  TAP_IRPAUSE     = 5,
+  TAP_IREXIT1     = 6,
+#if defined(DR_IR_SELECT)
+  TAP_DRSELECT    = 1,
+  TAP_DRCAPTURE   = 2,
+  TAP_DREXIT1     = 4,
+  TAP_DREXIT2     = 6,
+  TAP_DRUPDATE    = 7,
+  TAP_IRSELECT    = 9,
+  TAP_IRCAPTURE   = 10,
+  TAP_IREXIT1     = 12,
+  TAP_IREXIT2     = 14,
+  TAP_IRUPDATE    = 15,
+#endif
+
+} tap_state_t;
+
+struct tms_sequences
+{
+  uint8_t bits;
+  uint8_t bit_count;
+};
+
+/******************************************************************************
+ * FUNCTION DECLARATIONS
+ *****************************************************************************/
+
+/* jtag_pins_init. We need 4 JTAG pins. TDI,TDO,TMS and TCK */
+void jtag_pins_init(void);
+
+#endif /* __ARCH_ARM_SRC_NRF52_JTAG_H */
diff --git a/arch/arm/src/nrf52/nrf52_serial.c b/arch/arm/src/nrf52/nrf52_serial.c
index e4ad756b12..40cb41d1cf 100644
--- a/arch/arm/src/nrf52/nrf52_serial.c
+++ b/arch/arm/src/nrf52/nrf52_serial.c
@@ -108,7 +108,6 @@ static bool up_rxavailable(struct uart_dev_s *dev);
 static bool up_rxflowcontrol(struct uart_dev_s *dev, unsigned int nbuffered,
                              bool upper);
 #endif
-static void up_send(struct uart_dev_s *dev, int ch);
 static void up_txint(struct uart_dev_s *dev, bool enable);
 static bool up_txready(struct uart_dev_s *dev);
 
@@ -129,7 +128,10 @@ static int  up_pm_prepare(struct pm_callback_s *cb, int domain,
 
 static int nrf_drv_uart_irqhandler(int irq, FAR void *context, FAR void *arg);
 static int8_t uart_buf_get(struct uart_buffer_s *pcb, char *data);
+#ifdef CONFIG_DEBUG_FEATURES
+static void up_send(struct uart_dev_s *dev, int ch);
 static int8_t uart_buf_put(struct uart_buffer_s *pcb, char data);
+#endif
 static void   uart_buf_init(struct uart_buffer_s *pcb, size_t log, char *buf);
 static bool uart_buf_full(struct uart_buffer_s *pcb);
 static bool uart_buf_empty(struct uart_buffer_s *pcb);
@@ -954,6 +956,7 @@ static int up_receive(FAR struct uart_dev_s *dev, uint32_t *status)
  *   This method will send one byte on the UART.
  *
  ****************************************************************************/
+#ifdef CONFIG_DEBUG_FEATURES
 static void up_send(FAR struct uart_dev_s *dev, int ch)
 {
   struct up_dev_s *priv = (struct up_dev_s *)dev->priv;
@@ -978,6 +981,7 @@ static void up_send(FAR struct uart_dev_s *dev, int ch)
   uart_buf_put((struct uart_buffer_s *)p_cb->tx_buf, (uint8_t)ch);
   leave_critical_section(flags);
 }
+#endif
 
 void up_send_one(FAR struct uart_dev_s *p_dev, int ch)
 {
@@ -1463,6 +1467,7 @@ static void uart_buf_init(struct uart_buffer_s *pcb, size_t size, char *buf)
   sem_setprotocol(&pcb->sem, SEM_PRIO_NONE);
 }
 
+#ifdef CONFIG_DEBUG_FEATURES
 static int8_t uart_buf_put(struct uart_buffer_s *pcb, char data)
 {
   irqstate_t flags;
@@ -1480,6 +1485,7 @@ static int8_t uart_buf_put(struct uart_buffer_s *pcb, char data)
 
   return 0;
 }
+#endif
 
 static int8_t uart_buf_get(struct uart_buffer_s *pcb, char *data)
 {
diff --git a/configs/Kconfig b/configs/Kconfig
index 439e4f5ed0..12028d987c 100644
--- a/configs/Kconfig
+++ b/configs/Kconfig
@@ -1313,6 +1313,17 @@ config ARCH_BOARD_Z8F64200100KIT
 		development kit, Z8F6423 part, and the Zilog ZDS-II Windows command line
 		tools.  The development environment is Cygwin under WinXP.
 
+config ARCH_BOARD_FAST_API_DEBUG
+	bool "zGlue Zeus1 API debug platform."
+	depends on ARCH_CHIP_NRF52
+        depends on ARCH_CHIP_NRF52832
+	select ARCH_FAST_ZEUS
+	select ARCH_HAVE_LEDS
+	select ARCH_HAVE_BUTTONS
+	select ARCH_HAVE_IRQBUTTONS
+	---help---
+		zGlue's zeus1 demonstrator with austin
+
 config ARCH_BOARD_ZP214XPA
 	bool "The0.net LPC2148 Development Board"
 	depends on ARCH_CHIP_LPC214X
@@ -1468,11 +1479,13 @@ config ARCH_BOARD
 	default "olimexino-stm32"          if ARCH_BOARD_OLIMEXINO_STM32
 	default "open1788"                 if ARCH_BOARD_OPEN1788
 	default "p112"                     if ARCH_BOARD_P112
+	default "pca10056"                 if ARCH_BOARD_PCA10056
 	default "pcblogic-pic32mx"         if ARCH_BOARD_PCBLOGICPIC32MX
 	default "pcduino-a10"              if ARCH_BOARD_PCDUINO_A10
 	default "pic32mx-starterkit"       if ARCH_BOARD_PIC32MX_STARTERKIT
 	default "pic32mx7mmb"              if ARCH_BOARD_PIC32MX7MMB
 	default "pic32mz-starterkit"       if ARCH_BOARD_PIC32MZ_STARTERKIT
+	default "nrf52832_dk"              if ARCH_BOARD_NRF52832_DK
 	default "nucleo-144"               if ARCH_BOARD_NUCLEO_144
 	default "nucleo-f303re"            if ARCH_BOARD_NUCLEO_F303RE
 	default "nucleo-f334r8"            if ARCH_BOARD_NUCLEO_F334R8
@@ -1512,8 +1525,6 @@ config ARCH_BOARD
 	default "stm32f746-ws"             if ARCH_BOARD_STM32F746_WS
 	default "stm32l476vg-disco"        if ARCH_BOARD_STM32L476VG_DISCO
 	default "stm32l476-mdk"            if ARCH_BOARD_STM32L476_MDK
-	default "nrf52832_dk"              if ARCH_BOARD_NRF52832_DK
-	default "pca10056"                 if ARCH_BOARD_PCA10056
 	default "stm32ldiscovery"          if ARCH_BOARD_STM32L_DISCOVERY
 	default "stm32vldiscovery"         if ARCH_BOARD_STM32VL_DISCOVERY
 	default "mikroe-stm32f4"           if ARCH_BOARD_MIKROE_STM32F4
@@ -1539,6 +1550,7 @@ config ARCH_BOARD
 	default "zkit-arm-1769"            if ARCH_BOARD_ZKITARM
 	default "sim"                      if ARCH_BOARD_SIM
 	default "moxa"                     if ARCH_BOARD_MOXA
+        default "fast_api_debug"           if ARCH_BOARD_FAST_API_DEBUG
 
 comment "Common Board Options"
 
@@ -1962,6 +1974,9 @@ endif
 if ARCH_BOARD_SIM
 source "configs/sim/Kconfig"
 endif
+if ARCH_BOARD_FAST_API_DEBUG
+source "configs/fast_api_debug/Kconfig"
+endif
 if ARCH_BOARD_CUSTOM
 source "configs/dummy/Kconfig"
 endif
diff --git a/configs/fast_api_debug/Kconfig b/configs/fast_api_debug/Kconfig
new file mode 100644
index 0000000000..d481ca14e8
--- /dev/null
+++ b/configs/fast_api_debug/Kconfig
@@ -0,0 +1,29 @@
+#
+# For a description of the syntax of this configuration file,
+# see the file kconfig-language.txt in the NuttX tools repository.
+#
+
+if ARCH_BOARD_FAST_API_DEBUG
+
+config ZEUS1
+    bool "Zeus1 FAST architecture."
+    default y
+    select JTAG
+    select ZGLUE_FAST
+    ---help---
+        Enable access to the zeus1 FAST tile and control registers.
+
+config ZEUS2
+    bool
+    default n
+    select ZGLUE_FAST
+    ---help---
+        Enable access to the zeus1 FAST tile and control registers.
+
+config ZGLUE_FAST
+    bool
+    default y
+    ---help---
+        blah blah blah
+
+endif # ARCH_BOARD_FAST_API_DEBUG
diff --git a/configs/fast_api_debug/Makefile b/configs/fast_api_debug/Makefile
new file mode 100644
index 0000000000..f28a9b64fb
--- /dev/null
+++ b/configs/fast_api_debug/Makefile
@@ -0,0 +1,200 @@
+##############################################################################
+#                                                                            #
+#   Copyright (C) 2017,2018, zGlue inc.  All rights reserved.                #
+#                                                                            #
+##############################################################################
+
+##############################################################################
+#                                                                            #
+#   This makefile is meant to setup and build Nuttx for the Nordic 52832     #
+#   specific config, providing shortcuts for management, builds, mods        #
+#                                                                            #
+##############################################################################
+V ?= 0
+Q ?= @
+PLATFORM ?= $(shell pwd | sed -e 's/^.*\///')
+
+DEPTH = ../..
+CHIP_SRC = arch/arm/src/nrf52
+CHIP_SRC_DEPTH = $(shell echo $(CHIP_SRC) | sed -e 's/[^/]*/\.\./g')
+CSCOPE_OUT = cscope.out
+APPS = $(shell ls */defconfig | sed -e 's/\/.*//')
+
+CD = cd
+LN = ln -sf
+CP = cp
+RM = rm -f
+LD_SCRIPTS = ld.standard.script ld.softd.script tmp
+TMPDIR = /tmp
+
+#
+# Copy arg 1 to back-track-to-root/arg2. Uses
+# localy defined value DEPTH which is the
+# backtrack path to the root of this repo.
+#
+define COPY_FROM_ROOT
+        $(CP) $(DEPTH)/$1 $2
+endef
+
+#
+# Copy from back-track-to-root/arg1 arg2 locally.
+# Uses localy defined value DEPTH which is the
+# backtrack path to the root of this repo.
+#
+define COPY_TO_ROOT
+        $(CP)  $1 $(DEPTH)/$2
+endef
+
+#
+# Given a path return the return path (e.g. a/b/c/d ==> ../../../..).
+# If the path is '.' then the return path is '.'.
+#
+define BACK_TRACK
+        $(shell [ -n "$1" ] && echo "$1" | sed -e 's/[^/]*/\.\./g' || echo ".")
+endef
+
+#
+# Given a path, cd to that path and run cscope from the directory root
+# of that path.  E.g. if the path is arch/arm/src then cd to src and
+# run cscope -s../../..
+#
+define REDO_CSCOPE
+	@echo "Run cscope from $(DEPTH)/$1"
+        $(Q) cd $(DEPTH)/$1 && cscope -R -k -b -s $(call BACK_TRACK,$1)
+endef
+
+#
+define UNDO_CSCOPE
+	@echo "Remove cscope.out from $(DEPTH)/$1"
+        $(Q) cd $(DEPTH)/$1 && $(RM) cscope.out
+endef
+
+#
+# Given a path from root to a target dir remove any cscope.out file
+# there.
+#
+#	cd $(DEPTH)/configs/$(PLATFORM) &&  rm -f $(CSCOPE_OUT)
+
+.PHONY: $(APPS)
+
+help:
+	@echo "\nTargets:" >&2
+	@count=0 && for name in config $(APPS) ; do \
+		[ "$$count" -eq 0 ] && /bin/echo -n -e "\t   " >&2 ;\
+		/bin/echo -n -e "$$name\t" >&2; \
+		count=$$(( count + 1 )); \
+		[ $${#name} -lt 5 ] && /bin/echo -n -e "\t" >&2 ;\
+		[ "$$count" -eq 3 ] && count=0 && echo "" >&2 || true; \
+	done
+	@echo "\n" >&2
+	@echo "Parameter: _MAJOR_ , _MINOR_ , _BUILD_VERSION_" >&2
+	@echo "\t   _MAJOR_ is for Nuttx major version" >&2
+	@echo "\t   _MINOR_ is for Nuttx minor version" >&2
+	@echo "\t   _BUILD_VERSION_ is for custimizing build version" >&2
+	@echo "\t   example:" >&2
+	@echo "\t        make nsh _MAJOR_=7 _MINOR_=21 \\" >&2
+	@echo "\t\t\t_BUILD_VERSION_=201711111111_12345" >&2
+	@echo "\nParameter: _BLE_DEV_NAME, ZEUS2_BOARD" >&2
+	@echo "\t   Define your own ble device name. Please export the name as" >&2
+	@echo "\t   _BLE_DEV_NAME=“your_own_name”. If building for ZEUS2," >&2
+	@echo "\t   please export ZEUS2_BOARD=1" >&2
+	@echo "\nParameter: NO_ERRORS" >&2
+	@echo "\t   NO_ERRORS is for building without -Werror.  Pass NO_ERRORS=1" >&2
+	@echo >&2
+
+config: menuconfig
+
+distclean download menuconfig: $(DEPTH)/Make.defs
+	$(CD) $(DEPTH) && $(MAKE) $@
+
+#
+# Target compares the specified examples module listed in the
+# config file with what it finds in the apps defconfig file.
+# If the example module chosen in .config matches the one
+# specified in the defconfig then the .config is copied ontop
+# of the defconfig.
+#
+defconfig:
+	$(Q) if [ -f $(DEPTH)/.config ] ; then \
+		APP=$$(grep ^C.*AMPLES_.*=y $(DEPTH)/.config); \
+		if [ -n "$$APP" ] ; then MOD=$$(echo $$APP | \
+			sed -e s'/^C.*AMPLES_//' -e 's/=.*//' | tr A-Z a-z); \
+			cp $(DEPTH)/.config $$MOD/defconfig; \
+		fi \
+	fi
+
+#
+# For the nsh module compile verbosely
+#
+nsh: V=2
+
+top:
+	$(Q) cd /tmp && ln -sf $(SWD)/$(DEPTH)/nuttx nuttx
+	$(Q) cd /tmp && ln -sf $(SWD)/$(DEPTH)/apps apps
+
+#
+# This test is the opposite for the defconfig: target above.  If the
+# specified modules differ between the .config and defconfig then
+# a distclean is run and the appropriate defconfig is copied to .config.
+#
+$(APPS):
+	$(Q) if [ ! -f $(DEPTH)/.config ] || \
+		[ "$$(grep ^C.*XAMPLES_.*=y $(DEPTH)/.config)" != \
+			"$$(grep ^C.*XAMPLES_.*=y $(@)/defconfig)" ] ; then \
+			cd $(DEPTH) && $(MAKE) distclean;   \
+		\
+	fi
+	$(Q)$(call COPY_TO_ROOT,$@/defconfig,.config)
+	$(Q)$(call COPY_TO_ROOT,$@/Make.defs,Make.defs)
+	$(Q) $(MAKE) Q=$(Q) V=$(V) -C $(DEPTH)
+
+$(DEPTH)/Make.defs:
+	$(Q) @echo "CONFIG_ARCH_BOARD=\"fast_api_debug\"" > $(DEPTH)/.config
+	$(Q) @echo "CONFIG_ARCH=\"arm\"" >> $(DEPTH)/.config
+	$(Q) @echo 'include $${TOPDIR}/.config' > $@
+	$(Q) @echo 'include $${TOPDIR}/tools/Config.mk' >> $@
+	$(Q) @echo 'include $${TOPDIR}/arch/arm/src/armv7-m/Toolchain.defs' >> $@
+	$(Q) @echo 'include $${TOPDIR}/configs/$$(CONFIG_ARCH_BOARD)/defaults.mk' >> $@
+
+cscope: clean_cscope
+	$(Q)$(call REDO_CSCOPE,)
+	$(Q)$(call REDO_CSCOPE,$(CHIP_SRC))
+	$(Q)$(call REDO_CSCOPE,configs/$(PLATFORM))
+
+clean_cscope:
+	$(Q)$(call UNDO_CSCOPE,)
+	$(Q)$(call UNDO_CSCOPE,$(CHIP_SRC))
+	$(Q)$(call UNDO_CSCOPE,configs/$(PLATFORM))
+
+clean:
+	$(Q) if [ "$(MAKECMDGOALS)" = "clean" ] ; then \
+		echo "Clean found." ;\
+		$(MAKE) -C $(DEPTH) $@ ; \
+	fi
+	$(Q) $(RM) $(LD_SCRIPTS:%=scripts/%)
+
+clobber: distclean
+
+#
+# Clean out all of the stuff strewn about the tree as a result of coding.
+#
+clean_env: clean_cscope clean_cruft
+
+#
+# Remove all those pesky files resulting from side effects of running
+# some commands namely patch, merge, me.
+#
+clean_cruft:
+	$(Q) $(RM) /tmp/out.*
+	$(Q) cd $(DEPTH) && find . -path ./.git -prune -o              \
+			-type f -name  "*.orig"  -exec rm {} \; -o     \
+			-type f -name  "*.rej"   -exec rm {} \; -o     \
+			-type f -name  "tmp*"    -exec rm -rf {} \; -o \
+			-type f -name  "files.*" -exec rm {} \; -o     \
+			-type f -name  "diffs.*" -exec rm {} \; -o     \
+			-type f -iname "[a-h][a-h]" -exec rm {} \; -o  \
+			-type f -iname "[a-h][a-h][a-h]" -exec rm {} \;
+
+list_apps:
+	$(Q) echo "$(APPS)"
+
diff --git a/configs/fast_api_debug/defaults.mk b/configs/fast_api_debug/defaults.mk
new file mode 100644
index 0000000000..fa2a1b3452
--- /dev/null
+++ b/configs/fast_api_debug/defaults.mk
@@ -0,0 +1,213 @@
+############################################################################
+# configs/fast_api_debug/nsh/Make.defs
+#
+#   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+#   Author: dev@ziggurat29.com
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+include $(TOPDIR)/arch/arm/src/nrf52/Make.vars
+
+CHIP_COMPONENTS = $(TOPDIR)/arch/arm/src/chip/components
+SCRIPTSDIR = $(TOPDIR)/configs/$(CONFIG_ARCH_BOARD)/scripts
+ifeq ($(CONFIG_NRF52_BOOTLOADER),y)
+  LDTEMPLATE = ld_ota.template
+else
+  LDTEMPLATE = ld.template
+endif
+
+#
+# Provide a variable to disable warnings as errors in the compile.
+# The default is to enable -Werror, warnings are errors, and disable
+# them if NO_ERRORS is defined: make NO_ERRORS=xxx (just give it value)
+#
+WERROR = -Werror
+ifdef NO_ERRORS
+        WERROR =
+endif
+
+ifeq ($(CONFIG_NRF52_BLUETOOTH),y)
+LDSCRIPT = ld.softd.script
+else
+LDSCRIPT = ld.standard.script
+$(shell sed -e '/ FS_DATA/,/END_FS_DATA/d' \
+	-e '/__data_start__/d'  \
+	$(SCRIPTSDIR)/$(LDTEMPLATE) > $(SCRIPTSDIR)/tmp)
+LDTEMPLATE = tmp
+endif
+$(shell eval sed -e 's/NRF_FLASH_START/$(CONFIG_FLASH_ORIGIN)/' \
+	-e 's/NRF_FLASH_LENGTH/$(CONFIG_FLASH_LENGTH)/'  \
+	-e 's/NRF_SRAM_START/$(CONFIG_SRAM_ORIGIN)/' \
+	-e 's/NRF_SRAM_LENGTH/$(CONFIG_SRAM_LENGTH)/' \
+	$(SCRIPTSDIR)/$(LDTEMPLATE) > $(SCRIPTSDIR)/$(LDSCRIPT))
+
+ifeq ($(WINTOOL),y)
+  # Windows-native toolchains
+  DIRLINK = $(TOPDIR)/tools/copydir.sh
+  DIRUNLINK = $(TOPDIR)/tools/unlink.sh
+  MKDEP = $(TOPDIR)/tools/mknulldeps.sh
+  ARCHINCLUDES = -I. -isystem "${shell cygpath -w $(TOPDIR)/include}"
+  ARCHXXINCLUDES = -I. -isystem "${shell cygpath -w $(TOPDIR)/include}" -isystem "${shell cygpath -w $(TOPDIR)/include/cxx}"
+  ARCHSCRIPT = -T "${shell cygpath -w $(TOPDIR)/configs/$(CONFIG_ARCH_BOARD)/scripts/$(LDSCRIPT)}"
+else
+  # Linux/Cygwin-native toolchain
+  MKDEP = $(TOPDIR)/tools/mkdeps$(HOSTEXEEXT)
+  ARCHINCLUDES  = -I$(CHIP_DIR) -I$(TOPDIR)/arch/arm/src/board -I. \
+	          -isystem $(TOPDIR)/include -I$(TOOL_INCDIR) -I$(TOOLCHAIN) \
+		  -I$(LIB_UTIL) -I$(DEV_DIR) -I$(TOPDIR)/drivers/fast_debug -I$(LIB_UART)\
+		  -I$(SD_HEADERS) -I$(HAL_HEADERS) -I$(CLOCK) -I$(LIB_LOG) -I$(LIB_SRC)
+
+ifeq ($(CONFIG_EXAMPLES_BLE_DFU),y)
+  ARCHINCLUDES += -I$(BLE_XMPL_DFU)
+else
+  ARCHINCLUDES += -I$(BLE_XMPL_HR)
+endif
+
+ifeq ($(CONFIG_NRF52_BLUETOOTH),y)
+  ARCHINCLUDES += -I$(DEV_DIR) \
+		  -I$(SD_HANDLER) \
+		  -I$(LIB_FDS) -I$(LIB_FSTORE) -I$(LIB_EXPRMTL) \
+		  -I$(BLE_BAS) -I$(BLE_DIS) \
+		  -I$(BOARDS) -I$(LIB_SENSOR) \
+		  -I$(DRV_DELAY) \
+		  -I$(SD_HEADERS_NRF52) -I$(LIB_SDL) \
+		  -I$(LIB_CRC32) -I$(NANO_PB) \
+		  -I$(LIB_CRYP) -I$(LIB_CRYP_SW) -I$(LIB_SHA) -I$(LIB_CRYP_ECC) \
+		  -I$(LIB_ECC) -I$(MIC_ECC2) -I$(LIB_MEM) -I$(DRV_RNG) -I$(LIB_QUE)
+endif
+  ARCHXXINCLUDES = -I. -isystem $(TOPDIR)/include -isystem $(TOPDIR)/include/cxx
+  ARCHSCRIPT = -T$(TOPDIR)/configs/$(CONFIG_ARCH_BOARD)/scripts/$(LDSCRIPT)
+endif # ifeq ($(WINTOOL),y)
+
+CC = $(CROSSDEV)gcc
+CXX = $(CROSSDEV)g++
+CPP = $(CROSSDEV)gcc -E
+LD = $(CROSSDEV)ld
+AR = $(ARCROSSDEV)ar rcs
+NM = $(ARCROSSDEV)nm
+OBJCOPY = $(CROSSDEV)objcopy
+OBJDUMP = $(CROSSDEV)objdump
+RM = rm -f
+CP = cp
+RMDIR = rm -rf
+
+ARCHCCVERSION = ${shell $(CC) -v 2>&1 | sed -n '/^gcc version/p' | sed -e 's/^gcc version \([0-9\.]\)/\1/g' -e 's/[-\ ].*//g' -e '1q'}
+ARCHCCMAJOR = ${shell echo $(ARCHCCVERSION) | cut -d'.' -f1}
+
+ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
+  ARCHOPTIMIZATION = -g
+endif
+
+ifneq ($(CONFIG_DEBUG_NOOPT),y)
+  ARCHOPTIMIZATION += $(MAXOPTIMIZATION) -fno-strict-aliasing -fno-strength-reduce -fomit-frame-pointer
+endif
+
+ARCHCFLAGS = -fno-builtin -std=c99
+ARCHCXXFLAGS = -fno-builtin -fno-exceptions -fno-rtti
+
+#
+#  See above for details on WERROR
+#
+ARCHWARNINGS = $(WERROR) -Wall -Wstrict-prototypes -Wshadow -Wundef
+
+ARCHWARNINGSXX = -Wall -Wshadow -Wundef
+ARCHDEFINES =
+ARCHPICFLAGS = -fpic -msingle-pic-base -mpic-register=r10
+
+
+CFLAGS = $(ARCHCFLAGS) $(ARCHWARNINGS) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES) -pipe
+CPICFLAGS = $(ARCHPICFLAGS) $(CFLAGS)
+CXXFLAGS = $(ARCHCXXFLAGS) $(ARCHWARNINGSXX) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHXXINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES) -pipe
+CXXPICFLAGS = $(ARCHPICFLAGS) $(CXXFLAGS)
+CPPFLAGS = $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES)
+AFLAGS = $(CFLAGS) -D__ASSEMBLY__
+
+NXFLATLDFLAGS1 = -r -d -warn-common
+NXFLATLDFLAGS2 = $(NXFLATLDFLAGS1) -T$(TOPDIR)/binfmt/libnxflat/gnu-nxflat-pcrel.ld -no-check-sections
+LDNXFLATFLAGS = -e main -s 2048
+
+ASMEXT = .S
+OBJEXT = .o
+LIBEXT = .a
+EXEEXT =
+
+# for zeus1 + zeus2 board macros
+ifeq ($(CONFIG_FAST_API_ZEUS2),y)
+CFLAGS += -DZEUS2_BOARD
+endif
+ifeq ($(CONFIG_FAST_API_ZEUS1),y)
+CFLAGS += -DZEUS1_BOARD
+endif
+
+# for pre-define the ble device name  macro
+ifneq ($(_BLE_DEV_NAME),)
+CFLAGS += -D_BLE_DEV_NAME=\"$(_BLE_DEV_NAME)\"
+endif
+
+ifneq ($(CROSSDEV),arm-nuttx-elf-)
+  LDFLAGS += -nostartfiles -nodefaultlibs
+endif
+ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
+  LDFLAGS += -g
+endif
+
+LDFLAGS += -Map=${TOPDIR}/nuttx.map
+#CFLAGS += -Wa,-adhln
+#CXXFLAGS += -Wa,-adhln
+
+HOSTCC = gcc
+HOSTINCLUDES = -I.
+HOSTCFLAGS = -Wall -Wstrict-prototypes -Wshadow -Wundef -g -pipe
+HOSTLDFLAGS =
+
+FLASHER=nrfjprog
+FLASHER_IDENTS= $(FLASHER) -i
+FLASHER_ERASE = $(FLASHER) -e
+FLASHER_FLASH = $(FLASHER) --program
+FLASHER_RESET = $(FLASHER) -r
+FLASHER_VERIFY = $(FLASHER) --verify
+
+#
+# With this macro defined making the target "download" will build
+# nuttx and then call this define to program the flashdevice.
+# (see Makefile.unix, target download:)
+#
+define DOWNLOAD
+	$(Q)pwd
+        $(Q)if [ -n "$(shell $(FLASHER_IDENTS))" ] ; then \
+                $(FLASHER_ERASE)  ;\
+                $(FLASHER_FLASH)  $(NUTTXNAME).hex ;\
+                $(FLASHER_RESET)  ;\
+                $(FLASHER_VERIFY) ; $(NUTTXNAME).hex ;\
+        else                       \
+                echo "\nNo flash identified for programming.\n" ;\
+        fi
+endef
+
diff --git a/configs/fast_api_debug/fast_api_demo/Make.defs b/configs/fast_api_debug/fast_api_demo/Make.defs
new file mode 100755
index 0000000000..a4257a0251
--- /dev/null
+++ b/configs/fast_api_debug/fast_api_demo/Make.defs
@@ -0,0 +1,40 @@
+############################################################################
+# configs/fast_api_debug/nsh/Make.defs
+#
+#   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+#   Author: dev@ziggurat29.com
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+include ${TOPDIR}/.config
+include ${TOPDIR}/tools/Config.mk
+include ${TOPDIR}/arch/arm/src/armv7-m/Toolchain.defs
+include ${TOPDIR}/configs/$(CONFIG_ARCH_BOARD)/defaults.mk
+
diff --git a/configs/fast_api_debug/fast_api_demo/defconfig b/configs/fast_api_debug/fast_api_demo/defconfig
new file mode 100755
index 0000000000..0d60f2d538
--- /dev/null
+++ b/configs/fast_api_debug/fast_api_demo/defconfig
@@ -0,0 +1,1380 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Nuttx/ Configuration
+#
+
+#
+# Build Setup
+#
+# CONFIG_EXPERIMENTAL is not set
+# CONFIG_DEFAULT_SMALL is not set
+CONFIG_HOST_LINUX=y
+# CONFIG_HOST_OSX is not set
+# CONFIG_HOST_WINDOWS is not set
+# CONFIG_HOST_OTHER is not set
+
+#
+# Build Configuration
+#
+CONFIG_APPS_DIR="../apps"
+CONFIG_BUILD_FLAT=y
+# CONFIG_BUILD_PROTECTED is not set
+# CONFIG_BUILD_2PASS is not set
+
+#
+# Binary Output Formats
+#
+# CONFIG_RRLOAD_BINARY is not set
+CONFIG_INTELHEX_BINARY=y
+# CONFIG_MOTOROLA_SREC is not set
+CONFIG_RAW_BINARY=y
+# CONFIG_UBOOT_UIMAGE is not set
+
+#
+# Customize Header Files
+#
+# CONFIG_ARCH_STDINT_H is not set
+# CONFIG_ARCH_STDBOOL_H is not set
+# CONFIG_ARCH_MATH_H is not set
+# CONFIG_ARCH_FLOAT_H is not set
+# CONFIG_ARCH_STDARG_H is not set
+# CONFIG_ARCH_DEBUG_H is not set
+
+#
+# Debug Options
+#
+CONFIG_DEBUG_ALERT=y
+CONFIG_DEBUG_FEATURES=y
+
+#
+# Debug SYSLOG Output Controls
+#
+CONFIG_DEBUG_ERROR=y
+CONFIG_DEBUG_WARN=y
+# CONFIG_DEBUG_INFO is not set
+CONFIG_DEBUG_ASSERTIONS=y
+
+#
+# Subsystem Debug Options
+#
+# CONFIG_DEBUG_AUDIO is not set
+# CONFIG_DEBUG_BINFMT is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ERROR=y
+CONFIG_DEBUG_FS_WARN=y
+# CONFIG_DEBUG_GRAPHICS is not set
+# CONFIG_DEBUG_LIB is not set
+# CONFIG_DEBUG_MM is not set
+# CONFIG_DEBUG_SCHED is not set
+
+#
+# OS Function Debug Options
+#
+CONFIG_DEBUG_IRQ=y
+CONFIG_DEBUG_IRQ_ERROR=y
+CONFIG_DEBUG_IRQ_WARN=y
+
+#
+# Driver Debug Options
+#
+# CONFIG_DEBUG_LEDS is not set
+CONFIG_DEBUG_ANALOG=y
+CONFIG_DEBUG_ANALOG_ERROR=y
+CONFIG_DEBUG_ANALOG_WARN=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_DEBUG_I2C=y
+CONFIG_DEBUG_I2C_ERROR=y
+CONFIG_DEBUG_I2C_WARN=y
+# CONFIG_DEBUG_I2S is not set
+CONFIG_DEBUG_PWM=y
+CONFIG_DEBUG_PWM_ERROR=y
+CONFIG_DEBUG_PWM_WARN=y
+CONFIG_DEBUG_SENSORS=y
+CONFIG_DEBUG_SENSORS_ERROR=y
+CONFIG_DEBUG_SENSORS_WARN=y
+CONFIG_DEBUG_SPI=y
+CONFIG_DEBUG_SPI_ERROR=y
+CONFIG_DEBUG_SPI_WARN=y
+# CONFIG_DEBUG_TIMER is not set
+# CONFIG_DEBUG_WATCHDOG is not set
+CONFIG_ARCH_HAVE_STACKCHECK=y
+# CONFIG_STACK_COLORATION is not set
+CONFIG_ARCH_HAVE_HEAPCHECK=y
+# CONFIG_HEAP_COLORATION is not set
+CONFIG_DEBUG_SYMBOLS=y
+CONFIG_ARCH_HAVE_CUSTOMOPT=y
+# CONFIG_DEBUG_NOOPT is not set
+CONFIG_DEBUG_CUSTOMOPT=y
+# CONFIG_DEBUG_FULLOPT is not set
+CONFIG_DEBUG_OPTLEVEL="-O0"
+
+#
+# System Type
+#
+CONFIG_ARCH_ARM=y
+# CONFIG_ARCH_AVR is not set
+# CONFIG_ARCH_HC is not set
+# CONFIG_ARCH_MIPS is not set
+# CONFIG_ARCH_MISOC is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_RISCV is not set
+# CONFIG_ARCH_SIM is not set
+# CONFIG_ARCH_X86 is not set
+# CONFIG_ARCH_XTENSA is not set
+# CONFIG_ARCH_Z16 is not set
+# CONFIG_ARCH_Z80 is not set
+CONFIG_ARCH="arm"
+
+#
+# ARM Options
+#
+# CONFIG_ARCH_CHIP_A1X is not set
+# CONFIG_ARCH_CHIP_C5471 is not set
+# CONFIG_ARCH_CHIP_DM320 is not set
+# CONFIG_ARCH_CHIP_EFM32 is not set
+# CONFIG_ARCH_CHIP_IMX1 is not set
+# CONFIG_ARCH_CHIP_IMX6 is not set
+# CONFIG_ARCH_CHIP_KINETIS is not set
+# CONFIG_ARCH_CHIP_KL is not set
+# CONFIG_ARCH_CHIP_LM is not set
+# CONFIG_ARCH_CHIP_TIVA is not set
+# CONFIG_ARCH_CHIP_LPC11XX is not set
+# CONFIG_ARCH_CHIP_LPC17XX is not set
+# CONFIG_ARCH_CHIP_LPC214X is not set
+# CONFIG_ARCH_CHIP_LPC2378 is not set
+# CONFIG_ARCH_CHIP_LPC31XX is not set
+# CONFIG_ARCH_CHIP_LPC43XX is not set
+# CONFIG_ARCH_CHIP_MOXART is not set
+# CONFIG_ARCH_CHIP_NUC1XX is not set
+# CONFIG_ARCH_CHIP_SAMA5 is not set
+# CONFIG_ARCH_CHIP_SAMD is not set
+# CONFIG_ARCH_CHIP_SAML is not set
+# CONFIG_ARCH_CHIP_SAM34 is not set
+# CONFIG_ARCH_CHIP_SAMV7 is not set
+# CONFIG_ARCH_CHIP_STM32 is not set
+# CONFIG_ARCH_CHIP_STM32F7 is not set
+# CONFIG_ARCH_CHIP_STM32L4 is not set
+CONFIG_ARCH_CHIP_NRF52=y
+# CONFIG_ARCH_CHIP_STR71X is not set
+# CONFIG_ARCH_CHIP_TMS570 is not set
+# CONFIG_ARCH_ARM7TDMI is not set
+# CONFIG_ARCH_ARM926EJS is not set
+# CONFIG_ARCH_ARM920T is not set
+# CONFIG_ARCH_CORTEXM0 is not set
+# CONFIG_ARCH_CORTEXM23 is not set
+# CONFIG_ARCH_CORTEXM3 is not set
+# CONFIG_ARCH_CORTEXM33 is not set
+CONFIG_ARCH_CORTEXM4=y
+# CONFIG_ARCH_CORTEXM7 is not set
+# CONFIG_ARCH_CORTEXA5 is not set
+# CONFIG_ARCH_CORTEXA8 is not set
+# CONFIG_ARCH_CORTEXA9 is not set
+# CONFIG_ARCH_CORTEXR4 is not set
+# CONFIG_ARCH_CORTEXR4F is not set
+# CONFIG_ARCH_CORTEXR5 is not set
+# CONFIG_ARCH_CORTEX5F is not set
+# CONFIG_ARCH_CORTEXR7 is not set
+# CONFIG_ARCH_CORTEXR7F is not set
+CONFIG_ARCH_FAMILY="armv7-m"
+CONFIG_ARCH_CHIP="nrf52"
+# CONFIG_ARM_TOOLCHAIN_IAR is not set
+CONFIG_ARM_TOOLCHAIN_GNU=y
+# CONFIG_ARMV7M_USEBASEPRI is not set
+CONFIG_ARCH_HAVE_CMNVECTOR=y
+CONFIG_ARMV7M_CMNVECTOR=y
+# CONFIG_ARMV7M_LAZYFPU is not set
+CONFIG_ARCH_HAVE_FPU=y
+# CONFIG_ARCH_HAVE_DPFPU is not set
+CONFIG_ARCH_FPU=y
+# CONFIG_ARCH_HAVE_TRUSTZONE is not set
+CONFIG_ARM_HAVE_MPU_UNIFIED=y
+CONFIG_ARM_MPU=y
+CONFIG_ARM_MPU_NREGIONS=8
+# CONFIG_DEBUG_HARDFAULT is not set
+
+#
+# ARMV7M Configuration Options
+#
+# CONFIG_ARMV7M_HAVE_ICACHE is not set
+# CONFIG_ARMV7M_HAVE_DCACHE is not set
+# CONFIG_ARMV7M_HAVE_ITCM is not set
+# CONFIG_ARMV7M_HAVE_DTCM is not set
+# CONFIG_ARMV7M_TOOLCHAIN_IARL is not set
+# CONFIG_ARMV7M_TOOLCHAIN_BUILDROOT is not set
+# CONFIG_ARMV7M_TOOLCHAIN_CODEREDL is not set
+# CONFIG_ARMV7M_TOOLCHAIN_CODESOURCERYL is not set
+CONFIG_ARMV7M_TOOLCHAIN_GNU_EABIL=y
+CONFIG_ARMV7M_HAVE_STACKCHECK=y
+# CONFIG_ARMV7M_STACKCHECK is not set
+# CONFIG_ARMV7M_ITMSYSLOG is not set
+CONFIG_SERIAL_TERMIOS=y
+# CONFIG_SERIAL_DISABLE_REORDERING is not set
+
+#
+# NRF52 Configuration Options
+#
+CONFIG_ARCH_CHIP_NRF52832=y
+# CONFIG_ARCH_CHIP_NRF52840 is not set
+CONFIG_NRF52_NRF52832_HAVE_PERIPH=y
+# CONFIG_NRF52_NRF52840_HAVE_PERIPH is not set
+# CONFIG_NRF52832_FLASH_256KB is not set
+CONFIG_NRF52832_FLASH_512KB=y
+
+#
+# NRF52 Peripherals
+#
+
+#
+# NRF52 Peripheral Support
+#
+# CONFIG_NRF52_HAVE_LTDC is not set
+CONFIG_NRF52_HAVE_LPTIM1=y
+CONFIG_NRF52_HAVE_LPTIM2=y
+CONFIG_NRF52_HAVE_COMP=y
+CONFIG_NRF52_HAVE_I2S=y
+CONFIG_NRF52_HAVE_UART0=y
+CONFIG_NRF52_HAVE_BLUETOOTH=y
+CONFIG_NRF52_HAVE_RNG=y
+# CONFIG_NRF52_BLUETOOTH is not set
+CONFIG_GPIO_AS_PINRESET=21
+CONFIG_FLASH_ORIGIN="0"
+CONFIG_FLASH_LENGTH="0x80000"
+CONFIG_SRAM_ORIGIN="0x20000000"
+CONFIG_SRAM_LENGTH="0x10000"
+# CONFIG_NRF52_DAC is not set
+CONFIG_NRF52_I2C=y
+# CONFIG_NRF52_GPIOTE is not set
+# CONFIG_NRF52_SPI is not set
+CONFIG_NRF52_LEGACY_SPI=y
+CONFIG_NRF52_UART=y
+# CONFIG_NRF52_LPTIM is not set
+CONFIG_NRF52_JTAG=y
+CONFIG_NRF52_FAST_CONFIG_FILE_READ=y
+CONFIG_NRF52_ADC=y
+CONFIG_NRF52_ADC_CHANNEL=1
+CONFIG_NRF52_COMP_LPCOMP=y
+CONFIG_NRF52_COMP=y
+# CONFIG_NRF52_LPCOMP is not set
+CONFIG_NRF52_COMP_MODE_SE=y
+# CONFIG_NRF52_COMP_MODE_DIFF is not set
+CONFIG_NRF52_COMP_SPEED_LOW=y
+# CONFIG_NRF52_COMP_SPEED_NORMAL is not set
+# CONFIG_NRF52_COMP_SPEED_HIGH is not set
+CONFIG_NRF52_COMP_INPUT=2
+CONFIG_NRF52_COMP_REF=1
+CONFIG_NRF52_COMP_EXT_REF=1
+CONFIG_NRF52_COMP_HYST=1
+CONFIG_NRF52_COMP_TH_DOWN=60
+CONFIG_NRF52_COMP_TH_UP=63
+CONFIG_NRF52_COMP_ISOURCE=0
+# CONFIG_NRF52_CRC is not set
+# CONFIG_NRF52_TSC is not set
+# CONFIG_NRF52_OTGFS is not set
+# CONFIG_NRF52_PPI is not set
+CONFIG_NRF52_AES=y
+CONFIG_NRF52_RNG=y
+CONFIG_NRF52_I2S=y
+CONFIG_NRF52_I2S_LOWPRIO=y
+# CONFIG_NRF52_I2S_HIGHPRIO is not set
+# CONFIG_NRF52_FMC is not set
+CONFIG_NRF52_PWR=y
+CONFIG_NRF52_TIM0=y
+# CONFIG_NRF52_TIM1 is not set
+# CONFIG_NRF52_TIM2 is not set
+# CONFIG_NRF52_TIM3 is not set
+# CONFIG_NRF52_TIM4 is not set
+
+#
+# RTC specific configs available when 'device drivers/timer support/rtc' is enabled.
+#
+# CONFIG_NRF52_SPI0 is not set
+# CONFIG_NRF52_LEGACY_SPI0 is not set
+# CONFIG_NRF52_SPI1 is not set
+# CONFIG_NRF52_LEGACY_SPI1 is not set
+# CONFIG_NRF52_SPI2 is not set
+CONFIG_NRF52_LEGACY_SPI2=y
+CONFIG_NRF52_UART0=y
+CONFIG_NRF52_I2C0=y
+# CONFIG_NRF52_I2C1 is not set
+# CONFIG_NRF52_DAC1 is not set
+# CONFIG_NRF52_DAC2 is not set
+# CONFIG_NRF52_OPAMP is not set
+# CONFIG_NRF52_LPTIM1 is not set
+# CONFIG_NRF52_SWPMI is not set
+# CONFIG_NRF52_LPTIM2 is not set
+CONFIG_NRF52_SYSCFG=y
+CONFIG_NRF52_FIREWALL=y
+# CONFIG_NRF52_UART1 is not set
+# CONFIG_NRF52_DFSDM is not set
+# CONFIG_NRF52_BKPSRAM is not set
+CONFIG_NRF52_PWM=y
+CONFIG_NRF52_WDG=y
+CONFIG_NRF52_QDECODER=y
+CONFIG_NRF52_FLASH_PREFETCH=y
+CONFIG_NRF52_PROCFS_DEVID=y
+CONFIG_NRF52_DISABLE_IDLE_SLEEP_DURING_DEBUG=y
+# CONFIG_ARCH_BOARD_NRF52_CUSTOM_CLOCKCONFIG is not set
+
+#
+# Timer Configuration
+#
+# CONFIG_NRF52_ONESHOT is not set
+# CONFIG_NRF52_FREERUN is not set
+# CONFIG_NRF52_TIM0_PWM is not set
+CONFIG_NRF52_PWM_MULTICHAN=y
+
+#
+# PWM Configuration
+#
+CONFIG_NRF52_PWM_M0=y
+CONFIG_NRF52_PWM_M0_CLK_FREQUENCY=16000000
+CONFIG_NRF52_PWM_M0_CHANNEL1=y
+CONFIG_NRF52_PWM_M0_CHANNEL1_GPIO_PIN=17
+CONFIG_NRF52_PWM_M0_CHANNEL2=y
+CONFIG_NRF52_PWM_M0_CHANNEL2_GPIO_PIN=18
+CONFIG_NRF52_PWM_M0_CHANNEL3=y
+CONFIG_NRF52_PWM_M0_CHANNEL3_GPIO_PIN=19
+CONFIG_NRF52_PWM_M0_CHANNEL4=y
+CONFIG_NRF52_PWM_M0_CHANNEL4_GPIO_PIN=20
+# CONFIG_NRF52_PWM_M1 is not set
+# CONFIG_NRF52_PWM_M2 is not set
+CONFIG_NRF52_HAVE_UART1=y
+
+#
+# U[S]ART Configuration
+#
+# CONFIG_NRF52_FLOWCONTROL_BROKEN is not set
+# CONFIG_NRF52_UART_BREAKS is not set
+
+#
+# JTAG Configuration
+#
+CONFIG_NRF52_JTAG_TMS_PIN=24
+CONFIG_NRF52_JTAG_TCK_PIN=22
+CONFIG_NRF52_JTAG_TDI_PIN=23
+CONFIG_NRF52_JTAG_TDO_PIN=25
+
+#
+# SPI Configuration
+#
+CONFIG_NRF52_SPI_INTERRUPTS=y
+CONFIG_NRF52_CS_CONTROL_BY_USER=y
+
+#
+# SPI2 pinmux config
+#
+CONFIG_NRF52_SPI2_SCL_PIN=22
+CONFIG_NRF52_SPI2_MOSI_PIN=23
+CONFIG_NRF52_SPI2_MISO_PIN=25
+# CONFIG_NRF52_SPI2_125K is not set
+# CONFIG_NRF52_SPI2_250K is not set
+# CONFIG_NRF52_SPI2_500K is not set
+# CONFIG_NRF52_SPI2_1M is not set
+# CONFIG_NRF52_SPI2_2M is not set
+# CONFIG_NRF52_SPI2_4M is not set
+CONFIG_NRF52_SPI2_8M=y
+
+#
+# I2C Configuration
+#
+CONFIG_NRF52_I2C0_SDA_PIN=11
+CONFIG_NRF52_I2C0_SCL_PIN=12
+# CONFIG_NRF52_I2C0_100K is not set
+# CONFIG_NRF52_I2C0_250K is not set
+CONFIG_NRF52_I2C0_400K=y
+# CONFIG_NRF52_I2C_DYNTIMEO is not set
+CONFIG_NRF52_I2CTIMEOSEC=0
+CONFIG_NRF52_I2CTIMEOMS=500
+CONFIG_NRF52_I2CTIMEOTICKS=500
+# CONFIG_NRF52_I2C_DUTY16_9 is not set
+
+#
+# QDecoder Configuration
+#
+CONFIG_NRF52_QDEC_PHASE_A=26
+CONFIG_NRF52_QDEC_PHASE_B=27
+# CONFIG_NRF52_QDEC_LED is not set
+
+#
+# Architecture Options
+#
+# CONFIG_ARCH_NOINTC is not set
+# CONFIG_ARCH_VECNOTIRQ is not set
+# CONFIG_ARCH_DMA is not set
+CONFIG_ARCH_HAVE_IRQPRIO=y
+# CONFIG_ARCH_L2CACHE is not set
+# CONFIG_ARCH_HAVE_COHERENT_DCACHE is not set
+# CONFIG_ARCH_HAVE_ADDRENV is not set
+# CONFIG_ARCH_NEED_ADDRENV_MAPPING is not set
+# CONFIG_ARCH_HAVE_MULTICPU is not set
+CONFIG_ARCH_HAVE_VFORK=y
+# CONFIG_ARCH_HAVE_MMU is not set
+CONFIG_ARCH_HAVE_MPU=y
+# CONFIG_ARCH_NAND_HWECC is not set
+# CONFIG_ARCH_HAVE_EXTCLK is not set
+# CONFIG_ARCH_HAVE_POWEROFF is not set
+CONFIG_ARCH_HAVE_RESET=y
+CONFIG_ARCH_USE_MPU=y
+CONFIG_ARCH_IRQPRIO=y
+CONFIG_ARCH_STACKDUMP=y
+# CONFIG_ENDIAN_BIG is not set
+# CONFIG_ARCH_IDLE_CUSTOM is not set
+# CONFIG_ARCH_HAVE_RAMFUNCS is not set
+CONFIG_ARCH_HAVE_RAMVECTORS=y
+# CONFIG_ARCH_RAMVECTORS is not set
+# CONFIG_ARCH_MINIMAL_VECTORTABLE is not set
+
+#
+# Board Settings
+#
+CONFIG_BOARD_LOOPSPERMSEC=8499
+# CONFIG_ARCH_CALIBRATION is not set
+
+#
+# Interrupt options
+#
+CONFIG_ARCH_HAVE_INTERRUPTSTACK=y
+CONFIG_ARCH_INTERRUPTSTACK=2048
+CONFIG_ARCH_HAVE_HIPRI_INTERRUPT=y
+# CONFIG_ARCH_HIPRI_INTERRUPT is not set
+
+#
+# Boot options
+#
+# CONFIG_BOOT_RUNFROMEXTSRAM is not set
+CONFIG_BOOT_RUNFROMFLASH=y
+# CONFIG_BOOT_RUNFROMISRAM is not set
+# CONFIG_BOOT_RUNFROMSDRAM is not set
+# CONFIG_BOOT_COPYTORAM is not set
+
+#
+# Boot Memory Configuration
+#
+CONFIG_RAM_START=0x20000000
+CONFIG_RAM_SIZE=65536
+# CONFIG_ARCH_HAVE_SDRAM is not set
+
+#
+# Board Selection
+#
+# CONFIG_ARCH_BOARD_NRF52832_DK is not set
+CONFIG_ARCH_BOARD_FAST_API_DEBUG=y
+# CONFIG_ARCH_BOARD_CUSTOM is not set
+CONFIG_ARCH_BOARD="fast_api_debug"
+
+#
+# Common Board Options
+#
+CONFIG_ARCH_HAVE_LEDS=y
+# CONFIG_ARCH_LEDS is not set
+CONFIG_ARCH_HAVE_BUTTONS=y
+# CONFIG_ARCH_BUTTONS is not set
+CONFIG_ARCH_HAVE_IRQBUTTONS=y
+
+#
+# Board-Specific Options
+#
+CONFIG_ZEUS1=y
+# CONFIG_ZEUS2 is not set
+CONFIG_ZGLUE_FAST=y
+# CONFIG_BOARD_CRASHDUMP is not set
+CONFIG_LIB_BOARDCTL=y
+# CONFIG_BOARDCTL_RESET is not set
+# CONFIG_BOARDCTL_UNIQUEID is not set
+# CONFIG_BOARDCTL_TSCTEST is not set
+# CONFIG_BOARDCTL_GRAPHICS is not set
+# CONFIG_BOARDCTL_IOCTL is not set
+
+#
+# RTOS Features
+#
+CONFIG_DISABLE_OS_API=y
+# CONFIG_DISABLE_POSIX_TIMERS is not set
+# CONFIG_DISABLE_PTHREAD is not set
+# CONFIG_DISABLE_SIGNALS is not set
+# CONFIG_DISABLE_MQUEUE is not set
+# CONFIG_DISABLE_ENVIRON is not set
+
+#
+# Clocks and Timers
+#
+CONFIG_ARCH_HAVE_TICKLESS=y
+# CONFIG_SCHED_TICKLESS is not set
+CONFIG_USEC_PER_TICK=10000
+# CONFIG_SYSTEM_TIME64 is not set
+# CONFIG_CLOCK_MONOTONIC is not set
+# CONFIG_ARCH_HAVE_TIMEKEEPING is not set
+# CONFIG_JULIAN_TIME is not set
+CONFIG_START_YEAR=2017
+CONFIG_START_MONTH=1
+CONFIG_START_DAY=1
+CONFIG_MAX_WDOGPARMS=2
+CONFIG_PREALLOC_WDOGS=8
+CONFIG_WDOG_INTRESERVE=1
+CONFIG_PREALLOC_TIMERS=4
+
+#
+# Tasks and Scheduling
+#
+# CONFIG_SPINLOCK is not set
+# CONFIG_INIT_NONE is not set
+CONFIG_INIT_ENTRYPOINT=y
+# CONFIG_INIT_FILEPATH is not set
+CONFIG_USER_ENTRYPOINT="fast_api_main"
+CONFIG_RR_INTERVAL=200
+# CONFIG_SCHED_SPORADIC is not set
+CONFIG_TASK_NAME_SIZE=0
+CONFIG_MAX_TASKS=16
+# CONFIG_SCHED_HAVE_PARENT is not set
+CONFIG_SCHED_WAITPID=y
+
+#
+# Pthread Options
+#
+CONFIG_MUTEX_TYPES=y
+CONFIG_NPTHREAD_KEYS=4
+# CONFIG_PTHREAD_CLEANUP is not set
+# CONFIG_CANCELLATION_POINTS is not set
+
+#
+# Performance Monitoring
+#
+# CONFIG_SCHED_CPULOAD is not set
+# CONFIG_SCHED_INSTRUMENTATION is not set
+
+#
+# Files and I/O
+#
+CONFIG_DEV_CONSOLE=y
+# CONFIG_FDCLONE_DISABLE is not set
+# CONFIG_FDCLONE_STDIO is not set
+CONFIG_SDCLONE_DISABLE=y
+CONFIG_NFILE_DESCRIPTORS=8
+CONFIG_NFILE_STREAMS=8
+CONFIG_NAME_MAX=32
+# CONFIG_PRIORITY_INHERITANCE is not set
+
+#
+# RTOS hooks
+#
+CONFIG_BOARD_INITIALIZE=y
+# CONFIG_BOARD_INITTHREAD is not set
+# CONFIG_SCHED_STARTHOOK is not set
+# CONFIG_SCHED_ATEXIT is not set
+# CONFIG_SCHED_ONEXIT is not set
+CONFIG_SIG_EVTHREAD=y
+
+#
+# Signal Numbers
+#
+CONFIG_SIG_SIGUSR1=1
+CONFIG_SIG_SIGUSR2=2
+CONFIG_SIG_SIGALARM=3
+CONFIG_SIG_SIGCONDTIMEDOUT=16
+CONFIG_SIG_SIGWORK=17
+
+#
+# POSIX Message Queue Options
+#
+CONFIG_PREALLOC_MQ_MSGS=4
+CONFIG_MQ_MAXMSGSIZE=32
+# CONFIG_MODULE is not set
+
+#
+# Work queue support
+#
+CONFIG_SCHED_WORKQUEUE=y
+# CONFIG_SCHED_HPWORK is not set
+CONFIG_SCHED_LPWORK=y
+CONFIG_SCHED_LPNTHREADS=1
+CONFIG_SCHED_LPWORKPRIORITY=50
+CONFIG_SCHED_LPWORKPERIOD=50000
+CONFIG_SCHED_LPWORKSTACKSIZE=2048
+
+#
+# Stack and heap information
+#
+CONFIG_IDLETHREAD_STACKSIZE=1024
+CONFIG_USERMAIN_STACKSIZE=2048
+CONFIG_PTHREAD_STACK_MIN=256
+CONFIG_PTHREAD_STACK_DEFAULT=2048
+# CONFIG_LIB_SYSCALL is not set
+
+#
+# Device Drivers
+#
+CONFIG_DISABLE_POLL=y
+CONFIG_DEV_NULL=y
+CONFIG_DEV_ZERO=y
+CONFIG_ARCH_HAVE_RNG=y
+CONFIG_DEV_RANDOM=y
+# CONFIG_DEV_URANDOM is not set
+CONFIG_DEV_LOOP=y
+
+#
+# Buffering
+#
+# CONFIG_DRVR_WRITEBUFFER is not set
+# CONFIG_DRVR_READAHEAD is not set
+# CONFIG_RAMDISK is not set
+# CONFIG_CAN is not set
+# CONFIG_ARCH_HAVE_PWM_PULSECOUNT is not set
+CONFIG_ARCH_HAVE_PWM_MULTICHAN=y
+CONFIG_PWM=y
+CONFIG_PWM_MULTICHAN=y
+CONFIG_PWM_NCHANNELS=4
+CONFIG_ARCH_HAVE_I2CRESET=y
+CONFIG_I2C=y
+# CONFIG_I2C_SLAVE is not set
+# CONFIG_I2C_POLLED is not set
+# CONFIG_I2C_RESET is not set
+# CONFIG_I2C_TRACE is not set
+CONFIG_I2C_DRIVER=y
+# CONFIG_ARCH_HAVE_SPI_CRCGENERATION is not set
+# CONFIG_ARCH_HAVE_SPI_CS_CONTROL is not set
+CONFIG_ARCH_HAVE_SPI_BITORDER=y
+CONFIG_SPI=y
+# CONFIG_SPI_SLAVE is not set
+CONFIG_SPI_EXCHANGE=y
+# CONFIG_SPI_CMDDATA is not set
+# CONFIG_SPI_CALLBACK is not set
+# CONFIG_SPI_HWFEATURES is not set
+# CONFIG_SPI_BITORDER is not set
+# CONFIG_SPI_CS_DELAY_CONTROL is not set
+# CONFIG_SPI_DRIVER is not set
+# CONFIG_SPI_BITBANG is not set
+CONFIG_I2S=y
+
+#
+# Timer Driver Support
+#
+CONFIG_TIMER=y
+# CONFIG_ONESHOT is not set
+# CONFIG_RTC is not set
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_DEVPATH="/dev/watchdog0"
+# CONFIG_TIMERS_CS2100CP is not set
+CONFIG_ANALOG=y
+CONFIG_ADC=y
+CONFIG_ADC_FIFOSIZE=8
+# CONFIG_ADC_ADS1242 is not set
+# CONFIG_ADC_ADS125X is not set
+# CONFIG_ADC_PGA11X is not set
+# CONFIG_DAC is not set
+CONFIG_COMP=y
+# CONFIG_AUDIO_DEVICES is not set
+# CONFIG_VIDEO_DEVICES is not set
+# CONFIG_BCH is not set
+# CONFIG_INPUT is not set
+
+#
+# IO Expander/GPIO Support
+#
+# CONFIG_IOEXPANDER is not set
+# CONFIG_DEV_GPIO is not set
+
+#
+# LCD Driver Support
+#
+# CONFIG_LCD is not set
+# CONFIG_SLCD is not set
+
+#
+# LED Support
+#
+# CONFIG_USERLED is not set
+# CONFIG_RGBLED is not set
+# CONFIG_PCA9635PW is not set
+# CONFIG_NCP5623C is not set
+# CONFIG_MMCSD is not set
+# CONFIG_MODEM is not set
+# CONFIG_MTD is not set
+# CONFIG_EEPROM is not set
+# CONFIG_PIPES is not set
+# CONFIG_PM is not set
+# CONFIG_POWER is not set
+CONFIG_SENSORS=y
+CONFIG_MC3672=y
+CONFIG_MC3672_ADDR=0x4c
+# CONFIG_BMM150 is not set
+# CONFIG_AS5048B is not set
+# CONFIG_BH1750FVI is not set
+# CONFIG_BMG160 is not set
+# CONFIG_BMP180 is not set
+# CONFIG_SENSORS_L3GD20 is not set
+# CONFIG_SENSOR_KXTJ9 is not set
+# CONFIG_LIS3DSH is not set
+# CONFIG_LIS331DL is not set
+# CONFIG_SN_LSM9DS1 is not set
+# CONFIG_MB7040 is not set
+# CONFIG_MLX90393 is not set
+# CONFIG_MCP9844 is not set
+# CONFIG_MS58XX is not set
+CONFIG_MS58XX_VDD=30
+# CONFIG_MPL115A is not set
+# CONFIG_SENSORS_ADXL345 is not set
+# CONFIG_MAX31855 is not set
+# CONFIG_MAX6675 is not set
+# CONFIG_LIS3MDL is not set
+# CONFIG_LM75 is not set
+# CONFIG_LM92 is not set
+# CONFIG_QENCODER is not set
+CONFIG_QDECODER=y
+# CONFIG_VEML6070 is not set
+# CONFIG_XEN1210 is not set
+# CONFIG_ZEROCROSS is not set
+CONFIG_SERIAL=y
+# CONFIG_DEV_LOWCONSOLE is not set
+# CONFIG_SERIAL_REMOVABLE is not set
+CONFIG_SERIAL_CONSOLE=y
+# CONFIG_16550_UART is not set
+# CONFIG_UART_SERIALDRIVER is not set
+CONFIG_UART0_SERIALDRIVER=y
+# CONFIG_UART1_SERIALDRIVER is not set
+# CONFIG_UART2_SERIALDRIVER is not set
+# CONFIG_UART3_SERIALDRIVER is not set
+# CONFIG_UART4_SERIALDRIVER is not set
+# CONFIG_UART5_SERIALDRIVER is not set
+# CONFIG_UART6_SERIALDRIVER is not set
+# CONFIG_UART7_SERIALDRIVER is not set
+# CONFIG_UART8_SERIALDRIVER is not set
+# CONFIG_SCI0_SERIALDRIVER is not set
+# CONFIG_SCI1_SERIALDRIVER is not set
+# CONFIG_USART0_SERIALDRIVER is not set
+# CONFIG_USART1_SERIALDRIVER is not set
+# CONFIG_USART2_SERIALDRIVER is not set
+# CONFIG_USART3_SERIALDRIVER is not set
+# CONFIG_USART4_SERIALDRIVER is not set
+# CONFIG_USART5_SERIALDRIVER is not set
+# CONFIG_USART6_SERIALDRIVER is not set
+# CONFIG_USART7_SERIALDRIVER is not set
+# CONFIG_USART8_SERIALDRIVER is not set
+# CONFIG_OTHER_UART_SERIALDRIVER is not set
+CONFIG_MCU_SERIAL=y
+CONFIG_STANDARD_SERIAL=y
+# CONFIG_SERIAL_IFLOWCONTROL is not set
+# CONFIG_SERIAL_OFLOWCONTROL is not set
+# CONFIG_SERIAL_DMA is not set
+# CONFIG_SERIAL_TIOCSERGSTRUCT is not set
+CONFIG_ARCH_HAVE_SERIAL_TERMIOS=y
+CONFIG_UART0_SERIAL_CONSOLE=y
+# CONFIG_OTHER_SERIAL_CONSOLE is not set
+# CONFIG_NO_SERIAL_CONSOLE is not set
+
+#
+# UART0 Configuration
+#
+CONFIG_UART0_RXBUFSIZE=256
+CONFIG_UART0_TXBUFSIZE=256
+CONFIG_UART0_BAUD=115200
+CONFIG_UART0_BITS=8
+CONFIG_UART0_PARITY=0
+CONFIG_UART0_2STOP=0
+# CONFIG_UART0_IFLOWCONTROL is not set
+# CONFIG_UART0_OFLOWCONTROL is not set
+# CONFIG_UART0_DMA is not set
+# CONFIG_PSEUDOTERM is not set
+# CONFIG_USBDEV is not set
+# CONFIG_USBHOST is not set
+# CONFIG_HAVE_USBTRACE is not set
+# CONFIG_DRIVERS_WIRELESS is not set
+# CONFIG_DRIVERS_CONTACTLESS is not set
+
+#
+# System Logging
+#
+# CONFIG_ARCH_SYSLOG is not set
+# CONFIG_RAMLOG is not set
+# CONFIG_SYSLOG_INTBUFFER is not set
+# CONFIG_SYSLOG_TIMESTAMP is not set
+CONFIG_SYSLOG_SERIAL_CONSOLE=y
+# CONFIG_SYSLOG_CHAR is not set
+CONFIG_SYSLOG_CONSOLE=y
+# CONFIG_SYSLOG_NONE is not set
+# CONFIG_SYSLOG_FILE is not set
+# CONFIG_SYSLOG_CHARDEV is not set
+CONFIG_ARCH_FAST_ZEUS=y
+CONFIG_ARCH_VIRTUAL_GPIO=y
+CONFIG_TARGET_DRIVER="gpio_api"
+
+#
+# Networking Support
+#
+# CONFIG_ARCH_HAVE_NET is not set
+# CONFIG_ARCH_HAVE_PHY is not set
+# CONFIG_NET is not set
+
+#
+# Crypto API
+#
+# CONFIG_CRYPTO is not set
+
+#
+# File Systems
+#
+
+#
+# File system configuration
+#
+# CONFIG_DISABLE_MOUNTPOINT is not set
+# CONFIG_FS_AUTOMOUNTER is not set
+# CONFIG_DISABLE_PSEUDOFS_OPERATIONS is not set
+# CONFIG_PSEUDOFS_SOFTLINKS is not set
+CONFIG_FS_READABLE=y
+CONFIG_FS_WRITABLE=y
+# CONFIG_FS_AIO is not set
+# CONFIG_FS_NAMED_SEMAPHORES is not set
+CONFIG_FS_MQUEUE_MPATH="/var/mqueue"
+# CONFIG_FS_RAMMAP is not set
+CONFIG_FS_FAT=y
+# CONFIG_FAT_LCNAMES is not set
+CONFIG_FAT_LFN=y
+CONFIG_FAT_MAXFNAME=32
+CONFIG_FS_FATTIME=y
+# CONFIG_FAT_FORCE_INDIRECT is not set
+# CONFIG_FAT_DMAMEMORY is not set
+# CONFIG_FAT_DIRECT_RETRY is not set
+# CONFIG_FS_NXFFS is not set
+CONFIG_FS_ROMFS=y
+CONFIG_FS_TMPFS=y
+CONFIG_FS_TMPFS_BLOCKSIZE=512
+CONFIG_FS_TMPFS_DIRECTORY_ALLOCGUARD=64
+CONFIG_FS_TMPFS_DIRECTORY_FREEGUARD=128
+CONFIG_FS_TMPFS_FILE_ALLOCGUARD=512
+CONFIG_FS_TMPFS_FILE_FREEGUARD=1024
+# CONFIG_FS_SMARTFS is not set
+# CONFIG_FS_BINFS is not set
+CONFIG_FS_PROCFS=y
+CONFIG_FS_PROCFS_REGISTER=y
+
+#
+# Exclude individual procfs entries
+#
+# CONFIG_FS_PROCFS_EXCLUDE_PROCESS is not set
+# CONFIG_FS_PROCFS_EXCLUDE_UPTIME is not set
+# CONFIG_FS_PROCFS_EXCLUDE_MOUNTS is not set
+# CONFIG_FS_PROCFS_EXCLUDE_MTD is not set
+# CONFIG_FS_PROCFS_EXCLUDE_PARTITIONS is not set
+# CONFIG_FS_UNIONFS is not set
+
+#
+# Graphics Support
+#
+# CONFIG_NX is not set
+
+#
+# Memory Management
+#
+# CONFIG_MM_SMALL is not set
+CONFIG_MM_REGIONS=1
+# CONFIG_ARCH_HAVE_HEAP2 is not set
+# CONFIG_GRAN is not set
+
+#
+# Audio Support
+#
+CONFIG_AUDIO=y
+# CONFIG_AUDIO_MULTI_SESSION is not set
+
+#
+# Audio Buffer Configuration
+#
+# CONFIG_AUDIO_LARGE_BUFFERS is not set
+CONFIG_AUDIO_NUM_BUFFERS=2
+CONFIG_AUDIO_BUFFER_NUMBYTES=8192
+# CONFIG_AUDIO_DRIVER_SPECIFIC_BUFFERS is not set
+
+#
+# Supported Audio Formats
+#
+# CONFIG_AUDIO_FORMAT_AC3 is not set
+# CONFIG_AUDIO_FORMAT_DTS is not set
+CONFIG_AUDIO_FORMAT_PCM=y
+CONFIG_AUDIO_FORMAT_MP3=y
+# CONFIG_AUDIO_FORMAT_MIDI is not set
+# CONFIG_AUDIO_FORMAT_WMA is not set
+# CONFIG_AUDIO_FORMAT_OGG_VORBIS is not set
+
+#
+# Exclude Specific Audio Features
+#
+# CONFIG_AUDIO_EXCLUDE_VOLUME is not set
+# CONFIG_AUDIO_EXCLUDE_BALANCE is not set
+CONFIG_AUDIO_EXCLUDE_EQUALIZER=y
+# CONFIG_AUDIO_EXCLUDE_TONE is not set
+# CONFIG_AUDIO_EXCLUDE_PAUSE_RESUME is not set
+# CONFIG_AUDIO_EXCLUDE_STOP is not set
+# CONFIG_AUDIO_EXCLUDE_FFORWARD is not set
+CONFIG_AUDIO_EXCLUDE_REWIND=y
+# CONFIG_AUDIO_CUSTOM_DEV_PATH is not set
+
+#
+# Wireless Support
+#
+
+#
+# Binary Loader
+#
+# CONFIG_BINFMT_DISABLE is not set
+# CONFIG_BINFMT_EXEPATH is not set
+# CONFIG_NXFLAT is not set
+# CONFIG_ELF is not set
+CONFIG_BUILTIN=y
+# CONFIG_PIC is not set
+# CONFIG_SYMTAB_ORDEREDBYNAME is not set
+
+#
+# Library Routines
+#
+
+#
+# Standard C Library Options
+#
+
+#
+# Standard C I/O
+#
+# CONFIG_STDIO_DISABLE_BUFFERING is not set
+CONFIG_STDIO_BUFFER_SIZE=64
+CONFIG_STDIO_LINEBUFFER=y
+CONFIG_NUNGET_CHARS=2
+# CONFIG_NOPRINTF_FIELDWIDTH is not set
+CONFIG_LIBC_FLOATINGPOINT=y
+CONFIG_LIBC_LONG_LONG=y
+# CONFIG_LIBC_SCANSET is not set
+# CONFIG_EOL_IS_CR is not set
+# CONFIG_EOL_IS_LF is not set
+# CONFIG_EOL_IS_BOTH_CRLF is not set
+CONFIG_EOL_IS_EITHER_CRLF=y
+# CONFIG_MEMCPY_VIK is not set
+CONFIG_LIBM=y
+
+#
+# Architecture-Specific Support
+#
+CONFIG_ARCH_LOWPUTC=y
+# CONFIG_ARCH_ROMGETC is not set
+# CONFIG_LIBC_ARCH_MEMCPY is not set
+# CONFIG_LIBC_ARCH_MEMCMP is not set
+# CONFIG_LIBC_ARCH_MEMMOVE is not set
+# CONFIG_LIBC_ARCH_MEMSET is not set
+# CONFIG_LIBC_ARCH_STRCHR is not set
+# CONFIG_LIBC_ARCH_STRCMP is not set
+# CONFIG_LIBC_ARCH_STRCPY is not set
+# CONFIG_LIBC_ARCH_STRNCPY is not set
+# CONFIG_LIBC_ARCH_STRLEN is not set
+# CONFIG_LIBC_ARCH_STRNLEN is not set
+# CONFIG_LIBC_ARCH_ELF is not set
+# CONFIG_ARMV7M_MEMCPY is not set
+
+#
+# stdlib Options
+#
+CONFIG_LIB_RAND_ORDER=1
+CONFIG_LIB_HOMEDIR="/"
+CONFIG_LIBC_TMPDIR="/tmp"
+CONFIG_LIBC_MAX_TMPFILE=32
+
+#
+# Program Execution Options
+#
+# CONFIG_LIBC_EXECFUNCS is not set
+CONFIG_POSIX_SPAWN_PROXY_STACKSIZE=1024
+CONFIG_TASK_SPAWN_DEFAULT_STACKSIZE=2048
+
+#
+# errno Decode Support
+#
+# CONFIG_LIBC_STRERROR is not set
+# CONFIG_LIBC_PERROR_STDOUT is not set
+
+#
+# memcpy/memset Options
+#
+# CONFIG_MEMSET_OPTSPEED is not set
+# CONFIG_LIBC_DLLFCN is not set
+# CONFIG_LIBC_MODLIB is not set
+# CONFIG_LIBC_WCHAR is not set
+# CONFIG_LIBC_LOCALE is not set
+
+#
+# Time/Time Zone Support
+#
+# CONFIG_LIBC_LOCALTIME is not set
+# CONFIG_TIME_EXTENDED is not set
+CONFIG_ARCH_HAVE_TLS=y
+
+#
+# Thread Local Storage (TLS)
+#
+# CONFIG_TLS is not set
+
+#
+# Network-Related Options
+#
+# CONFIG_LIBC_IPv4_ADDRCONV is not set
+# CONFIG_LIBC_IPv6_ADDRCONV is not set
+# CONFIG_LIBC_NETDB is not set
+
+#
+# NETDB Support
+#
+# CONFIG_NETDB_HOSTFILE is not set
+# CONFIG_LIBC_IOCTL_VARIADIC is not set
+CONFIG_LIB_SENDFILE_BUFSIZE=512
+
+#
+# Non-standard Library Support
+#
+# CONFIG_LIB_CRC64_FAST is not set
+# CONFIG_LIB_KBDCODEC is not set
+# CONFIG_LIB_SLCDCODEC is not set
+# CONFIG_LIB_HEX2BIN is not set
+
+#
+# Basic CXX Support
+#
+# CONFIG_C99_BOOL8 is not set
+CONFIG_HAVE_CXX=y
+# CONFIG_HAVE_CXXINITIALIZE is not set
+# CONFIG_CXX_NEWLONG is not set
+
+#
+# uClibc++ Standard C++ Library
+#
+# CONFIG_UCLIBCXX is not set
+
+#
+# Application Configuration
+#
+
+#
+# Built-In Applications
+#
+CONFIG_BUILTIN_PROXY_STACKSIZE=1024
+
+#
+# CAN Utilities
+#
+
+#
+# Examples
+#
+CONFIG_EXAMPLES_ADC=y
+CONFIG_EXAMPLES_ADC_DEVPATH="/dev/adc0"
+CONFIG_EXAMPLES_ADC_GROUPSIZE=4
+CONFIG_EXAMPLES_ADC_SWTRIG=y
+# CONFIG_EXAMPLES_BOOTLOADER is not set
+# CONFIG_EXAMPLES_BUTTONS is not set
+# CONFIG_EXAMPLES_CCTYPE is not set
+# CONFIG_EXAMPLES_CHAT is not set
+CONFIG_EXAMPLES_COMP=y
+CONFIG_EXAMPLES_COMP_DEVPATH="/dev/comp"
+CONFIG_EXAMPLE_COMP_SIGNAL_NO=20
+# CONFIG_EXAMPLES_CONFIGDATA is not set
+# CONFIG_EXAMPLES_CXXTEST is not set
+# CONFIG_EXAMPLES_DHCPD is not set
+# CONFIG_EXAMPLES_ELF is not set
+# CONFIG_EXAMPLES_FLASH_TEST is not set
+# CONFIG_EXAMPLES_FSTEST is not set
+# CONFIG_EXAMPLES_FTPC is not set
+# CONFIG_EXAMPLES_FTPD is not set
+# CONFIG_EXAMPLES_HELLO is not set
+# CONFIG_EXAMPLES_HELLO_NUTTX is not set
+# CONFIG_EXAMPLES_HELLOXX is not set
+# CONFIG_EXAMPLES_HIDKBD is not set
+# CONFIG_EXAMPLES_IGMP is not set
+# CONFIG_EXAMPLES_JSON is not set
+# CONFIG_EXAMPLES_LEDS is not set
+# CONFIG_EXAMPLES_MEDIA is not set
+# CONFIG_EXAMPLES_MM is not set
+# CONFIG_EXAMPLES_MODBUS is not set
+# CONFIG_EXAMPLES_MOUNT is not set
+CONFIG_EXAMPLES_FAST_API=y
+# CONFIG_EXAMPLES_NULL is not set
+# CONFIG_EXAMPLES_NXFFS is not set
+# CONFIG_EXAMPLES_NXHELLO is not set
+# CONFIG_EXAMPLES_NXIMAGE is not set
+# CONFIG_EXAMPLES_NX is not set
+# CONFIG_EXAMPLES_NXLINES is not set
+# CONFIG_EXAMPLES_NXTERM is not set
+# CONFIG_EXAMPLES_NXTEXT is not set
+CONFIG_EXAMPLES_OSTEST=y
+CONFIG_EXAMPLES_OSTEST_LOOPS=1
+CONFIG_EXAMPLES_OSTEST_STACKSIZE=4096
+CONFIG_EXAMPLES_OSTEST_NBARRIER_THREADS=8
+# CONFIG_EXAMPLES_PTHREAD_RW_LOCK is not set
+# CONFIG_EXAMPLES_PTHREAD_MUTEX_ROBUST is not set
+CONFIG_EXAMPLES_OSTEST_RR_RANGE=10000
+CONFIG_EXAMPLES_OSTEST_RR_RUNS=10
+CONFIG_EXAMPLES_OSTEST_FPUTESTDISABLE=y
+CONFIG_EXAMPLES_OSTEST_WAITRESULT=y
+# CONFIG_EXAMPLES_PCA9635 is not set
+# CONFIG_EXAMPLES_POSIXSPAWN is not set
+# CONFIG_EXAMPLES_POWERMONITOR is not set
+# CONFIG_EXAMPLES_PPPD is not set
+CONFIG_EXAMPLES_PWM=y
+CONFIG_EXAMPLES_PWM_DEVPATH="/dev/pwm0"
+CONFIG_EXAMPLES_PWM_FREQUENCY=500
+CONFIG_EXAMPLES_PWM_DURATION=30
+CONFIG_EXAMPLES_PWM_DUTYPCT1=50
+CONFIG_EXAMPLES_PWM_CHANNEL1=1
+CONFIG_EXAMPLES_PWM_DUTYPCT2=40
+CONFIG_EXAMPLES_PWM_CHANNEL2=2
+CONFIG_EXAMPLES_PWM_DUTYPCT3=30
+CONFIG_EXAMPLES_PWM_CHANNEL3=3
+CONFIG_EXAMPLES_PWM_DUTYPCT4=20
+CONFIG_EXAMPLES_PWM_CHANNEL4=4
+CONFIG_EXAMPLES_QDECODER=y
+CONFIG_EXAMPLES_QDECODER_DEVPATH="/dev/qdec0"
+CONFIG_EXAMPLES_QDECODER_DELAY=10
+CONFIG_EXAMPLES_RANDOM=y
+CONFIG_EXAMPLES_MAXSAMPLES=64
+CONFIG_EXAMPLES_NSAMPLES=16
+# CONFIG_EXAMPLES_RFID_READUID is not set
+# CONFIG_EXAMPLES_RGBLED is not set
+# CONFIG_EXAMPLES_ROMFS is not set
+# CONFIG_EXAMPLES_RTC is not set
+# CONFIG_EXAMPLES_SENDMAIL is not set
+CONFIG_EXAMPLES_SERIALBLASTER=y
+CONFIG_EXAMPLES_SERIALBLASTER_STACKSIZE=1024
+CONFIG_EXAMPLES_SERIALBLASTER_PRIORITY=50
+CONFIG_EXAMPLES_SERIALRX=y
+CONFIG_EXAMPLES_SERIALRX_STACKSIZE=1024
+CONFIG_EXAMPLES_SERIALRX_PRIORITY=50
+# CONFIG_EXAMPLES_SERIALRX_BUFFERED is not set
+CONFIG_EXAMPLES_SERIALRX_BUFSIZE=16
+CONFIG_EXAMPLES_SERIALRX_DEVPATH="/dev/ttyS0"
+# CONFIG_EXAMPLES_SERIALRX_PRINTHYPHEN is not set
+# CONFIG_EXAMPLES_SERIALRX_PRINTHEX is not set
+CONFIG_EXAMPLES_SERIALRX_PRINTSTR=y
+# CONFIG_EXAMPLES_SERLOOP is not set
+# CONFIG_EXAMPLES_SLCD is not set
+# CONFIG_EXAMPLES_SMART is not set
+# CONFIG_EXAMPLES_SMART_TEST is not set
+# CONFIG_EXAMPLES_SMP is not set
+# CONFIG_EXAMPLES_STAT is not set
+# CONFIG_EXAMPLES_SYSTEM is not set
+# CONFIG_EXAMPLES_TCPECHO is not set
+# CONFIG_EXAMPLES_THTTPD is not set
+# CONFIG_EXAMPLES_TIFF is not set
+CONFIG_EXAMPLES_TIMER=y
+CONFIG_EXAMPLE_TIMER_DEVNAME="/dev/timer0"
+CONFIG_EXAMPLE_TIMER_INTERVAL=1000000
+CONFIG_EXAMPLE_TIMER_DELAY=100000
+CONFIG_EXAMPLE_TIMER_NSAMPLES=20
+CONFIG_EXAMPLE_TIMER_SIGNO=17
+CONFIG_EXAMPLES_TIMER_APPNAME="timer"
+CONFIG_EXAMPLES_TIMER_STACKSIZE=2048
+CONFIG_EXAMPLES_TIMER_PRIORITY=100
+# CONFIG_EXAMPLES_TOUCHSCREEN is not set
+# CONFIG_EXAMPLES_UNIONFS is not set
+# CONFIG_EXAMPLES_USBSERIAL is not set
+CONFIG_EXAMPLES_WATCHDOG=y
+CONFIG_EXAMPLES_WATCHDOG_DEVPATH="/dev/watchdog0"
+CONFIG_EXAMPLES_WATCHDOG_PINGTIME=5000
+CONFIG_EXAMPLES_WATCHDOG_PINGDELAY=500
+CONFIG_EXAMPLES_WATCHDOG_TIMEOUT=2000
+# CONFIG_EXAMPLES_WEBSERVER is not set
+# CONFIG_EXAMPLES_XBC_TEST is not set
+
+#
+# File System Utilities
+#
+# CONFIG_FSUTILS_INIFILE is not set
+# CONFIG_FSUTILS_PASSWD is not set
+
+#
+# GPS Utilities
+#
+# CONFIG_GPSUTILS_MINMEA_LIB is not set
+
+#
+# Graphics Support
+#
+# CONFIG_TIFF is not set
+# CONFIG_GRAPHICS_TRAVELER is not set
+
+#
+# Interpreters
+#
+# CONFIG_INTERPRETERS_BAS is not set
+# CONFIG_INTERPRETERS_FICL is not set
+# CONFIG_INTERPRETERS_MICROPYTHON is not set
+# CONFIG_INTERPRETERS_MINIBASIC is not set
+# CONFIG_INTERPRETERS_PCODE is not set
+
+#
+# FreeModBus
+#
+# CONFIG_MODBUS is not set
+
+#
+# Network Utilities
+#
+# CONFIG_NETUTILS_CODECS is not set
+# CONFIG_NETUTILS_ESP8266 is not set
+# CONFIG_NETUTILS_FTPC is not set
+# CONFIG_NETUTILS_JSON is not set
+# CONFIG_NETUTILS_SMTP is not set
+
+#
+# NSH Library
+#
+CONFIG_NSH_LIBRARY=y
+# CONFIG_NSH_MOTD is not set
+
+#
+# Command Line Configuration
+#
+CONFIG_NSH_READLINE=y
+# CONFIG_NSH_CLE is not set
+CONFIG_NSH_LINELEN=64
+# CONFIG_NSH_DISABLE_SEMICOLON is not set
+# CONFIG_NSH_CMDPARMS is not set
+CONFIG_NSH_MAXARGUMENTS=6
+# CONFIG_NSH_ARGCAT is not set
+CONFIG_NSH_NESTDEPTH=3
+# CONFIG_NSH_DISABLEBG is not set
+CONFIG_NSH_BUILTIN_APPS=y
+
+#
+# Disable Individual commands
+#
+CONFIG_NSH_DISABLE_ADDROUTE=y
+# CONFIG_NSH_DISABLE_BASENAME is not set
+# CONFIG_NSH_DISABLE_CAT is not set
+# CONFIG_NSH_DISABLE_CD is not set
+# CONFIG_NSH_DISABLE_CP is not set
+# CONFIG_NSH_DISABLE_CMP is not set
+# CONFIG_NSH_DISABLE_DATE is not set
+# CONFIG_NSH_DISABLE_DD is not set
+# CONFIG_NSH_DISABLE_DF is not set
+CONFIG_NSH_DISABLE_DELROUTE=y
+# CONFIG_NSH_DISABLE_DIRNAME is not set
+# CONFIG_NSH_DISABLE_ECHO is not set
+# CONFIG_NSH_DISABLE_EXEC is not set
+# CONFIG_NSH_DISABLE_EXIT is not set
+# CONFIG_NSH_DISABLE_FREE is not set
+# CONFIG_NSH_DISABLE_GET is not set
+# CONFIG_NSH_DISABLE_HELP is not set
+# CONFIG_NSH_DISABLE_HEXDUMP is not set
+CONFIG_NSH_DISABLE_IFCONFIG=y
+CONFIG_NSH_DISABLE_IFUPDOWN=y
+# CONFIG_NSH_DISABLE_KILL is not set
+CONFIG_NSH_DISABLE_LOSETUP=y
+CONFIG_NSH_DISABLE_LOSMART=y
+# CONFIG_NSH_DISABLE_LS is not set
+# CONFIG_NSH_DISABLE_MB is not set
+# CONFIG_NSH_DISABLE_MKDIR is not set
+# CONFIG_NSH_DISABLE_MKFATFS is not set
+# CONFIG_NSH_DISABLE_MKRD is not set
+# CONFIG_NSH_DISABLE_MH is not set
+# CONFIG_NSH_DISABLE_MOUNT is not set
+# CONFIG_NSH_DISABLE_MV is not set
+# CONFIG_NSH_DISABLE_MW is not set
+CONFIG_NSH_DISABLE_PRINTF=y
+# CONFIG_NSH_DISABLE_PS is not set
+# CONFIG_NSH_DISABLE_PUT is not set
+# CONFIG_NSH_DISABLE_PWD is not set
+# CONFIG_NSH_DISABLE_RM is not set
+# CONFIG_NSH_DISABLE_RMDIR is not set
+# CONFIG_NSH_DISABLE_SET is not set
+CONFIG_NSH_DISABLE_SH=y
+# CONFIG_NSH_DISABLE_SLEEP is not set
+# CONFIG_NSH_DISABLE_TIME is not set
+CONFIG_NSH_DISABLE_TEST=y
+CONFIG_NSH_DISABLE_TELNETD=y
+# CONFIG_NSH_DISABLE_UMOUNT is not set
+# CONFIG_NSH_DISABLE_UNAME is not set
+# CONFIG_NSH_DISABLE_UNSET is not set
+# CONFIG_NSH_DISABLE_USLEEP is not set
+CONFIG_NSH_DISABLE_WGET=y
+# CONFIG_NSH_DISABLE_XD is not set
+CONFIG_NSH_MMCSDMINOR=0
+
+#
+# Configure Command Options
+#
+# CONFIG_NSH_CMDOPT_DF_H is not set
+# CONFIG_NSH_CMDOPT_DD_STATS is not set
+CONFIG_NSH_CODECS_BUFSIZE=128
+# CONFIG_NSH_CMDOPT_HEXDUMP is not set
+CONFIG_NSH_PROC_MOUNTPOINT="/proc"
+CONFIG_NSH_FILEIOSIZE=512
+
+#
+# Scripting Support
+#
+# CONFIG_NSH_DISABLESCRIPT is not set
+# CONFIG_NSH_DISABLE_ITEF is not set
+# CONFIG_NSH_DISABLE_LOOPS is not set
+# CONFIG_NSH_ROMFSETC is not set
+
+#
+# Console Configuration
+#
+CONFIG_NSH_CONSOLE=y
+# CONFIG_NSH_ALTCONDEV is not set
+CONFIG_NSH_ARCHINIT=y
+# CONFIG_NSH_LOGIN is not set
+# CONFIG_NSH_CONSOLE_LOGIN is not set
+
+#
+# NxWidgets/NxWM
+#
+
+#
+# Platform-specific Support
+#
+# CONFIG_PLATFORM_CONFIGDATA is not set
+
+#
+# System Libraries and NSH Add-Ons
+#
+# CONFIG_SYSTEM_CLE is not set
+# CONFIG_SYSTEM_CUTERM is not set
+# CONFIG_SYSTEM_FREE is not set
+# CONFIG_SYSTEM_HEX2BIN is not set
+# CONFIG_SYSTEM_HEXED is not set
+CONFIG_SYSTEM_I2CTOOL=y
+CONFIG_I2CTOOL_MINBUS=0
+CONFIG_I2CTOOL_MAXBUS=1
+CONFIG_I2CTOOL_MINADDR=0x03
+CONFIG_I2CTOOL_MAXADDR=0x77
+CONFIG_I2CTOOL_MAXREGADDR=0xff
+CONFIG_I2CTOOL_DEFFREQ=400000
+# CONFIG_SYSTEM_INSTALL is not set
+# CONFIG_SYSTEM_NXPLAYER is not set
+# CONFIG_SYSTEM_RAMTEST is not set
+CONFIG_READLINE_HAVE_EXTMATCH=y
+CONFIG_SYSTEM_READLINE=y
+CONFIG_READLINE_ECHO=y
+# CONFIG_READLINE_TABCOMPLETION is not set
+# CONFIG_READLINE_CMD_HISTORY is not set
+CONFIG_SYSTEM_SENSOR=y
+# CONFIG_SYSTEM_SUDOKU is not set
+CONFIG_SYSTEM_SYSTEM=y
+CONFIG_SYSTEM_SYSTEM_STACKSIZE=2048
+CONFIG_SYSTEM_SYSTEM_PRIORITY=100
+# CONFIG_SYSTEM_TEE is not set
+# CONFIG_SYSTEM_UBLOXMODEM is not set
+# CONFIG_SYSTEM_VI is not set
+# CONFIG_SYSTEM_ZMODEM is not set
+CONFIG_EASY_TIMER=y
+
+#
+# Wireless Libraries and NSH Add-Ons
+#
+
+#
+# Bluetooth Application Stack
+#
+# CONFIG_WIRELESS_BT is not set
+
+#
+# IEEE 802.15.4 applications
+#
+# CONFIG_IEEE802154_LIBMAC is not set
+# CONFIG_IEEE802154_LIBUTILS is not set
+# CONFIG_IEEE802154_I8SAK is not set
diff --git a/configs/fast_api_debug/include/board.h b/configs/fast_api_debug/include/board.h
new file mode 100644
index 0000000000..68dc240aca
--- /dev/null
+++ b/configs/fast_api_debug/include/board.h
@@ -0,0 +1,191 @@
+/*****************************************************************************
+ * configs/nrf52832_dk/include/board.h
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Copyright (C) 2016 Motorola Mobility, LLC.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ *****************************************************************************/
+/*****************************************************************************
+ *
+ * Copyrifht (C) 2017 zGlue Inc.  All rights reserved.
+ *
+ *****************************************************************************/
+
+#ifndef __CONFIGS_NRF52382_MDK_INCLUDE_BOARD_H
+#define __CONFIGS_NRF52382_MDK_INCLUDE_BOARD_H
+
+/*****************************************************************************
+ * Included Files
+ *****************************************************************************/
+
+#include <nuttx/config.h>
+#ifndef __ASSEMBLY__
+# include <stdint.h>
+# include <time.h>
+#endif
+
+#include "pca10040.h"
+#include <nrf52.h>
+
+/*****************************************************************************
+ * Definitions
+ *****************************************************************************/
+#define NRF52832_XXAA
+#define NRF52832_DK_SYSCLK_FREQUENCY  64000000ul
+#define NRF52_HCLK_FREQUENCY    NRF52832_DK_SYSCLK_FREQUENCY
+
+/* Clocking ******************************************************************/
+
+/* The desired timer interrupt frequency is provided by the definition
+ * CLK_TCK (see include/time.h).  CLK_TCK defines the desired number of
+ * system clock ticks per second.  That value is a user configurable setting
+ * that defaults to 100 (100 ticks per second = 10 MS interval).
+ */
+
+#define SYSTICK_RELOAD ((NRF52_HCLK_FREQUENCY / CLK_TCK) - 1)
+
+/* The size of the reload field is 24 bits.  Verify that the reload value
+ * will fit in the reload register.
+ */
+
+#if SYSTICK_RELOAD > 0x00ffffff
+#  error SYSTICK_RELOAD exceeds the range of the RELOAD register
+#endif
+
+/* Alternate function pin selections *****************************************/
+
+/* USART1:
+ *   RXD: PB7
+ *   TXD: PA6
+ *
+ * these pins are shared with the I2C1, which is used for some onboard
+ * devices, so I am disabling USART1, however I'm leaving the declarations
+ * here for documentation for anyone who might want to use it instead of
+ * those onboard devices.
+ */
+
+#define BSP_BOARD_LED_0 0
+#define BSP_BOARD_LED_1 1
+#define BSP_BOARD_LED_2 2
+#define BSP_BOARD_LED_3 3
+
+
+#ifdef BSP_LED_0
+#define BSP_LED_0_MASK (1<<BSP_LED_0)
+#else
+#define BSP_LED_0_MASK 0
+#endif
+#ifdef BSP_LED_1
+#define BSP_LED_1_MASK (1<<BSP_LED_1)
+#else
+#define BSP_LED_1_MASK 0
+#endif
+#ifdef BSP_LED_2
+#define BSP_LED_2_MASK (1<<BSP_LED_2)
+#else
+#define BSP_LED_2_MASK 0
+#endif
+#ifdef BSP_LED_3
+#define BSP_LED_3_MASK (1<<BSP_LED_3)
+#else
+#define BSP_LED_3_MASK 0
+#endif
+
+
+#define LED_STARTED                 0  /* OFF      */
+#define LED_HEAPALLOCATE            0  /* OFF      */
+#define LED_IRQSENABLED             0  /* OFF      */
+#define LED_STACKCREATED            1  /* ON       */
+#define LED_INIRQ                   2  /* NC       */
+#define LED_SIGNAL                  2  /* NC       */
+#define LED_ASSERTION               2  /* NC       */
+#define LED_PANIC                   3  /* Flashing */
+
+/* I2C */
+
+#define GPIO_I2C2_SCL    GPIO_I2C2_SCL_1     /* PB10 */
+#define GPIO_I2C2_SDA    GPIO_I2C2_SDA_1     /* PB11 */
+
+#define GPIO_I2C3_SCL    GPIO_I2C3_SCL_1     /* PC0  */
+#define GPIO_I2C3_SDA    GPIO_I2C3_SDA_1     /* PC1  */
+
+/* SPI */
+
+#define GPIO_SPI1_MISO   GPIO_SPI1_MISO_1    /* PA6  */
+#define GPIO_SPI1_MOSI   GPIO_SPI1_MOSI_1    /* PA7  */
+#define GPIO_SPI1_SCK    GPIO_SPI1_SCK_1     /* PA5  */
+#define GPIO_SPI1_NSS    GPIO_SPI1_NSS_1     /* PA4  */
+#define DMACHAN_SPI1_RX  DMACHAN_SPI1_RX_1
+#define DMACHAN_SPI1_TX  DMACHAN_SPI1_TX_1
+
+#define GPIO_SPI2_MISO   GPIO_SPI2_MISO_1    /* PB14 */
+#define GPIO_SPI2_MOSI   GPIO_SPI2_MOSI_1    /* PB15 */
+#define GPIO_SPI2_SCK    GPIO_SPI2_SCK_2     /* PB13 */
+#define GPIO_SPI2_NSS    GPIO_SPI2_NSS_2     /* PB12 */
+
+#define BOARD_PCA10040  1
+/*****************************************************************************
+ * Public Data
+ *****************************************************************************/
+
+#ifndef __ASSEMBLY__
+
+#undef EXTERN
+#if defined(__cplusplus)
+#define EXTERN extern "C"
+extern "C"
+{
+#else
+#define EXTERN extern
+#endif
+
+#define ENABLED(a)  defined(a) && a == 1
+/*****************************************************************************
+ * Public Function Prototypes
+ *****************************************************************************/
+/*****************************************************************************
+ * Name: nrf52_boardinitialize
+ *
+ * Description:
+ *   All nRF52 architectures must provide the following entry point.  This entry
+ *   point is called early in the initialization -- after all memory has been
+ *   configured and mapped but before any devices have been initialized.
+ *
+ *****************************************************************************/
+
+void nrf52_boardinitialize(void);
+
+#undef EXTERN
+#if defined(__cplusplus)
+}
+#endif
+
+#endif /* __ASSEMBLY__ */
+#endif  /* __CONFIGS_STM32L476_MDK_INCLUDE_BOARD_H */
diff --git a/configs/fast_api_debug/include/fast_api_include.h b/configs/fast_api_debug/include/fast_api_include.h
new file mode 100644
index 0000000000..b932d90e89
--- /dev/null
+++ b/configs/fast_api_debug/include/fast_api_include.h
@@ -0,0 +1,36 @@
+
+
+#if !defined(_CONFIGS_FAST_API_DEBUG_INCLUDE_FAST_API_INCLUDE_H)
+#define _CONFIGS_FAST_API_DEBUG_INCLUDE_FAST_API_INCLUDE_H
+
+/**
+ ******************************************************************************
+ * @brief fast_jtag_read writes 8 bits to the instrution register followed by
+ * 32 bits  read from the data register. This is  simple jtag read command
+ * @param instruction - 8 bit JTAG instruction code
+ * data - pointer that contains the data
+ *
+ *****************************************************************************/
+int16_t fast_jtag_read(uint8_t jtag_instruction, uint32_t *data);
+
+/**
+ ******************************************************************************
+ * @brief jtag_32b_write writes 8 bits to the instrution register followed by
+ * 32 bits to the data register. This is  simple jtag command with its data.
+ * @param instruction - 8 bit JTAG instruction code
+ * data - 32 bit data to the JTAG instruction
+ *
+ *****************************************************************************/
+int16_t fast_jtag_write(uint8_t jtag_instruction, uint32_t data);
+
+
+/**
+ ******************************************************************************
+ * @brief fast_config_file_read locate the fast config data in flash and
+ *                               pass it back to the caller (the API)
+ *
+ *****************************************************************************/
+int16_t fast_config_file_read(uint32_t offset, uint32_t length,
+                              uint16_t *buffer);
+#endif /* _CONFIGS_FAST_API_DEBUG_INCLUDE_FAST_API_INCLUDE_H */
+
diff --git a/configs/fast_api_debug/include/pca10040.h b/configs/fast_api_debug/include/pca10040.h
new file mode 100644
index 0000000000..556067cd60
--- /dev/null
+++ b/configs/fast_api_debug/include/pca10040.h
@@ -0,0 +1,244 @@
+/* Copyright (c) 2014 Nordic Semiconductor. All Rights Reserved.
+ *
+ * The information contained herein is property of Nordic Semiconductor ASA.
+ * Terms and conditions of usage are described in detail in NORDIC
+ * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.
+ *
+ * Licensees are granted free, non-transferable use of the information. NO
+ * WARRANTY of ANY KIND is provided. This heading must NOT be removed from
+ * the file.
+ *
+ */
+#ifndef PCA10040_H
+#define PCA10040_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+
+/* procfs mount point and type */
+
+#define PROCFS_MOUNT   "/proc"
+#define PROCFS_TYPE    "procfs"
+
+/* block and char device mount point */
+
+#define MTD_BLOCK_MOUNT   "/dev/mtdblock"
+#define MTD_CHAR_MOUNT    "/dev/mtd"
+
+/* the mtd partition for internal whole flash */
+
+#define PROGMEM_MTD_MINOR  0
+
+/* the fs mtd partition based on internal flash */
+
+#define PROGMEM_FS_MTD_MINOR  1
+#define INTERNAL_FLASH_MOUNT_POINT   "/internal"
+#define INTERNAL_FLASH_FS_TYPE      "vfat"
+#define INTERNAL_FLASH_FS_LABEL   "N52FAT"
+#define INTERNAL_FLASH_FS_LABEL_LEN (sizeof(INTERNAL_FLASH_FS_LABEL))
+
+
+/* the fs mtd partition based on spi nor flash */
+
+#define SPI_FLASH_FS_MTD_MINOR  2
+
+#define SPI_FLASH_FS_SMARTFS_MINOR 0
+
+#define SPI_FLASH_MOUNT_POINT   "/w25"
+#define SPI_FLASH_FS_TYPE      "vfat"
+#define SPI_FLASH_FS_LABEL   "W25FAT"
+#define SPI_FLASH_FS_LABEL_LEN (sizeof(SPI_FLASH_FS_LABEL))
+
+/* define spi cs function , if you have mutli-spi device , please
+ * special here */
+#define SPI0_FLASH_CS   24  /* fake data */
+#define SPI1_FLASH_CS   24
+#define SPI2_FLASH_CS   24  /* fake data */
+
+#define SPI0_BMM150_CS   28  /* fake data */
+#define SPI1_BMM150_CS   28
+#define SPI2_BMM150_CS   28  /* fake data */
+
+
+/* NRF52 internal Flash memory layer propose
+ * it is better to align image to 4K , 52832 page is 4K
+ *   1. no softwaredevice :
+ *     16K    : bootloader
+ *     320K    : app
+ *     others : progmem nxffs filesystem
+ *   2. BLE case:
+ *     16K    : bootloader
+ *     64K    : softdevice
+ *     320K    : app
+ *     others : progmem nxffs filesystem
+ *
+ */
+#define UNIT_1K  (1024)
+#define SYSTEM_BOOTLOADER_IMAGE_SIZE (16*UNIT_1K)   /* assume system bootloader size */
+#define SYSTEM_SOFTDEVICE_IMAGE_SIZE (128*UNIT_1K)   /* softdevice size */
+#define SYSTEM_APP_IMAGE_SIZE  (320*UNIT_1K)        /* assume system image size   */
+
+//#define ZEUS2_BOARD
+
+#if defined(ZEUS2_BOARD)
+
+// GPIO definition for Zeus2 Board
+#define LEDS_NUMBER    4
+
+#define LED_START      19
+#define LED_1          0xFF
+#define LED_2          0xFF
+#define LED_3          19
+#define LED_4          20
+#define LED_STOP       20
+
+#define LEDS_ACTIVE_STATE 0
+
+#define LEDS_INV_MASK  LEDS_MASK
+
+#define LEDS_LIST { LED_1, LED_2, LED_3, LED_4 }
+
+#define RX_PIN_NUMBER  15    // UART RX GPIO pin number
+#define TX_PIN_NUMBER  16    // UART TX GPIO pin number
+#define CTS_PIN_NUMBER 17    // UART CTS GPIO pin number
+#define RTS_PIN_NUMBER 18    // UART RTS GPIO pin number
+
+#else
+// LEDs definitions for PCA10040
+#define LEDS_NUMBER    4
+
+#define LED_START      17
+#define LED_1          17
+#define LED_2          18
+#define LED_3          19
+#define LED_4          20
+#define LED_STOP       20
+
+#define LEDS_ACTIVE_STATE 0
+
+#define LEDS_INV_MASK  LEDS_MASK
+
+#define LEDS_LIST { LED_1, LED_2, LED_3, LED_4 }
+
+#define BSP_LED_0      LED_1
+#define BSP_LED_1      LED_2
+#define BSP_LED_2      LED_3
+#define BSP_LED_3      LED_4
+
+#define BUTTONS_NUMBER 4
+
+#define BUTTON_START   13
+#define BUTTON_1       13
+#define BUTTON_2       14
+#define BUTTON_3       15
+#define BUTTON_4       16
+#define BUTTON_STOP    16
+#define BUTTON_PULL    NRF_GPIO_PIN_PULLUP
+
+#define BUTTONS_ACTIVE_STATE 0
+
+#define BUTTONS_LIST { BUTTON_1, BUTTON_2, BUTTON_3, BUTTON_4 }
+
+#define BSP_BUTTON_0   BUTTON_1
+#define BSP_BUTTON_1   BUTTON_2
+#define BSP_BUTTON_2   BUTTON_3
+#define BSP_BUTTON_3   BUTTON_4
+
+#define RX_PIN_NUMBER  8    // UART RX GPIO pin number
+#define TX_PIN_NUMBER  6    // UART TX GPIO pin number
+#define CTS_PIN_NUMBER 7    // UART CTS GPIO pin number
+#define RTS_PIN_NUMBER 5    // UART RTS GPIO pin number
+#define HWFC           true
+
+#define SPIS_MISO_PIN   28  // SPI MISO signal.
+#define SPIS_CSN_PIN    12  // SPI CSN signal.
+#define SPIS_MOSI_PIN   25  // SPI MOSI signal.
+#define SPIS_SCK_PIN    29  // SPI SCK signal.
+
+#define SPIM0_SCK_PIN   29  // SPI clock GPIO pin number.
+#define SPIM0_MOSI_PIN  25  // SPI Master Out Slave In GPIO pin number.
+#define SPIM0_MISO_PIN  28  // SPI Master In Slave Out GPIO pin number.
+#define SPIM0_SS_PIN    12  // SPI Slave Select GPIO pin number.
+
+#define SPIM1_SCK_PIN   2   // SPI clock GPIO pin number.
+#define SPIM1_MOSI_PIN  3   // SPI Master Out Slave In GPIO pin number.
+#define SPIM1_MISO_PIN  4   // SPI Master In Slave Out GPIO pin number.
+#define SPIM1_SS_PIN    5   // SPI Slave Select GPIO pin number.
+
+#define SPIM2_SCK_PIN   12  // SPI clock GPIO pin number.
+#define SPIM2_MOSI_PIN  13  // SPI Master Out Slave In GPIO pin number.
+#define SPIM2_MISO_PIN  14  // SPI Master In Slave Out GPIO pin number.
+#define SPIM2_SS_PIN    15  // SPI Slave Select GPIO pin number.
+
+// serialization APPLICATION board - temp. setup for running serialized MEMU tests
+#define SER_APP_RX_PIN              23    // UART RX pin number.
+#define SER_APP_TX_PIN              24    // UART TX pin number.
+#define SER_APP_CTS_PIN             2     // UART Clear To Send pin number.
+#define SER_APP_RTS_PIN             25    // UART Request To Send pin number.
+
+#define SER_APP_SPIM0_SCK_PIN       27     // SPI clock GPIO pin number.
+#define SER_APP_SPIM0_MOSI_PIN      2      // SPI Master Out Slave In GPIO pin number
+#define SER_APP_SPIM0_MISO_PIN      26     // SPI Master In Slave Out GPIO pin number
+#define SER_APP_SPIM0_SS_PIN        23     // SPI Slave Select GPIO pin number
+#define SER_APP_SPIM0_RDY_PIN       25     // SPI READY GPIO pin number
+#define SER_APP_SPIM0_REQ_PIN       24     // SPI REQUEST GPIO pin number
+
+// serialization CONNECTIVITY board
+#define SER_CON_RX_PIN              24    // UART RX pin number.
+#define SER_CON_TX_PIN              23    // UART TX pin number.
+#define SER_CON_CTS_PIN             25    // UART Clear To Send pin number. Not used if HWFC is set to false.
+#define SER_CON_RTS_PIN             2     // UART Request To Send pin number. Not used if HWFC is set to false.
+
+
+#define SER_CON_SPIS_SCK_PIN        27    // SPI SCK signal.
+#define SER_CON_SPIS_MOSI_PIN       2     // SPI MOSI signal.
+#define SER_CON_SPIS_MISO_PIN       26    // SPI MISO signal.
+#define SER_CON_SPIS_CSN_PIN        23    // SPI CSN signal.
+#define SER_CON_SPIS_RDY_PIN        25    // SPI READY GPIO pin number.
+#define SER_CON_SPIS_REQ_PIN        24    // SPI REQUEST GPIO pin number.
+
+#define SER_CONN_CHIP_RESET_PIN     11    // Pin used to reset connectivity chip
+
+
+// Arduino board mappings
+#define ARDUINO_SCL_PIN             27    // SCL signal pin
+#define ARDUINO_SDA_PIN             26    // SDA signal pin
+#define ARDUINO_AREF_PIN            2     // Aref pin
+#define ARDUINO_13_PIN              25    // Digital pin 13
+#define ARDUINO_12_PIN              24    // Digital pin 12
+#define ARDUINO_11_PIN              23    // Digital pin 11
+#define ARDUINO_10_PIN              22    // Digital pin 10
+#define ARDUINO_9_PIN               20    // Digital pin 9
+#define ARDUINO_8_PIN               19    // Digital pin 8
+
+#define ARDUINO_7_PIN               18    // Digital pin 7
+#define ARDUINO_6_PIN               17    // Digital pin 6
+#define ARDUINO_5_PIN               16    // Digital pin 5
+#define ARDUINO_4_PIN               15    // Digital pin 4
+#define ARDUINO_3_PIN               14    // Digital pin 3
+#define ARDUINO_2_PIN               13    // Digital pin 2
+#define ARDUINO_1_PIN               12    // Digital pin 1
+#define ARDUINO_0_PIN               11    // Digital pin 0
+
+#define ARDUINO_A0_PIN              3     // Analog channel 0
+#define ARDUINO_A1_PIN              4     // Analog channel 1
+#define ARDUINO_A2_PIN              28    // Analog channel 2
+#define ARDUINO_A3_PIN              29    // Analog channel 3
+#define ARDUINO_A4_PIN              30    // Analog channel 4
+#define ARDUINO_A5_PIN              31    // Analog channel 5
+
+#endif
+
+// Low frequency clock source to be used by the SoftDevice
+#define NRF_CLOCK_LFCLKSRC      {.source        = NRF_CLOCK_LF_SRC_XTAL,            \
+                                 .rc_ctiv       = 0,                                \
+                                 .rc_temp_ctiv  = 0,                                \
+                                 .xtal_accuracy = NRF_CLOCK_LF_XTAL_ACCURACY_20_PPM}
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // PCA10040_H
diff --git a/configs/fast_api_debug/nsh/Make.defs b/configs/fast_api_debug/nsh/Make.defs
new file mode 100644
index 0000000000..a4257a0251
--- /dev/null
+++ b/configs/fast_api_debug/nsh/Make.defs
@@ -0,0 +1,40 @@
+############################################################################
+# configs/fast_api_debug/nsh/Make.defs
+#
+#   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+#   Author: dev@ziggurat29.com
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+include ${TOPDIR}/.config
+include ${TOPDIR}/tools/Config.mk
+include ${TOPDIR}/arch/arm/src/armv7-m/Toolchain.defs
+include ${TOPDIR}/configs/$(CONFIG_ARCH_BOARD)/defaults.mk
+
diff --git a/configs/fast_api_debug/nsh/defconfig b/configs/fast_api_debug/nsh/defconfig
new file mode 100755
index 0000000000..d920b001c0
--- /dev/null
+++ b/configs/fast_api_debug/nsh/defconfig
@@ -0,0 +1,1379 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Nuttx/ Configuration
+#
+
+#
+# Build Setup
+#
+# CONFIG_EXPERIMENTAL is not set
+# CONFIG_DEFAULT_SMALL is not set
+CONFIG_HOST_LINUX=y
+# CONFIG_HOST_OSX is not set
+# CONFIG_HOST_WINDOWS is not set
+# CONFIG_HOST_OTHER is not set
+
+#
+# Build Configuration
+#
+CONFIG_APPS_DIR="../apps"
+CONFIG_BUILD_FLAT=y
+# CONFIG_BUILD_PROTECTED is not set
+# CONFIG_BUILD_2PASS is not set
+
+#
+# Binary Output Formats
+#
+# CONFIG_RRLOAD_BINARY is not set
+CONFIG_INTELHEX_BINARY=y
+# CONFIG_MOTOROLA_SREC is not set
+CONFIG_RAW_BINARY=y
+# CONFIG_UBOOT_UIMAGE is not set
+
+#
+# Customize Header Files
+#
+# CONFIG_ARCH_STDINT_H is not set
+# CONFIG_ARCH_STDBOOL_H is not set
+# CONFIG_ARCH_MATH_H is not set
+# CONFIG_ARCH_FLOAT_H is not set
+# CONFIG_ARCH_STDARG_H is not set
+# CONFIG_ARCH_DEBUG_H is not set
+
+#
+# Debug Options
+#
+CONFIG_DEBUG_ALERT=y
+CONFIG_DEBUG_FEATURES=y
+
+#
+# Debug SYSLOG Output Controls
+#
+CONFIG_DEBUG_ERROR=y
+CONFIG_DEBUG_WARN=y
+# CONFIG_DEBUG_INFO is not set
+CONFIG_DEBUG_ASSERTIONS=y
+
+#
+# Subsystem Debug Options
+#
+# CONFIG_DEBUG_AUDIO is not set
+# CONFIG_DEBUG_BINFMT is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ERROR=y
+CONFIG_DEBUG_FS_WARN=y
+# CONFIG_DEBUG_GRAPHICS is not set
+# CONFIG_DEBUG_LIB is not set
+# CONFIG_DEBUG_MM is not set
+# CONFIG_DEBUG_SCHED is not set
+
+#
+# OS Function Debug Options
+#
+CONFIG_DEBUG_IRQ=y
+CONFIG_DEBUG_IRQ_ERROR=y
+CONFIG_DEBUG_IRQ_WARN=y
+
+#
+# Driver Debug Options
+#
+# CONFIG_DEBUG_LEDS is not set
+CONFIG_DEBUG_ANALOG=y
+CONFIG_DEBUG_ANALOG_ERROR=y
+CONFIG_DEBUG_ANALOG_WARN=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_DEBUG_I2C=y
+CONFIG_DEBUG_I2C_ERROR=y
+CONFIG_DEBUG_I2C_WARN=y
+# CONFIG_DEBUG_I2S is not set
+CONFIG_DEBUG_PWM=y
+CONFIG_DEBUG_PWM_ERROR=y
+CONFIG_DEBUG_PWM_WARN=y
+CONFIG_DEBUG_SENSORS=y
+CONFIG_DEBUG_SENSORS_ERROR=y
+CONFIG_DEBUG_SENSORS_WARN=y
+CONFIG_DEBUG_SPI=y
+CONFIG_DEBUG_SPI_ERROR=y
+CONFIG_DEBUG_SPI_WARN=y
+# CONFIG_DEBUG_TIMER is not set
+# CONFIG_DEBUG_WATCHDOG is not set
+CONFIG_ARCH_HAVE_STACKCHECK=y
+# CONFIG_STACK_COLORATION is not set
+CONFIG_ARCH_HAVE_HEAPCHECK=y
+# CONFIG_HEAP_COLORATION is not set
+CONFIG_DEBUG_SYMBOLS=y
+CONFIG_ARCH_HAVE_CUSTOMOPT=y
+# CONFIG_DEBUG_NOOPT is not set
+CONFIG_DEBUG_CUSTOMOPT=y
+# CONFIG_DEBUG_FULLOPT is not set
+CONFIG_DEBUG_OPTLEVEL="-O0"
+
+#
+# System Type
+#
+CONFIG_ARCH_ARM=y
+# CONFIG_ARCH_AVR is not set
+# CONFIG_ARCH_HC is not set
+# CONFIG_ARCH_MIPS is not set
+# CONFIG_ARCH_MISOC is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_RISCV is not set
+# CONFIG_ARCH_SIM is not set
+# CONFIG_ARCH_X86 is not set
+# CONFIG_ARCH_XTENSA is not set
+# CONFIG_ARCH_Z16 is not set
+# CONFIG_ARCH_Z80 is not set
+CONFIG_ARCH="arm"
+
+#
+# ARM Options
+#
+# CONFIG_ARCH_CHIP_A1X is not set
+# CONFIG_ARCH_CHIP_C5471 is not set
+# CONFIG_ARCH_CHIP_DM320 is not set
+# CONFIG_ARCH_CHIP_EFM32 is not set
+# CONFIG_ARCH_CHIP_IMX1 is not set
+# CONFIG_ARCH_CHIP_IMX6 is not set
+# CONFIG_ARCH_CHIP_KINETIS is not set
+# CONFIG_ARCH_CHIP_KL is not set
+# CONFIG_ARCH_CHIP_LM is not set
+# CONFIG_ARCH_CHIP_TIVA is not set
+# CONFIG_ARCH_CHIP_LPC11XX is not set
+# CONFIG_ARCH_CHIP_LPC17XX is not set
+# CONFIG_ARCH_CHIP_LPC214X is not set
+# CONFIG_ARCH_CHIP_LPC2378 is not set
+# CONFIG_ARCH_CHIP_LPC31XX is not set
+# CONFIG_ARCH_CHIP_LPC43XX is not set
+# CONFIG_ARCH_CHIP_MOXART is not set
+# CONFIG_ARCH_CHIP_NUC1XX is not set
+# CONFIG_ARCH_CHIP_SAMA5 is not set
+# CONFIG_ARCH_CHIP_SAMD is not set
+# CONFIG_ARCH_CHIP_SAML is not set
+# CONFIG_ARCH_CHIP_SAM34 is not set
+# CONFIG_ARCH_CHIP_SAMV7 is not set
+# CONFIG_ARCH_CHIP_STM32 is not set
+# CONFIG_ARCH_CHIP_STM32F7 is not set
+# CONFIG_ARCH_CHIP_STM32L4 is not set
+CONFIG_ARCH_CHIP_NRF52=y
+# CONFIG_ARCH_CHIP_STR71X is not set
+# CONFIG_ARCH_CHIP_TMS570 is not set
+# CONFIG_ARCH_ARM7TDMI is not set
+# CONFIG_ARCH_ARM926EJS is not set
+# CONFIG_ARCH_ARM920T is not set
+# CONFIG_ARCH_CORTEXM0 is not set
+# CONFIG_ARCH_CORTEXM23 is not set
+# CONFIG_ARCH_CORTEXM3 is not set
+# CONFIG_ARCH_CORTEXM33 is not set
+CONFIG_ARCH_CORTEXM4=y
+# CONFIG_ARCH_CORTEXM7 is not set
+# CONFIG_ARCH_CORTEXA5 is not set
+# CONFIG_ARCH_CORTEXA8 is not set
+# CONFIG_ARCH_CORTEXA9 is not set
+# CONFIG_ARCH_CORTEXR4 is not set
+# CONFIG_ARCH_CORTEXR4F is not set
+# CONFIG_ARCH_CORTEXR5 is not set
+# CONFIG_ARCH_CORTEX5F is not set
+# CONFIG_ARCH_CORTEXR7 is not set
+# CONFIG_ARCH_CORTEXR7F is not set
+CONFIG_ARCH_FAMILY="armv7-m"
+CONFIG_ARCH_CHIP="nrf52"
+# CONFIG_ARM_TOOLCHAIN_IAR is not set
+CONFIG_ARM_TOOLCHAIN_GNU=y
+# CONFIG_ARMV7M_USEBASEPRI is not set
+CONFIG_ARCH_HAVE_CMNVECTOR=y
+CONFIG_ARMV7M_CMNVECTOR=y
+# CONFIG_ARMV7M_LAZYFPU is not set
+CONFIG_ARCH_HAVE_FPU=y
+# CONFIG_ARCH_HAVE_DPFPU is not set
+CONFIG_ARCH_FPU=y
+# CONFIG_ARCH_HAVE_TRUSTZONE is not set
+CONFIG_ARM_HAVE_MPU_UNIFIED=y
+CONFIG_ARM_MPU=y
+CONFIG_ARM_MPU_NREGIONS=8
+# CONFIG_DEBUG_HARDFAULT is not set
+
+#
+# ARMV7M Configuration Options
+#
+# CONFIG_ARMV7M_HAVE_ICACHE is not set
+# CONFIG_ARMV7M_HAVE_DCACHE is not set
+# CONFIG_ARMV7M_HAVE_ITCM is not set
+# CONFIG_ARMV7M_HAVE_DTCM is not set
+# CONFIG_ARMV7M_TOOLCHAIN_IARL is not set
+# CONFIG_ARMV7M_TOOLCHAIN_BUILDROOT is not set
+# CONFIG_ARMV7M_TOOLCHAIN_CODEREDL is not set
+# CONFIG_ARMV7M_TOOLCHAIN_CODESOURCERYL is not set
+CONFIG_ARMV7M_TOOLCHAIN_GNU_EABIL=y
+CONFIG_ARMV7M_HAVE_STACKCHECK=y
+# CONFIG_ARMV7M_STACKCHECK is not set
+# CONFIG_ARMV7M_ITMSYSLOG is not set
+CONFIG_SERIAL_TERMIOS=y
+# CONFIG_SERIAL_DISABLE_REORDERING is not set
+
+#
+# NRF52 Configuration Options
+#
+CONFIG_ARCH_CHIP_NRF52832=y
+# CONFIG_ARCH_CHIP_NRF52840 is not set
+CONFIG_NRF52_NRF52832_HAVE_PERIPH=y
+# CONFIG_NRF52_NRF52840_HAVE_PERIPH is not set
+# CONFIG_NRF52832_FLASH_256KB is not set
+CONFIG_NRF52832_FLASH_512KB=y
+
+#
+# NRF52 Peripherals
+#
+
+#
+# NRF52 Peripheral Support
+#
+# CONFIG_NRF52_HAVE_LTDC is not set
+CONFIG_NRF52_HAVE_LPTIM1=y
+CONFIG_NRF52_HAVE_LPTIM2=y
+CONFIG_NRF52_HAVE_COMP=y
+CONFIG_NRF52_HAVE_I2S=y
+CONFIG_NRF52_HAVE_UART0=y
+CONFIG_NRF52_HAVE_BLUETOOTH=y
+CONFIG_NRF52_HAVE_RNG=y
+# CONFIG_NRF52_BLUETOOTH is not set
+CONFIG_GPIO_AS_PINRESET=21
+CONFIG_FLASH_ORIGIN="0"
+CONFIG_FLASH_LENGTH="0x80000"
+CONFIG_SRAM_ORIGIN="0x20000000"
+CONFIG_SRAM_LENGTH="0x10000"
+# CONFIG_NRF52_DAC is not set
+CONFIG_NRF52_I2C=y
+# CONFIG_NRF52_GPIOTE is not set
+# CONFIG_NRF52_SPI is not set
+CONFIG_NRF52_LEGACY_SPI=y
+CONFIG_NRF52_UART=y
+# CONFIG_NRF52_LPTIM is not set
+CONFIG_NRF52_JTAG=y
+CONFIG_NRF52_ADC=y
+CONFIG_NRF52_ADC_CHANNEL=1
+CONFIG_NRF52_COMP_LPCOMP=y
+CONFIG_NRF52_COMP=y
+# CONFIG_NRF52_LPCOMP is not set
+CONFIG_NRF52_COMP_MODE_SE=y
+# CONFIG_NRF52_COMP_MODE_DIFF is not set
+CONFIG_NRF52_COMP_SPEED_LOW=y
+# CONFIG_NRF52_COMP_SPEED_NORMAL is not set
+# CONFIG_NRF52_COMP_SPEED_HIGH is not set
+CONFIG_NRF52_COMP_INPUT=2
+CONFIG_NRF52_COMP_REF=1
+CONFIG_NRF52_COMP_EXT_REF=1
+CONFIG_NRF52_COMP_HYST=1
+CONFIG_NRF52_COMP_TH_DOWN=60
+CONFIG_NRF52_COMP_TH_UP=63
+CONFIG_NRF52_COMP_ISOURCE=0
+# CONFIG_NRF52_CRC is not set
+# CONFIG_NRF52_TSC is not set
+# CONFIG_NRF52_OTGFS is not set
+# CONFIG_NRF52_PPI is not set
+CONFIG_NRF52_AES=y
+CONFIG_NRF52_RNG=y
+CONFIG_NRF52_I2S=y
+CONFIG_NRF52_I2S_LOWPRIO=y
+# CONFIG_NRF52_I2S_HIGHPRIO is not set
+# CONFIG_NRF52_FMC is not set
+CONFIG_NRF52_PWR=y
+CONFIG_NRF52_TIM0=y
+# CONFIG_NRF52_TIM1 is not set
+# CONFIG_NRF52_TIM2 is not set
+# CONFIG_NRF52_TIM3 is not set
+# CONFIG_NRF52_TIM4 is not set
+
+#
+# RTC specific configs available when 'device drivers/timer support/rtc' is enabled.
+#
+# CONFIG_NRF52_SPI0 is not set
+# CONFIG_NRF52_LEGACY_SPI0 is not set
+# CONFIG_NRF52_SPI1 is not set
+# CONFIG_NRF52_LEGACY_SPI1 is not set
+# CONFIG_NRF52_SPI2 is not set
+CONFIG_NRF52_LEGACY_SPI2=y
+CONFIG_NRF52_UART0=y
+CONFIG_NRF52_I2C0=y
+# CONFIG_NRF52_I2C1 is not set
+# CONFIG_NRF52_DAC1 is not set
+# CONFIG_NRF52_DAC2 is not set
+# CONFIG_NRF52_OPAMP is not set
+# CONFIG_NRF52_LPTIM1 is not set
+# CONFIG_NRF52_SWPMI is not set
+# CONFIG_NRF52_LPTIM2 is not set
+CONFIG_NRF52_SYSCFG=y
+CONFIG_NRF52_FIREWALL=y
+# CONFIG_NRF52_UART1 is not set
+# CONFIG_NRF52_DFSDM is not set
+# CONFIG_NRF52_BKPSRAM is not set
+CONFIG_NRF52_PWM=y
+CONFIG_NRF52_WDG=y
+CONFIG_NRF52_QDECODER=y
+CONFIG_NRF52_FLASH_PREFETCH=y
+CONFIG_NRF52_PROCFS_DEVID=y
+CONFIG_NRF52_DISABLE_IDLE_SLEEP_DURING_DEBUG=y
+# CONFIG_ARCH_BOARD_NRF52_CUSTOM_CLOCKCONFIG is not set
+
+#
+# Timer Configuration
+#
+# CONFIG_NRF52_ONESHOT is not set
+# CONFIG_NRF52_FREERUN is not set
+# CONFIG_NRF52_TIM0_PWM is not set
+CONFIG_NRF52_PWM_MULTICHAN=y
+
+#
+# PWM Configuration
+#
+CONFIG_NRF52_PWM_M0=y
+CONFIG_NRF52_PWM_M0_CLK_FREQUENCY=16000000
+CONFIG_NRF52_PWM_M0_CHANNEL1=y
+CONFIG_NRF52_PWM_M0_CHANNEL1_GPIO_PIN=17
+CONFIG_NRF52_PWM_M0_CHANNEL2=y
+CONFIG_NRF52_PWM_M0_CHANNEL2_GPIO_PIN=18
+CONFIG_NRF52_PWM_M0_CHANNEL3=y
+CONFIG_NRF52_PWM_M0_CHANNEL3_GPIO_PIN=19
+CONFIG_NRF52_PWM_M0_CHANNEL4=y
+CONFIG_NRF52_PWM_M0_CHANNEL4_GPIO_PIN=20
+# CONFIG_NRF52_PWM_M1 is not set
+# CONFIG_NRF52_PWM_M2 is not set
+CONFIG_NRF52_HAVE_UART1=y
+
+#
+# U[S]ART Configuration
+#
+# CONFIG_NRF52_FLOWCONTROL_BROKEN is not set
+# CONFIG_NRF52_UART_BREAKS is not set
+
+#
+# JTAG Configuration
+#
+CONFIG_NRF52_JTAG_TMS_PIN=24
+CONFIG_NRF52_JTAG_TCK_PIN=22
+CONFIG_NRF52_JTAG_TDI_PIN=23
+CONFIG_NRF52_JTAG_TDO_PIN=25
+
+#
+# SPI Configuration
+#
+CONFIG_NRF52_SPI_INTERRUPTS=y
+CONFIG_NRF52_CS_CONTROL_BY_USER=y
+
+#
+# SPI2 pinmux config
+#
+CONFIG_NRF52_SPI2_SCL_PIN=22
+CONFIG_NRF52_SPI2_MOSI_PIN=23
+CONFIG_NRF52_SPI2_MISO_PIN=25
+# CONFIG_NRF52_SPI2_125K is not set
+# CONFIG_NRF52_SPI2_250K is not set
+# CONFIG_NRF52_SPI2_500K is not set
+# CONFIG_NRF52_SPI2_1M is not set
+# CONFIG_NRF52_SPI2_2M is not set
+# CONFIG_NRF52_SPI2_4M is not set
+CONFIG_NRF52_SPI2_8M=y
+
+#
+# I2C Configuration
+#
+CONFIG_NRF52_I2C0_SDA_PIN=11
+CONFIG_NRF52_I2C0_SCL_PIN=12
+# CONFIG_NRF52_I2C0_100K is not set
+# CONFIG_NRF52_I2C0_250K is not set
+CONFIG_NRF52_I2C0_400K=y
+# CONFIG_NRF52_I2C_DYNTIMEO is not set
+CONFIG_NRF52_I2CTIMEOSEC=0
+CONFIG_NRF52_I2CTIMEOMS=500
+CONFIG_NRF52_I2CTIMEOTICKS=500
+# CONFIG_NRF52_I2C_DUTY16_9 is not set
+
+#
+# QDecoder Configuration
+#
+CONFIG_NRF52_QDEC_PHASE_A=26
+CONFIG_NRF52_QDEC_PHASE_B=27
+# CONFIG_NRF52_QDEC_LED is not set
+
+#
+# Architecture Options
+#
+# CONFIG_ARCH_NOINTC is not set
+# CONFIG_ARCH_VECNOTIRQ is not set
+# CONFIG_ARCH_DMA is not set
+CONFIG_ARCH_HAVE_IRQPRIO=y
+# CONFIG_ARCH_L2CACHE is not set
+# CONFIG_ARCH_HAVE_COHERENT_DCACHE is not set
+# CONFIG_ARCH_HAVE_ADDRENV is not set
+# CONFIG_ARCH_NEED_ADDRENV_MAPPING is not set
+# CONFIG_ARCH_HAVE_MULTICPU is not set
+CONFIG_ARCH_HAVE_VFORK=y
+# CONFIG_ARCH_HAVE_MMU is not set
+CONFIG_ARCH_HAVE_MPU=y
+# CONFIG_ARCH_NAND_HWECC is not set
+# CONFIG_ARCH_HAVE_EXTCLK is not set
+# CONFIG_ARCH_HAVE_POWEROFF is not set
+CONFIG_ARCH_HAVE_RESET=y
+CONFIG_ARCH_USE_MPU=y
+CONFIG_ARCH_IRQPRIO=y
+CONFIG_ARCH_STACKDUMP=y
+# CONFIG_ENDIAN_BIG is not set
+# CONFIG_ARCH_IDLE_CUSTOM is not set
+# CONFIG_ARCH_HAVE_RAMFUNCS is not set
+CONFIG_ARCH_HAVE_RAMVECTORS=y
+# CONFIG_ARCH_RAMVECTORS is not set
+# CONFIG_ARCH_MINIMAL_VECTORTABLE is not set
+
+#
+# Board Settings
+#
+CONFIG_BOARD_LOOPSPERMSEC=8499
+# CONFIG_ARCH_CALIBRATION is not set
+
+#
+# Interrupt options
+#
+CONFIG_ARCH_HAVE_INTERRUPTSTACK=y
+CONFIG_ARCH_INTERRUPTSTACK=2048
+CONFIG_ARCH_HAVE_HIPRI_INTERRUPT=y
+# CONFIG_ARCH_HIPRI_INTERRUPT is not set
+
+#
+# Boot options
+#
+# CONFIG_BOOT_RUNFROMEXTSRAM is not set
+CONFIG_BOOT_RUNFROMFLASH=y
+# CONFIG_BOOT_RUNFROMISRAM is not set
+# CONFIG_BOOT_RUNFROMSDRAM is not set
+# CONFIG_BOOT_COPYTORAM is not set
+
+#
+# Boot Memory Configuration
+#
+CONFIG_RAM_START=0x20000000
+CONFIG_RAM_SIZE=65536
+# CONFIG_ARCH_HAVE_SDRAM is not set
+
+#
+# Board Selection
+#
+# CONFIG_ARCH_BOARD_NRF52832_DK is not set
+CONFIG_ARCH_BOARD_FAST_API_DEBUG=y
+# CONFIG_ARCH_BOARD_CUSTOM is not set
+CONFIG_ARCH_BOARD="fast_api_debug"
+
+#
+# Common Board Options
+#
+CONFIG_ARCH_HAVE_LEDS=y
+# CONFIG_ARCH_LEDS is not set
+CONFIG_ARCH_HAVE_BUTTONS=y
+# CONFIG_ARCH_BUTTONS is not set
+CONFIG_ARCH_HAVE_IRQBUTTONS=y
+
+#
+# Board-Specific Options
+#
+CONFIG_ZEUS1=y
+# CONFIG_ZEUS2 is not set
+CONFIG_ZGLUE_FAST=y
+# CONFIG_BOARD_CRASHDUMP is not set
+CONFIG_LIB_BOARDCTL=y
+# CONFIG_BOARDCTL_RESET is not set
+# CONFIG_BOARDCTL_UNIQUEID is not set
+# CONFIG_BOARDCTL_TSCTEST is not set
+# CONFIG_BOARDCTL_GRAPHICS is not set
+# CONFIG_BOARDCTL_IOCTL is not set
+
+#
+# RTOS Features
+#
+CONFIG_DISABLE_OS_API=y
+# CONFIG_DISABLE_POSIX_TIMERS is not set
+# CONFIG_DISABLE_PTHREAD is not set
+# CONFIG_DISABLE_SIGNALS is not set
+# CONFIG_DISABLE_MQUEUE is not set
+# CONFIG_DISABLE_ENVIRON is not set
+
+#
+# Clocks and Timers
+#
+CONFIG_ARCH_HAVE_TICKLESS=y
+# CONFIG_SCHED_TICKLESS is not set
+CONFIG_USEC_PER_TICK=10000
+# CONFIG_SYSTEM_TIME64 is not set
+# CONFIG_CLOCK_MONOTONIC is not set
+# CONFIG_ARCH_HAVE_TIMEKEEPING is not set
+# CONFIG_JULIAN_TIME is not set
+CONFIG_START_YEAR=2017
+CONFIG_START_MONTH=1
+CONFIG_START_DAY=1
+CONFIG_MAX_WDOGPARMS=2
+CONFIG_PREALLOC_WDOGS=8
+CONFIG_WDOG_INTRESERVE=1
+CONFIG_PREALLOC_TIMERS=4
+
+#
+# Tasks and Scheduling
+#
+# CONFIG_SPINLOCK is not set
+# CONFIG_INIT_NONE is not set
+CONFIG_INIT_ENTRYPOINT=y
+# CONFIG_INIT_FILEPATH is not set
+CONFIG_USER_ENTRYPOINT="nsh_main"
+CONFIG_RR_INTERVAL=200
+# CONFIG_SCHED_SPORADIC is not set
+CONFIG_TASK_NAME_SIZE=0
+CONFIG_MAX_TASKS=16
+# CONFIG_SCHED_HAVE_PARENT is not set
+CONFIG_SCHED_WAITPID=y
+
+#
+# Pthread Options
+#
+CONFIG_MUTEX_TYPES=y
+CONFIG_NPTHREAD_KEYS=4
+# CONFIG_PTHREAD_CLEANUP is not set
+# CONFIG_CANCELLATION_POINTS is not set
+
+#
+# Performance Monitoring
+#
+# CONFIG_SCHED_CPULOAD is not set
+# CONFIG_SCHED_INSTRUMENTATION is not set
+
+#
+# Files and I/O
+#
+CONFIG_DEV_CONSOLE=y
+# CONFIG_FDCLONE_DISABLE is not set
+# CONFIG_FDCLONE_STDIO is not set
+CONFIG_SDCLONE_DISABLE=y
+CONFIG_NFILE_DESCRIPTORS=8
+CONFIG_NFILE_STREAMS=8
+CONFIG_NAME_MAX=32
+# CONFIG_PRIORITY_INHERITANCE is not set
+
+#
+# RTOS hooks
+#
+CONFIG_BOARD_INITIALIZE=y
+# CONFIG_BOARD_INITTHREAD is not set
+# CONFIG_SCHED_STARTHOOK is not set
+# CONFIG_SCHED_ATEXIT is not set
+# CONFIG_SCHED_ONEXIT is not set
+CONFIG_SIG_EVTHREAD=y
+
+#
+# Signal Numbers
+#
+CONFIG_SIG_SIGUSR1=1
+CONFIG_SIG_SIGUSR2=2
+CONFIG_SIG_SIGALARM=3
+CONFIG_SIG_SIGCONDTIMEDOUT=16
+CONFIG_SIG_SIGWORK=17
+
+#
+# POSIX Message Queue Options
+#
+CONFIG_PREALLOC_MQ_MSGS=4
+CONFIG_MQ_MAXMSGSIZE=32
+# CONFIG_MODULE is not set
+
+#
+# Work queue support
+#
+CONFIG_SCHED_WORKQUEUE=y
+# CONFIG_SCHED_HPWORK is not set
+CONFIG_SCHED_LPWORK=y
+CONFIG_SCHED_LPNTHREADS=1
+CONFIG_SCHED_LPWORKPRIORITY=50
+CONFIG_SCHED_LPWORKPERIOD=50000
+CONFIG_SCHED_LPWORKSTACKSIZE=2048
+
+#
+# Stack and heap information
+#
+CONFIG_IDLETHREAD_STACKSIZE=1024
+CONFIG_USERMAIN_STACKSIZE=2048
+CONFIG_PTHREAD_STACK_MIN=256
+CONFIG_PTHREAD_STACK_DEFAULT=2048
+# CONFIG_LIB_SYSCALL is not set
+
+#
+# Device Drivers
+#
+CONFIG_DISABLE_POLL=y
+CONFIG_DEV_NULL=y
+CONFIG_DEV_ZERO=y
+CONFIG_ARCH_HAVE_RNG=y
+CONFIG_DEV_RANDOM=y
+# CONFIG_DEV_URANDOM is not set
+CONFIG_DEV_LOOP=y
+
+#
+# Buffering
+#
+# CONFIG_DRVR_WRITEBUFFER is not set
+# CONFIG_DRVR_READAHEAD is not set
+# CONFIG_RAMDISK is not set
+# CONFIG_CAN is not set
+# CONFIG_ARCH_HAVE_PWM_PULSECOUNT is not set
+CONFIG_ARCH_HAVE_PWM_MULTICHAN=y
+CONFIG_PWM=y
+CONFIG_PWM_MULTICHAN=y
+CONFIG_PWM_NCHANNELS=4
+CONFIG_ARCH_HAVE_I2CRESET=y
+CONFIG_I2C=y
+# CONFIG_I2C_SLAVE is not set
+# CONFIG_I2C_POLLED is not set
+# CONFIG_I2C_RESET is not set
+# CONFIG_I2C_TRACE is not set
+CONFIG_I2C_DRIVER=y
+# CONFIG_ARCH_HAVE_SPI_CRCGENERATION is not set
+# CONFIG_ARCH_HAVE_SPI_CS_CONTROL is not set
+CONFIG_ARCH_HAVE_SPI_BITORDER=y
+CONFIG_SPI=y
+# CONFIG_SPI_SLAVE is not set
+CONFIG_SPI_EXCHANGE=y
+# CONFIG_SPI_CMDDATA is not set
+# CONFIG_SPI_CALLBACK is not set
+# CONFIG_SPI_HWFEATURES is not set
+# CONFIG_SPI_BITORDER is not set
+# CONFIG_SPI_CS_DELAY_CONTROL is not set
+# CONFIG_SPI_DRIVER is not set
+# CONFIG_SPI_BITBANG is not set
+CONFIG_I2S=y
+
+#
+# Timer Driver Support
+#
+CONFIG_TIMER=y
+# CONFIG_ONESHOT is not set
+# CONFIG_RTC is not set
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_DEVPATH="/dev/watchdog0"
+# CONFIG_TIMERS_CS2100CP is not set
+CONFIG_ANALOG=y
+CONFIG_ADC=y
+CONFIG_ADC_FIFOSIZE=8
+# CONFIG_ADC_ADS1242 is not set
+# CONFIG_ADC_ADS125X is not set
+# CONFIG_ADC_PGA11X is not set
+# CONFIG_DAC is not set
+CONFIG_COMP=y
+# CONFIG_AUDIO_DEVICES is not set
+# CONFIG_VIDEO_DEVICES is not set
+# CONFIG_BCH is not set
+# CONFIG_INPUT is not set
+
+#
+# IO Expander/GPIO Support
+#
+# CONFIG_IOEXPANDER is not set
+# CONFIG_DEV_GPIO is not set
+
+#
+# LCD Driver Support
+#
+# CONFIG_LCD is not set
+# CONFIG_SLCD is not set
+
+#
+# LED Support
+#
+# CONFIG_USERLED is not set
+# CONFIG_RGBLED is not set
+# CONFIG_PCA9635PW is not set
+# CONFIG_NCP5623C is not set
+# CONFIG_MMCSD is not set
+# CONFIG_MODEM is not set
+# CONFIG_MTD is not set
+# CONFIG_EEPROM is not set
+# CONFIG_PIPES is not set
+# CONFIG_PM is not set
+# CONFIG_POWER is not set
+CONFIG_SENSORS=y
+CONFIG_MC3672=y
+CONFIG_MC3672_ADDR=0x4c
+# CONFIG_BMM150 is not set
+# CONFIG_AS5048B is not set
+# CONFIG_BH1750FVI is not set
+# CONFIG_BMG160 is not set
+# CONFIG_BMP180 is not set
+# CONFIG_SENSORS_L3GD20 is not set
+# CONFIG_SENSOR_KXTJ9 is not set
+# CONFIG_LIS3DSH is not set
+# CONFIG_LIS331DL is not set
+# CONFIG_SN_LSM9DS1 is not set
+# CONFIG_MB7040 is not set
+# CONFIG_MLX90393 is not set
+# CONFIG_MCP9844 is not set
+# CONFIG_MS58XX is not set
+CONFIG_MS58XX_VDD=30
+# CONFIG_MPL115A is not set
+# CONFIG_SENSORS_ADXL345 is not set
+# CONFIG_MAX31855 is not set
+# CONFIG_MAX6675 is not set
+# CONFIG_LIS3MDL is not set
+# CONFIG_LM75 is not set
+# CONFIG_LM92 is not set
+# CONFIG_QENCODER is not set
+CONFIG_QDECODER=y
+# CONFIG_VEML6070 is not set
+# CONFIG_XEN1210 is not set
+# CONFIG_ZEROCROSS is not set
+CONFIG_SERIAL=y
+# CONFIG_DEV_LOWCONSOLE is not set
+# CONFIG_SERIAL_REMOVABLE is not set
+CONFIG_SERIAL_CONSOLE=y
+# CONFIG_16550_UART is not set
+# CONFIG_UART_SERIALDRIVER is not set
+CONFIG_UART0_SERIALDRIVER=y
+# CONFIG_UART1_SERIALDRIVER is not set
+# CONFIG_UART2_SERIALDRIVER is not set
+# CONFIG_UART3_SERIALDRIVER is not set
+# CONFIG_UART4_SERIALDRIVER is not set
+# CONFIG_UART5_SERIALDRIVER is not set
+# CONFIG_UART6_SERIALDRIVER is not set
+# CONFIG_UART7_SERIALDRIVER is not set
+# CONFIG_UART8_SERIALDRIVER is not set
+# CONFIG_SCI0_SERIALDRIVER is not set
+# CONFIG_SCI1_SERIALDRIVER is not set
+# CONFIG_USART0_SERIALDRIVER is not set
+# CONFIG_USART1_SERIALDRIVER is not set
+# CONFIG_USART2_SERIALDRIVER is not set
+# CONFIG_USART3_SERIALDRIVER is not set
+# CONFIG_USART4_SERIALDRIVER is not set
+# CONFIG_USART5_SERIALDRIVER is not set
+# CONFIG_USART6_SERIALDRIVER is not set
+# CONFIG_USART7_SERIALDRIVER is not set
+# CONFIG_USART8_SERIALDRIVER is not set
+# CONFIG_OTHER_UART_SERIALDRIVER is not set
+CONFIG_MCU_SERIAL=y
+CONFIG_STANDARD_SERIAL=y
+# CONFIG_SERIAL_IFLOWCONTROL is not set
+# CONFIG_SERIAL_OFLOWCONTROL is not set
+# CONFIG_SERIAL_DMA is not set
+# CONFIG_SERIAL_TIOCSERGSTRUCT is not set
+CONFIG_ARCH_HAVE_SERIAL_TERMIOS=y
+CONFIG_UART0_SERIAL_CONSOLE=y
+# CONFIG_OTHER_SERIAL_CONSOLE is not set
+# CONFIG_NO_SERIAL_CONSOLE is not set
+
+#
+# UART0 Configuration
+#
+CONFIG_UART0_RXBUFSIZE=256
+CONFIG_UART0_TXBUFSIZE=256
+CONFIG_UART0_BAUD=115200
+CONFIG_UART0_BITS=8
+CONFIG_UART0_PARITY=0
+CONFIG_UART0_2STOP=0
+# CONFIG_UART0_IFLOWCONTROL is not set
+# CONFIG_UART0_OFLOWCONTROL is not set
+# CONFIG_UART0_DMA is not set
+# CONFIG_PSEUDOTERM is not set
+# CONFIG_USBDEV is not set
+# CONFIG_USBHOST is not set
+# CONFIG_HAVE_USBTRACE is not set
+# CONFIG_DRIVERS_WIRELESS is not set
+# CONFIG_DRIVERS_CONTACTLESS is not set
+
+#
+# System Logging
+#
+# CONFIG_ARCH_SYSLOG is not set
+# CONFIG_RAMLOG is not set
+# CONFIG_SYSLOG_INTBUFFER is not set
+# CONFIG_SYSLOG_TIMESTAMP is not set
+CONFIG_SYSLOG_SERIAL_CONSOLE=y
+# CONFIG_SYSLOG_CHAR is not set
+CONFIG_SYSLOG_CONSOLE=y
+# CONFIG_SYSLOG_NONE is not set
+# CONFIG_SYSLOG_FILE is not set
+# CONFIG_SYSLOG_CHARDEV is not set
+CONFIG_ARCH_FAST_ZEUS=y
+CONFIG_ARCH_VIRTUAL_GPIO=y
+CONFIG_TARGET_DRIVER="gpio_api"
+
+#
+# Networking Support
+#
+# CONFIG_ARCH_HAVE_NET is not set
+# CONFIG_ARCH_HAVE_PHY is not set
+# CONFIG_NET is not set
+
+#
+# Crypto API
+#
+# CONFIG_CRYPTO is not set
+
+#
+# File Systems
+#
+
+#
+# File system configuration
+#
+# CONFIG_DISABLE_MOUNTPOINT is not set
+# CONFIG_FS_AUTOMOUNTER is not set
+# CONFIG_DISABLE_PSEUDOFS_OPERATIONS is not set
+# CONFIG_PSEUDOFS_SOFTLINKS is not set
+CONFIG_FS_READABLE=y
+CONFIG_FS_WRITABLE=y
+# CONFIG_FS_AIO is not set
+# CONFIG_FS_NAMED_SEMAPHORES is not set
+CONFIG_FS_MQUEUE_MPATH="/var/mqueue"
+# CONFIG_FS_RAMMAP is not set
+CONFIG_FS_FAT=y
+# CONFIG_FAT_LCNAMES is not set
+CONFIG_FAT_LFN=y
+CONFIG_FAT_MAXFNAME=32
+CONFIG_FS_FATTIME=y
+# CONFIG_FAT_FORCE_INDIRECT is not set
+# CONFIG_FAT_DMAMEMORY is not set
+# CONFIG_FAT_DIRECT_RETRY is not set
+# CONFIG_FS_NXFFS is not set
+CONFIG_FS_ROMFS=y
+CONFIG_FS_TMPFS=y
+CONFIG_FS_TMPFS_BLOCKSIZE=512
+CONFIG_FS_TMPFS_DIRECTORY_ALLOCGUARD=64
+CONFIG_FS_TMPFS_DIRECTORY_FREEGUARD=128
+CONFIG_FS_TMPFS_FILE_ALLOCGUARD=512
+CONFIG_FS_TMPFS_FILE_FREEGUARD=1024
+# CONFIG_FS_SMARTFS is not set
+# CONFIG_FS_BINFS is not set
+CONFIG_FS_PROCFS=y
+CONFIG_FS_PROCFS_REGISTER=y
+
+#
+# Exclude individual procfs entries
+#
+# CONFIG_FS_PROCFS_EXCLUDE_PROCESS is not set
+# CONFIG_FS_PROCFS_EXCLUDE_UPTIME is not set
+# CONFIG_FS_PROCFS_EXCLUDE_MOUNTS is not set
+# CONFIG_FS_PROCFS_EXCLUDE_MTD is not set
+# CONFIG_FS_PROCFS_EXCLUDE_PARTITIONS is not set
+# CONFIG_FS_UNIONFS is not set
+
+#
+# Graphics Support
+#
+# CONFIG_NX is not set
+
+#
+# Memory Management
+#
+# CONFIG_MM_SMALL is not set
+CONFIG_MM_REGIONS=1
+# CONFIG_ARCH_HAVE_HEAP2 is not set
+# CONFIG_GRAN is not set
+
+#
+# Audio Support
+#
+CONFIG_AUDIO=y
+# CONFIG_AUDIO_MULTI_SESSION is not set
+
+#
+# Audio Buffer Configuration
+#
+# CONFIG_AUDIO_LARGE_BUFFERS is not set
+CONFIG_AUDIO_NUM_BUFFERS=2
+CONFIG_AUDIO_BUFFER_NUMBYTES=8192
+# CONFIG_AUDIO_DRIVER_SPECIFIC_BUFFERS is not set
+
+#
+# Supported Audio Formats
+#
+# CONFIG_AUDIO_FORMAT_AC3 is not set
+# CONFIG_AUDIO_FORMAT_DTS is not set
+CONFIG_AUDIO_FORMAT_PCM=y
+CONFIG_AUDIO_FORMAT_MP3=y
+# CONFIG_AUDIO_FORMAT_MIDI is not set
+# CONFIG_AUDIO_FORMAT_WMA is not set
+# CONFIG_AUDIO_FORMAT_OGG_VORBIS is not set
+
+#
+# Exclude Specific Audio Features
+#
+# CONFIG_AUDIO_EXCLUDE_VOLUME is not set
+# CONFIG_AUDIO_EXCLUDE_BALANCE is not set
+CONFIG_AUDIO_EXCLUDE_EQUALIZER=y
+# CONFIG_AUDIO_EXCLUDE_TONE is not set
+# CONFIG_AUDIO_EXCLUDE_PAUSE_RESUME is not set
+# CONFIG_AUDIO_EXCLUDE_STOP is not set
+# CONFIG_AUDIO_EXCLUDE_FFORWARD is not set
+CONFIG_AUDIO_EXCLUDE_REWIND=y
+# CONFIG_AUDIO_CUSTOM_DEV_PATH is not set
+
+#
+# Wireless Support
+#
+
+#
+# Binary Loader
+#
+# CONFIG_BINFMT_DISABLE is not set
+# CONFIG_BINFMT_EXEPATH is not set
+# CONFIG_NXFLAT is not set
+# CONFIG_ELF is not set
+CONFIG_BUILTIN=y
+# CONFIG_PIC is not set
+# CONFIG_SYMTAB_ORDEREDBYNAME is not set
+
+#
+# Library Routines
+#
+
+#
+# Standard C Library Options
+#
+
+#
+# Standard C I/O
+#
+# CONFIG_STDIO_DISABLE_BUFFERING is not set
+CONFIG_STDIO_BUFFER_SIZE=64
+CONFIG_STDIO_LINEBUFFER=y
+CONFIG_NUNGET_CHARS=2
+# CONFIG_NOPRINTF_FIELDWIDTH is not set
+CONFIG_LIBC_FLOATINGPOINT=y
+CONFIG_LIBC_LONG_LONG=y
+# CONFIG_LIBC_SCANSET is not set
+# CONFIG_EOL_IS_CR is not set
+# CONFIG_EOL_IS_LF is not set
+# CONFIG_EOL_IS_BOTH_CRLF is not set
+CONFIG_EOL_IS_EITHER_CRLF=y
+# CONFIG_MEMCPY_VIK is not set
+CONFIG_LIBM=y
+
+#
+# Architecture-Specific Support
+#
+CONFIG_ARCH_LOWPUTC=y
+# CONFIG_ARCH_ROMGETC is not set
+# CONFIG_LIBC_ARCH_MEMCPY is not set
+# CONFIG_LIBC_ARCH_MEMCMP is not set
+# CONFIG_LIBC_ARCH_MEMMOVE is not set
+# CONFIG_LIBC_ARCH_MEMSET is not set
+# CONFIG_LIBC_ARCH_STRCHR is not set
+# CONFIG_LIBC_ARCH_STRCMP is not set
+# CONFIG_LIBC_ARCH_STRCPY is not set
+# CONFIG_LIBC_ARCH_STRNCPY is not set
+# CONFIG_LIBC_ARCH_STRLEN is not set
+# CONFIG_LIBC_ARCH_STRNLEN is not set
+# CONFIG_LIBC_ARCH_ELF is not set
+# CONFIG_ARMV7M_MEMCPY is not set
+
+#
+# stdlib Options
+#
+CONFIG_LIB_RAND_ORDER=1
+CONFIG_LIB_HOMEDIR="/"
+CONFIG_LIBC_TMPDIR="/tmp"
+CONFIG_LIBC_MAX_TMPFILE=32
+
+#
+# Program Execution Options
+#
+# CONFIG_LIBC_EXECFUNCS is not set
+CONFIG_POSIX_SPAWN_PROXY_STACKSIZE=1024
+CONFIG_TASK_SPAWN_DEFAULT_STACKSIZE=2048
+
+#
+# errno Decode Support
+#
+# CONFIG_LIBC_STRERROR is not set
+# CONFIG_LIBC_PERROR_STDOUT is not set
+
+#
+# memcpy/memset Options
+#
+# CONFIG_MEMSET_OPTSPEED is not set
+# CONFIG_LIBC_DLLFCN is not set
+# CONFIG_LIBC_MODLIB is not set
+# CONFIG_LIBC_WCHAR is not set
+# CONFIG_LIBC_LOCALE is not set
+
+#
+# Time/Time Zone Support
+#
+# CONFIG_LIBC_LOCALTIME is not set
+# CONFIG_TIME_EXTENDED is not set
+CONFIG_ARCH_HAVE_TLS=y
+
+#
+# Thread Local Storage (TLS)
+#
+# CONFIG_TLS is not set
+
+#
+# Network-Related Options
+#
+# CONFIG_LIBC_IPv4_ADDRCONV is not set
+# CONFIG_LIBC_IPv6_ADDRCONV is not set
+# CONFIG_LIBC_NETDB is not set
+
+#
+# NETDB Support
+#
+# CONFIG_NETDB_HOSTFILE is not set
+# CONFIG_LIBC_IOCTL_VARIADIC is not set
+CONFIG_LIB_SENDFILE_BUFSIZE=512
+
+#
+# Non-standard Library Support
+#
+# CONFIG_LIB_CRC64_FAST is not set
+# CONFIG_LIB_KBDCODEC is not set
+# CONFIG_LIB_SLCDCODEC is not set
+# CONFIG_LIB_HEX2BIN is not set
+
+#
+# Basic CXX Support
+#
+# CONFIG_C99_BOOL8 is not set
+CONFIG_HAVE_CXX=y
+# CONFIG_HAVE_CXXINITIALIZE is not set
+# CONFIG_CXX_NEWLONG is not set
+
+#
+# uClibc++ Standard C++ Library
+#
+# CONFIG_UCLIBCXX is not set
+
+#
+# Application Configuration
+#
+
+#
+# Built-In Applications
+#
+CONFIG_BUILTIN_PROXY_STACKSIZE=1024
+
+#
+# CAN Utilities
+#
+
+#
+# Examples
+#
+CONFIG_EXAMPLES_ADC=y
+CONFIG_EXAMPLES_ADC_DEVPATH="/dev/adc0"
+CONFIG_EXAMPLES_ADC_GROUPSIZE=4
+CONFIG_EXAMPLES_ADC_SWTRIG=y
+# CONFIG_EXAMPLES_BOOTLOADER is not set
+# CONFIG_EXAMPLES_BUTTONS is not set
+# CONFIG_EXAMPLES_CCTYPE is not set
+# CONFIG_EXAMPLES_CHAT is not set
+CONFIG_EXAMPLES_COMP=y
+CONFIG_EXAMPLES_COMP_DEVPATH="/dev/comp"
+CONFIG_EXAMPLE_COMP_SIGNAL_NO=20
+# CONFIG_EXAMPLES_CONFIGDATA is not set
+# CONFIG_EXAMPLES_CXXTEST is not set
+# CONFIG_EXAMPLES_DHCPD is not set
+# CONFIG_EXAMPLES_ELF is not set
+# CONFIG_EXAMPLES_FLASH_TEST is not set
+# CONFIG_EXAMPLES_FSTEST is not set
+# CONFIG_EXAMPLES_FTPC is not set
+# CONFIG_EXAMPLES_FTPD is not set
+# CONFIG_EXAMPLES_HELLO is not set
+# CONFIG_EXAMPLES_HELLO_NUTTX is not set
+# CONFIG_EXAMPLES_HELLOXX is not set
+# CONFIG_EXAMPLES_HIDKBD is not set
+# CONFIG_EXAMPLES_IGMP is not set
+# CONFIG_EXAMPLES_JSON is not set
+# CONFIG_EXAMPLES_LEDS is not set
+# CONFIG_EXAMPLES_MEDIA is not set
+# CONFIG_EXAMPLES_MM is not set
+# CONFIG_EXAMPLES_MODBUS is not set
+# CONFIG_EXAMPLES_MOUNT is not set
+CONFIG_EXAMPLES_NSH=y
+# CONFIG_EXAMPLES_NULL is not set
+# CONFIG_EXAMPLES_NXFFS is not set
+# CONFIG_EXAMPLES_NXHELLO is not set
+# CONFIG_EXAMPLES_NXIMAGE is not set
+# CONFIG_EXAMPLES_NX is not set
+# CONFIG_EXAMPLES_NXLINES is not set
+# CONFIG_EXAMPLES_NXTERM is not set
+# CONFIG_EXAMPLES_NXTEXT is not set
+CONFIG_EXAMPLES_OSTEST=y
+CONFIG_EXAMPLES_OSTEST_LOOPS=1
+CONFIG_EXAMPLES_OSTEST_STACKSIZE=4096
+CONFIG_EXAMPLES_OSTEST_NBARRIER_THREADS=8
+# CONFIG_EXAMPLES_PTHREAD_RW_LOCK is not set
+# CONFIG_EXAMPLES_PTHREAD_MUTEX_ROBUST is not set
+CONFIG_EXAMPLES_OSTEST_RR_RANGE=10000
+CONFIG_EXAMPLES_OSTEST_RR_RUNS=10
+CONFIG_EXAMPLES_OSTEST_FPUTESTDISABLE=y
+CONFIG_EXAMPLES_OSTEST_WAITRESULT=y
+# CONFIG_EXAMPLES_PCA9635 is not set
+# CONFIG_EXAMPLES_POSIXSPAWN is not set
+# CONFIG_EXAMPLES_POWERMONITOR is not set
+# CONFIG_EXAMPLES_PPPD is not set
+CONFIG_EXAMPLES_PWM=y
+CONFIG_EXAMPLES_PWM_DEVPATH="/dev/pwm0"
+CONFIG_EXAMPLES_PWM_FREQUENCY=500
+CONFIG_EXAMPLES_PWM_DURATION=30
+CONFIG_EXAMPLES_PWM_DUTYPCT1=50
+CONFIG_EXAMPLES_PWM_CHANNEL1=1
+CONFIG_EXAMPLES_PWM_DUTYPCT2=40
+CONFIG_EXAMPLES_PWM_CHANNEL2=2
+CONFIG_EXAMPLES_PWM_DUTYPCT3=30
+CONFIG_EXAMPLES_PWM_CHANNEL3=3
+CONFIG_EXAMPLES_PWM_DUTYPCT4=20
+CONFIG_EXAMPLES_PWM_CHANNEL4=4
+CONFIG_EXAMPLES_QDECODER=y
+CONFIG_EXAMPLES_QDECODER_DEVPATH="/dev/qdec0"
+CONFIG_EXAMPLES_QDECODER_DELAY=10
+CONFIG_EXAMPLES_RANDOM=y
+CONFIG_EXAMPLES_MAXSAMPLES=64
+CONFIG_EXAMPLES_NSAMPLES=16
+# CONFIG_EXAMPLES_RFID_READUID is not set
+# CONFIG_EXAMPLES_RGBLED is not set
+# CONFIG_EXAMPLES_ROMFS is not set
+# CONFIG_EXAMPLES_RTC is not set
+# CONFIG_EXAMPLES_SENDMAIL is not set
+CONFIG_EXAMPLES_SERIALBLASTER=y
+CONFIG_EXAMPLES_SERIALBLASTER_STACKSIZE=1024
+CONFIG_EXAMPLES_SERIALBLASTER_PRIORITY=50
+CONFIG_EXAMPLES_SERIALRX=y
+CONFIG_EXAMPLES_SERIALRX_STACKSIZE=1024
+CONFIG_EXAMPLES_SERIALRX_PRIORITY=50
+# CONFIG_EXAMPLES_SERIALRX_BUFFERED is not set
+CONFIG_EXAMPLES_SERIALRX_BUFSIZE=16
+CONFIG_EXAMPLES_SERIALRX_DEVPATH="/dev/ttyS0"
+# CONFIG_EXAMPLES_SERIALRX_PRINTHYPHEN is not set
+# CONFIG_EXAMPLES_SERIALRX_PRINTHEX is not set
+CONFIG_EXAMPLES_SERIALRX_PRINTSTR=y
+# CONFIG_EXAMPLES_SERLOOP is not set
+# CONFIG_EXAMPLES_SLCD is not set
+# CONFIG_EXAMPLES_SMART is not set
+# CONFIG_EXAMPLES_SMART_TEST is not set
+# CONFIG_EXAMPLES_SMP is not set
+# CONFIG_EXAMPLES_STAT is not set
+# CONFIG_EXAMPLES_SYSTEM is not set
+# CONFIG_EXAMPLES_TCPECHO is not set
+# CONFIG_EXAMPLES_THTTPD is not set
+# CONFIG_EXAMPLES_TIFF is not set
+CONFIG_EXAMPLES_TIMER=y
+CONFIG_EXAMPLE_TIMER_DEVNAME="/dev/timer0"
+CONFIG_EXAMPLE_TIMER_INTERVAL=1000000
+CONFIG_EXAMPLE_TIMER_DELAY=100000
+CONFIG_EXAMPLE_TIMER_NSAMPLES=20
+CONFIG_EXAMPLE_TIMER_SIGNO=17
+CONFIG_EXAMPLES_TIMER_APPNAME="timer"
+CONFIG_EXAMPLES_TIMER_STACKSIZE=2048
+CONFIG_EXAMPLES_TIMER_PRIORITY=100
+# CONFIG_EXAMPLES_TOUCHSCREEN is not set
+# CONFIG_EXAMPLES_UNIONFS is not set
+# CONFIG_EXAMPLES_USBSERIAL is not set
+CONFIG_EXAMPLES_WATCHDOG=y
+CONFIG_EXAMPLES_WATCHDOG_DEVPATH="/dev/watchdog0"
+CONFIG_EXAMPLES_WATCHDOG_PINGTIME=5000
+CONFIG_EXAMPLES_WATCHDOG_PINGDELAY=500
+CONFIG_EXAMPLES_WATCHDOG_TIMEOUT=2000
+# CONFIG_EXAMPLES_WEBSERVER is not set
+# CONFIG_EXAMPLES_XBC_TEST is not set
+
+#
+# File System Utilities
+#
+# CONFIG_FSUTILS_INIFILE is not set
+# CONFIG_FSUTILS_PASSWD is not set
+
+#
+# GPS Utilities
+#
+# CONFIG_GPSUTILS_MINMEA_LIB is not set
+
+#
+# Graphics Support
+#
+# CONFIG_TIFF is not set
+# CONFIG_GRAPHICS_TRAVELER is not set
+
+#
+# Interpreters
+#
+# CONFIG_INTERPRETERS_BAS is not set
+# CONFIG_INTERPRETERS_FICL is not set
+# CONFIG_INTERPRETERS_MICROPYTHON is not set
+# CONFIG_INTERPRETERS_MINIBASIC is not set
+# CONFIG_INTERPRETERS_PCODE is not set
+
+#
+# FreeModBus
+#
+# CONFIG_MODBUS is not set
+
+#
+# Network Utilities
+#
+# CONFIG_NETUTILS_CODECS is not set
+# CONFIG_NETUTILS_ESP8266 is not set
+# CONFIG_NETUTILS_FTPC is not set
+# CONFIG_NETUTILS_JSON is not set
+# CONFIG_NETUTILS_SMTP is not set
+
+#
+# NSH Library
+#
+CONFIG_NSH_LIBRARY=y
+# CONFIG_NSH_MOTD is not set
+
+#
+# Command Line Configuration
+#
+CONFIG_NSH_READLINE=y
+# CONFIG_NSH_CLE is not set
+CONFIG_NSH_LINELEN=64
+# CONFIG_NSH_DISABLE_SEMICOLON is not set
+# CONFIG_NSH_CMDPARMS is not set
+CONFIG_NSH_MAXARGUMENTS=6
+# CONFIG_NSH_ARGCAT is not set
+CONFIG_NSH_NESTDEPTH=3
+# CONFIG_NSH_DISABLEBG is not set
+CONFIG_NSH_BUILTIN_APPS=y
+
+#
+# Disable Individual commands
+#
+CONFIG_NSH_DISABLE_ADDROUTE=y
+# CONFIG_NSH_DISABLE_BASENAME is not set
+# CONFIG_NSH_DISABLE_CAT is not set
+# CONFIG_NSH_DISABLE_CD is not set
+# CONFIG_NSH_DISABLE_CP is not set
+# CONFIG_NSH_DISABLE_CMP is not set
+# CONFIG_NSH_DISABLE_DATE is not set
+# CONFIG_NSH_DISABLE_DD is not set
+# CONFIG_NSH_DISABLE_DF is not set
+CONFIG_NSH_DISABLE_DELROUTE=y
+# CONFIG_NSH_DISABLE_DIRNAME is not set
+# CONFIG_NSH_DISABLE_ECHO is not set
+# CONFIG_NSH_DISABLE_EXEC is not set
+# CONFIG_NSH_DISABLE_EXIT is not set
+# CONFIG_NSH_DISABLE_FREE is not set
+# CONFIG_NSH_DISABLE_GET is not set
+# CONFIG_NSH_DISABLE_HELP is not set
+# CONFIG_NSH_DISABLE_HEXDUMP is not set
+CONFIG_NSH_DISABLE_IFCONFIG=y
+CONFIG_NSH_DISABLE_IFUPDOWN=y
+# CONFIG_NSH_DISABLE_KILL is not set
+CONFIG_NSH_DISABLE_LOSETUP=y
+CONFIG_NSH_DISABLE_LOSMART=y
+# CONFIG_NSH_DISABLE_LS is not set
+# CONFIG_NSH_DISABLE_MB is not set
+# CONFIG_NSH_DISABLE_MKDIR is not set
+# CONFIG_NSH_DISABLE_MKFATFS is not set
+# CONFIG_NSH_DISABLE_MKRD is not set
+# CONFIG_NSH_DISABLE_MH is not set
+# CONFIG_NSH_DISABLE_MOUNT is not set
+# CONFIG_NSH_DISABLE_MV is not set
+# CONFIG_NSH_DISABLE_MW is not set
+CONFIG_NSH_DISABLE_PRINTF=y
+# CONFIG_NSH_DISABLE_PS is not set
+# CONFIG_NSH_DISABLE_PUT is not set
+# CONFIG_NSH_DISABLE_PWD is not set
+# CONFIG_NSH_DISABLE_RM is not set
+# CONFIG_NSH_DISABLE_RMDIR is not set
+# CONFIG_NSH_DISABLE_SET is not set
+CONFIG_NSH_DISABLE_SH=y
+# CONFIG_NSH_DISABLE_SLEEP is not set
+# CONFIG_NSH_DISABLE_TIME is not set
+CONFIG_NSH_DISABLE_TEST=y
+CONFIG_NSH_DISABLE_TELNETD=y
+# CONFIG_NSH_DISABLE_UMOUNT is not set
+# CONFIG_NSH_DISABLE_UNAME is not set
+# CONFIG_NSH_DISABLE_UNSET is not set
+# CONFIG_NSH_DISABLE_USLEEP is not set
+CONFIG_NSH_DISABLE_WGET=y
+# CONFIG_NSH_DISABLE_XD is not set
+CONFIG_NSH_MMCSDMINOR=0
+
+#
+# Configure Command Options
+#
+# CONFIG_NSH_CMDOPT_DF_H is not set
+# CONFIG_NSH_CMDOPT_DD_STATS is not set
+CONFIG_NSH_CODECS_BUFSIZE=128
+# CONFIG_NSH_CMDOPT_HEXDUMP is not set
+CONFIG_NSH_PROC_MOUNTPOINT="/proc"
+CONFIG_NSH_FILEIOSIZE=512
+
+#
+# Scripting Support
+#
+# CONFIG_NSH_DISABLESCRIPT is not set
+# CONFIG_NSH_DISABLE_ITEF is not set
+# CONFIG_NSH_DISABLE_LOOPS is not set
+# CONFIG_NSH_ROMFSETC is not set
+
+#
+# Console Configuration
+#
+CONFIG_NSH_CONSOLE=y
+# CONFIG_NSH_ALTCONDEV is not set
+CONFIG_NSH_ARCHINIT=y
+# CONFIG_NSH_LOGIN is not set
+# CONFIG_NSH_CONSOLE_LOGIN is not set
+
+#
+# NxWidgets/NxWM
+#
+
+#
+# Platform-specific Support
+#
+# CONFIG_PLATFORM_CONFIGDATA is not set
+
+#
+# System Libraries and NSH Add-Ons
+#
+# CONFIG_SYSTEM_CLE is not set
+# CONFIG_SYSTEM_CUTERM is not set
+# CONFIG_SYSTEM_FREE is not set
+# CONFIG_SYSTEM_HEX2BIN is not set
+# CONFIG_SYSTEM_HEXED is not set
+CONFIG_SYSTEM_I2CTOOL=y
+CONFIG_I2CTOOL_MINBUS=0
+CONFIG_I2CTOOL_MAXBUS=1
+CONFIG_I2CTOOL_MINADDR=0x03
+CONFIG_I2CTOOL_MAXADDR=0x77
+CONFIG_I2CTOOL_MAXREGADDR=0xff
+CONFIG_I2CTOOL_DEFFREQ=400000
+# CONFIG_SYSTEM_INSTALL is not set
+# CONFIG_SYSTEM_NXPLAYER is not set
+# CONFIG_SYSTEM_RAMTEST is not set
+CONFIG_READLINE_HAVE_EXTMATCH=y
+CONFIG_SYSTEM_READLINE=y
+CONFIG_READLINE_ECHO=y
+# CONFIG_READLINE_TABCOMPLETION is not set
+# CONFIG_READLINE_CMD_HISTORY is not set
+CONFIG_SYSTEM_SENSOR=y
+# CONFIG_SYSTEM_SUDOKU is not set
+CONFIG_SYSTEM_SYSTEM=y
+CONFIG_SYSTEM_SYSTEM_STACKSIZE=2048
+CONFIG_SYSTEM_SYSTEM_PRIORITY=100
+# CONFIG_SYSTEM_TEE is not set
+# CONFIG_SYSTEM_UBLOXMODEM is not set
+# CONFIG_SYSTEM_VI is not set
+# CONFIG_SYSTEM_ZMODEM is not set
+CONFIG_EASY_TIMER=y
+
+#
+# Wireless Libraries and NSH Add-Ons
+#
+
+#
+# Bluetooth Application Stack
+#
+# CONFIG_WIRELESS_BT is not set
+
+#
+# IEEE 802.15.4 applications
+#
+# CONFIG_IEEE802154_LIBMAC is not set
+# CONFIG_IEEE802154_LIBUTILS is not set
+# CONFIG_IEEE802154_I8SAK is not set
diff --git a/configs/fast_api_debug/scripts/.gitignore b/configs/fast_api_debug/scripts/.gitignore
new file mode 100644
index 0000000000..3b87b2be70
--- /dev/null
+++ b/configs/fast_api_debug/scripts/.gitignore
@@ -0,0 +1,3 @@
+ld.standard.script
+ld.softd.script
+
diff --git a/configs/fast_api_debug/scripts/arm-gdb.init b/configs/fast_api_debug/scripts/arm-gdb.init
new file mode 100644
index 0000000000..e758969e46
--- /dev/null
+++ b/configs/fast_api_debug/scripts/arm-gdb.init
@@ -0,0 +1,4 @@
+target remote localhost:2331
+monitor reset
+monitor go
+
diff --git a/configs/fast_api_debug/scripts/ld.script b/configs/fast_api_debug/scripts/ld.script
new file mode 100644
index 0000000000..58ff9c61ec
--- /dev/null
+++ b/configs/fast_api_debug/scripts/ld.script
@@ -0,0 +1,136 @@
+/****************************************************************************
+ * configs/nrf52832-dk/scripts/ld.script
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *           Sebastien Lorquet <sebastien@lorquet.fr>
+ *           dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+/*****************************************************************************
+ *                                                                           *
+ * Copyright (C) 2017 zGlue Inc, All rights reserved.                        *
+ *                                                                           *
+ ****************************************************************************/
+
+/*****************************************************************************
+ * For the Nordic nrf52832 arm M4F.                                          *
+ *                                                                           *
+ *                                                                           *
+ ****************************************************************************/
+/*
+MEMORY
+{
+    flash (rx) : ORIGIN = 0, 		  LENGTH = 0x80000
+    sram (rwx) : ORIGIN = 0x20000000, LENGTH = 0x10000
+}
+*/
+MEMORY
+{
+  flash (rx) :  ORIGIN = 0x20000, LENGTH = 0x60000
+  sram (rwx) :  ORIGIN = 0x20002168, LENGTH = 0xde98
+}
+
+OUTPUT_ARCH(arm)
+ENTRY(_stext)
+SECTIONS
+{
+	.text : {
+		_stext = ABSOLUTE(.);
+		*(.vectors)
+		*(.text .text.*)
+		*(.fixup)
+		*(.gnu.warning)
+		*(.rodata .rodata.*)
+		*(.gnu.linkonce.t.*)
+		*(.glue_7)
+		*(.glue_7t)
+		*(.got)
+		*(.gcc_except_table)
+		*(.gnu.linkonce.r.*)
+		_etext = ABSOLUTE(.);
+	} > flash
+
+	.init_section : {
+		_sinit = ABSOLUTE(.);
+		*(.init_array .init_array.*)
+		_einit = ABSOLUTE(.);
+	} > flash
+
+	.ARM.extab : {
+		*(.ARM.extab*)
+	} > flash
+
+	__exidx_start = ABSOLUTE(.);
+	.ARM.exidx : {
+		*(.ARM.exidx*)
+	} > flash
+	__exidx_end = ABSOLUTE(.);
+
+	_eronly = ABSOLUTE(.);
+
+	.data : {
+                __data_start__ = .;
+		_sdata = ABSOLUTE(.);
+		*(.data .data.*)
+		*(.gnu.linkonce.d.*)
+		CONSTRUCTORS
+		_edata = ABSOLUTE(.);
+	} > sram AT > flash
+
+        .fs_data :
+         {
+           PROVIDE(__start_fs_data = .);
+           KEEP(*(.fs_data))
+           PROVIDE(__stop_fs_data = .);
+         } > sram
+
+	.bss : {
+		_sbss = ABSOLUTE(.);
+		*(.bss .bss.*)
+		*(.gnu.linkonce.b.*)
+		*(COMMON)
+		_ebss = ABSOLUTE(.);
+	} > sram
+
+	/* Stabs debugging sections. */
+	.stab 0 : { *(.stab) }
+	.stabstr 0 : { *(.stabstr) }
+	.stab.excl 0 : { *(.stab.excl) }
+	.stab.exclstr 0 : { *(.stab.exclstr) }
+	.stab.index 0 : { *(.stab.index) }
+	.stab.indexstr 0 : { *(.stab.indexstr) }
+	.comment 0 : { *(.comment) }
+	.debug_abbrev 0 : { *(.debug_abbrev) }
+	.debug_info 0 : { *(.debug_info) }
+	.debug_line 0 : { *(.debug_line) }
+	.debug_pubnames 0 : { *(.debug_pubnames) }
+	.debug_aranges 0 : { *(.debug_aranges) }
+}
diff --git a/configs/fast_api_debug/scripts/ld.standard.script b/configs/fast_api_debug/scripts/ld.standard.script
new file mode 100644
index 0000000000..35ecd8f1cb
--- /dev/null
+++ b/configs/fast_api_debug/scripts/ld.standard.script
@@ -0,0 +1,248 @@
+/****************************************************************************
+ * configs/nrf52832-dk/scripts/ld.script
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *           Sebastien Lorquet <sebastien@lorquet.fr>
+ *           dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+/*****************************************************************************
+ *                                                                           *
+ * Copyright (C) 2017 zGlue Inc, All rights reserved.                        *
+ *                                                                           *
+ ****************************************************************************/
+
+/*****************************************************************************
+ * For the Nordic nrf52832 arm M4F.                                          *
+ *                                                                           *
+ *                                                                           *
+ ****************************************************************************/
+MEMORY
+{
+  flash (rx) :  ORIGIN = 0, LENGTH = 0x80000
+  sram (rwx) :  ORIGIN = 0x20000000, LENGTH = 0x10000
+}
+
+OUTPUT_ARCH(arm)
+ENTRY(_stext)
+SECTIONS
+{
+	.text : {
+		_stext = ABSOLUTE(.);
+		*(.vectors)
+
+	    PROVIDE(_start_sched = .);
+		    KEEP(*libsched.a:*(.text .text.*))
+		    KEEP(*libsched.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_sched = .);
+
+	    PROVIDE(_start_mm = .);
+		    KEEP(*libmm.a:*(.text .text.*))
+		    KEEP(*libmm.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_mm = .);
+
+	    PROVIDE(_start_c_cxx = .);
+		    KEEP(*libc.a:*(.text .text.*))
+		    KEEP(*libc.a:*(.rodata .rodata.*))
+		    KEEP(*libcxx.a:*(.text .text.*))
+		    KEEP(*libcxx.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_c_cxx = .);
+
+	    PROVIDE(_start_fs = .);
+		    KEEP(*libfs.a:*(.text .text.*))
+		    KEEP(*libfs.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_fs = .);
+
+	    PROVIDE(_start_drivers = .);
+		    KEEP(*libdrivers.a:*(.text .text.*))
+		    KEEP(*libdrivers.a:*(.rodata .rodata.*))
+		    KEEP(*libbinfmt.a:*(.text .text.*))
+		    KEEP(*libbinfmt.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_drivers = .);
+
+	    PROVIDE(_start_soc = .);
+		    KEEP(*libarch.a:*(.text .text.*))
+		    KEEP(*libarch.a:*(.rodata .rodata.*))
+		    KEEP(*libconfigs.a:*(.text .text.*))
+		    KEEP(*libconfigs.a:*(.rodata .rodata.*))
+		    KEEP(*libboard.a:*(.text .text.*))
+		    KEEP(*libboard.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_soc = .);
+
+	    PROVIDE(_start_apps = .);
+		    KEEP(*libapps.a:*(.text .text.*))
+		    KEEP(*libapps.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_apps = .);
+/*
+		*(.text .text.*)
+		*(.rodata .rodata.*)
+*/
+		*(.fixup)
+		*(.gnu.warning)
+		*(.gnu.linkonce.t.*)
+		*(.glue_7)
+		*(.glue_7t)
+		*(.got)
+		*(.gcc_except_table)
+		*(.gnu.linkonce.r.*)
+		_etext = ABSOLUTE(.);
+	} > flash
+
+	.init_section : {
+		_sinit = ABSOLUTE(.);
+		*(.init_array .init_array.*)
+		_einit = ABSOLUTE(.);
+	} > flash
+
+	.ARM.extab : {
+		*(.ARM.extab*)
+	} > flash
+
+	__exidx_start = ABSOLUTE(.);
+	.ARM.exidx : {
+		*(.ARM.exidx*)
+	} > flash
+	__exidx_end = ABSOLUTE(.);
+
+	_eronly = ABSOLUTE(.);
+
+	.data : {
+		_sdata = ABSOLUTE(.);
+
+	    PROVIDE(_start_sched_data = .);
+	        KEEP(*libsched.a:*(.data .data.*))
+	    PROVIDE(_end_sched_data = .);
+
+	    PROVIDE(_start_mm_data = .);
+		KEEP(*libmm.a:*(.data .data.*))
+	    PROVIDE(_end_mm_data = .);
+
+	    PROVIDE(_start_drivers_data = .);
+	        KEEP(*libdrivers.a:*(.data .data.*))
+		KEEP(*libbinfmt.a:*(.data .data.*))
+	    PROVIDE(_end_drivers_data = .);
+
+	    PROVIDE(_start_c_cxx_data = .);
+	        KEEP(*libc.a:*(.data .data.*))
+	        KEEP(*libcxx.a:*(.data .data.*))
+	    PROVIDE(_end_c_cxx_data = .);
+
+	    PROVIDE(_start_fs_data = .);
+	        KEEP(*libfs.a:*(.data .data.*))
+	    PROVIDE(_end_fs_data = .);
+
+	    PROVIDE(_start_soc_data = .);
+	       KEEP(*libarch.a:*(.data .data.*))
+	       KEEP(*libconfigs.a:*(.data .data.*))
+	       KEEP(*libboard.a:*(.data .data.*))
+	    PROVIDE(_end_soc_data = .);
+
+	    PROVIDE(_start_apps_data = .);
+	       KEEP(*libapps.a:*(.data .data.*))
+	    PROVIDE(_end_apps_data = .);
+/*
+		*(.data .data.*)
+*/
+		*(.gnu.linkonce.d.*)
+		CONSTRUCTORS
+		_edata = ABSOLUTE(.);
+		__data_end__ = .;
+	} > sram AT > flash
+
+
+	.fs_data :
+	{
+	    _sfsdata = ABSOLUTE(.);
+	    . = ALIGN(4);
+	    PROVIDE(__start_fs_data = .);
+	    KEEP(*(.fs_data))
+	    PROVIDE(__stop_fs_data = .);
+	    . = ALIGN(4);
+       _efsdata = ABSOLUTE(.);
+	} > sram AT > flash
+
+
+	.bss : {
+		_sbss = ABSOLUTE(.);
+
+	    PROVIDE(_start_sched_bss = .);
+		    KEEP(*libsched.a:*(.bss .bss.*))
+	    PROVIDE(_end_sched_bss = .);
+
+	    PROVIDE(_start_mm_bss = .);
+		    KEEP(*libmm.a:*(.bss .bss.*))
+	    PROVIDE(_end_mm_bss = .);
+
+	    PROVIDE(_start_drivers_bss = .);
+	        KEEP(*libdrivers.a:*(.bss .bss.*))
+		KEEP(*libbinfmt.a:*(.bss .bss.*))
+	    PROVIDE(_end_drivers_bss = .);
+
+	    PROVIDE(_start_c_cxx_bss = .);
+	        KEEP(*libc.a:*(.bss .bss.*))
+		KEEP(*libcxx.a:*(.bss .bss.*))
+	    PROVIDE(_end_c_cxx_bss = .);
+
+	    PROVIDE(_start_fs_bss = .);
+		    KEEP(*libfs.a:*(.bss .bss.*))
+	    PROVIDE(_end_fs_bss = .);
+
+	    PROVIDE(_start_soc_bss = .);
+		    KEEP(*libarch.a:*(.bss .bss.*))
+		    KEEP(*libconfigs.a:*(.bss .bss.*))
+	    PROVIDE(_end_soc_bss = .);
+
+	    PROVIDE(_start_apps_bss = .);
+		    KEEP(*libapps.a:*(.bss .bss.*))
+	    PROVIDE(_end_apps_bss = .);
+/*
+		*(.bss .bss.*)
+*/
+		*(COMMON)
+
+		*(.gnu.linkonce.b.*)
+		_ebss = ABSOLUTE(.);
+	} > sram
+
+	/* Stabs debugging sections. */
+	.stab 0 : { *(.stab) }
+	.stabstr 0 : { *(.stabstr) }
+	.stab.excl 0 : { *(.stab.excl) }
+	.stab.exclstr 0 : { *(.stab.exclstr) }
+	.stab.index 0 : { *(.stab.index) }
+	.stab.indexstr 0 : { *(.stab.indexstr) }
+	.comment 0 : { *(.comment) }
+	.debug_abbrev 0 : { *(.debug_abbrev) }
+	.debug_info 0 : { *(.debug_info) }
+	.debug_line 0 : { *(.debug_line) }
+	.debug_pubnames 0 : { *(.debug_pubnames) }
+	.debug_aranges 0 : { *(.debug_aranges) }
+}
diff --git a/configs/fast_api_debug/scripts/ld.template b/configs/fast_api_debug/scripts/ld.template
new file mode 100644
index 0000000000..fd69a5ad82
--- /dev/null
+++ b/configs/fast_api_debug/scripts/ld.template
@@ -0,0 +1,249 @@
+/****************************************************************************
+ * configs/nrf52832-dk/scripts/ld.script
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *           Sebastien Lorquet <sebastien@lorquet.fr>
+ *           dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+/*****************************************************************************
+ *                                                                           *
+ * Copyright (C) 2017 zGlue Inc, All rights reserved.                        *
+ *                                                                           *
+ ****************************************************************************/
+
+/*****************************************************************************
+ * For the Nordic nrf52832 arm M4F.                                          *
+ *                                                                           *
+ *                                                                           *
+ ****************************************************************************/
+MEMORY
+{
+  flash (rx) :  ORIGIN = NRF_FLASH_START, LENGTH = NRF_FLASH_LENGTH
+  sram (rwx) :  ORIGIN = NRF_SRAM_START, LENGTH = NRF_SRAM_LENGTH
+}
+
+OUTPUT_ARCH(arm)
+ENTRY(_stext)
+SECTIONS
+{
+	.text : {
+		_stext = ABSOLUTE(.);
+		*(.vectors)
+
+	    PROVIDE(_start_sched = .);
+		    KEEP(*libsched.a:*(.text .text.*))
+		    KEEP(*libsched.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_sched = .);
+
+	    PROVIDE(_start_mm = .);
+		    KEEP(*libmm.a:*(.text .text.*))
+		    KEEP(*libmm.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_mm = .);
+
+	    PROVIDE(_start_c_cxx = .);
+		    KEEP(*libc.a:*(.text .text.*))
+		    KEEP(*libc.a:*(.rodata .rodata.*))
+		    KEEP(*libcxx.a:*(.text .text.*))
+		    KEEP(*libcxx.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_c_cxx = .);
+
+	    PROVIDE(_start_fs = .);
+		    KEEP(*libfs.a:*(.text .text.*))
+		    KEEP(*libfs.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_fs = .);
+
+	    PROVIDE(_start_drivers = .);
+		    KEEP(*libdrivers.a:*(.text .text.*))
+		    KEEP(*libdrivers.a:*(.rodata .rodata.*))
+		    KEEP(*libbinfmt.a:*(.text .text.*))
+		    KEEP(*libbinfmt.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_drivers = .);
+
+	    PROVIDE(_start_soc = .);
+		    KEEP(*libarch.a:*(.text .text.*))
+		    KEEP(*libarch.a:*(.rodata .rodata.*))
+		    KEEP(*libconfigs.a:*(.text .text.*))
+		    KEEP(*libconfigs.a:*(.rodata .rodata.*))
+		    KEEP(*libboard.a:*(.text .text.*))
+		    KEEP(*libboard.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_soc = .);
+
+	    PROVIDE(_start_apps = .);
+		    KEEP(*libapps.a:*(.text .text.*))
+		    KEEP(*libapps.a:*(.rodata .rodata.*))
+	    PROVIDE(_end_apps = .);
+/*
+		*(.text .text.*)
+		*(.rodata .rodata.*)
+*/
+		*(.fixup)
+		*(.gnu.warning)
+		*(.gnu.linkonce.t.*)
+		*(.glue_7)
+		*(.glue_7t)
+		*(.got)
+		*(.gcc_except_table)
+		*(.gnu.linkonce.r.*)
+		_etext = ABSOLUTE(.);
+	} > flash
+
+	.init_section : {
+		_sinit = ABSOLUTE(.);
+		*(.init_array .init_array.*)
+		_einit = ABSOLUTE(.);
+	} > flash
+
+	.ARM.extab : {
+		*(.ARM.extab*)
+	} > flash
+
+	__exidx_start = ABSOLUTE(.);
+	.ARM.exidx : {
+		*(.ARM.exidx*)
+	} > flash
+	__exidx_end = ABSOLUTE(.);
+
+	_eronly = ABSOLUTE(.);
+
+	.data : {
+        __data_start__ = .;
+		_sdata = ABSOLUTE(.);
+
+	    PROVIDE(_start_sched_data = .);
+	        KEEP(*libsched.a:*(.data .data.*))
+	    PROVIDE(_end_sched_data = .);
+
+	    PROVIDE(_start_mm_data = .);
+		KEEP(*libmm.a:*(.data .data.*))
+	    PROVIDE(_end_mm_data = .);
+
+	    PROVIDE(_start_drivers_data = .);
+	        KEEP(*libdrivers.a:*(.data .data.*))
+		KEEP(*libbinfmt.a:*(.data .data.*))
+	    PROVIDE(_end_drivers_data = .);
+
+	    PROVIDE(_start_c_cxx_data = .);
+	        KEEP(*libc.a:*(.data .data.*))
+	        KEEP(*libcxx.a:*(.data .data.*))
+	    PROVIDE(_end_c_cxx_data = .);
+
+	    PROVIDE(_start_fs_data = .);
+	        KEEP(*libfs.a:*(.data .data.*))
+	    PROVIDE(_end_fs_data = .);
+
+	    PROVIDE(_start_soc_data = .);
+	       KEEP(*libarch.a:*(.data .data.*))
+	       KEEP(*libconfigs.a:*(.data .data.*))
+	       KEEP(*libboard.a:*(.data .data.*))
+	    PROVIDE(_end_soc_data = .);
+
+	    PROVIDE(_start_apps_data = .);
+	       KEEP(*libapps.a:*(.data .data.*))
+	    PROVIDE(_end_apps_data = .);
+/*
+		*(.data .data.*)
+*/
+		*(.gnu.linkonce.d.*)
+		CONSTRUCTORS
+		_edata = ABSOLUTE(.);
+		__data_end__ = .;
+	} > sram AT > flash
+
+
+	.fs_data :
+	{
+	    _sfsdata = ABSOLUTE(.);
+	    . = ALIGN(4);
+	    PROVIDE(__start_fs_data = .);
+	    KEEP(*(.fs_data))
+	    PROVIDE(__stop_fs_data = .);
+	    . = ALIGN(4);
+       _efsdata = ABSOLUTE(.);
+	} > sram AT > flash
+
+
+	.bss : {
+		_sbss = ABSOLUTE(.);
+
+	    PROVIDE(_start_sched_bss = .);
+		    KEEP(*libsched.a:*(.bss .bss.*))
+	    PROVIDE(_end_sched_bss = .);
+
+	    PROVIDE(_start_mm_bss = .);
+		    KEEP(*libmm.a:*(.bss .bss.*))
+	    PROVIDE(_end_mm_bss = .);
+
+	    PROVIDE(_start_drivers_bss = .);
+	        KEEP(*libdrivers.a:*(.bss .bss.*))
+		KEEP(*libbinfmt.a:*(.bss .bss.*))
+	    PROVIDE(_end_drivers_bss = .);
+
+	    PROVIDE(_start_c_cxx_bss = .);
+	        KEEP(*libc.a:*(.bss .bss.*))
+		KEEP(*libcxx.a:*(.bss .bss.*))
+	    PROVIDE(_end_c_cxx_bss = .);
+
+	    PROVIDE(_start_fs_bss = .);
+		    KEEP(*libfs.a:*(.bss .bss.*))
+	    PROVIDE(_end_fs_bss = .);
+
+	    PROVIDE(_start_soc_bss = .);
+		    KEEP(*libarch.a:*(.bss .bss.*))
+		    KEEP(*libconfigs.a:*(.bss .bss.*))
+	    PROVIDE(_end_soc_bss = .);
+
+	    PROVIDE(_start_apps_bss = .);
+		    KEEP(*libapps.a:*(.bss .bss.*))
+	    PROVIDE(_end_apps_bss = .);
+/*
+		*(.bss .bss.*)
+*/
+		*(COMMON)
+
+		*(.gnu.linkonce.b.*)
+		_ebss = ABSOLUTE(.);
+	} > sram
+
+	/* Stabs debugging sections. */
+	.stab 0 : { *(.stab) }
+	.stabstr 0 : { *(.stabstr) }
+	.stab.excl 0 : { *(.stab.excl) }
+	.stab.exclstr 0 : { *(.stab.exclstr) }
+	.stab.index 0 : { *(.stab.index) }
+	.stab.indexstr 0 : { *(.stab.indexstr) }
+	.comment 0 : { *(.comment) }
+	.debug_abbrev 0 : { *(.debug_abbrev) }
+	.debug_info 0 : { *(.debug_info) }
+	.debug_line 0 : { *(.debug_line) }
+	.debug_pubnames 0 : { *(.debug_pubnames) }
+	.debug_aranges 0 : { *(.debug_aranges) }
+}
diff --git a/configs/fast_api_debug/scripts/nrf-debug b/configs/fast_api_debug/scripts/nrf-debug
new file mode 100755
index 0000000000..8713ab5b73
--- /dev/null
+++ b/configs/fast_api_debug/scripts/nrf-debug
@@ -0,0 +1,16 @@
+#!/bin/bash
+
+
+COMMAND=JLinkGDBServer
+DEVICE=nRF52832_xxAA
+if ps -ef | grep ${COMMAND} >/dev/null ; then
+    killall ${COMMAND}
+fi
+if ! which ${COMMAND} 2>/dev/null ; then
+   echo "Could not find ${COMMAND}" >&2
+   exit -1
+fi
+pushd ~ >/dev/null
+exec ${COMMAND} -device ${DEVICE} -if SWD
+echo ""
+popd >/dev/null
diff --git a/configs/fast_api_debug/scripts/nuttx-debug b/configs/fast_api_debug/scripts/nuttx-debug
new file mode 100755
index 0000000000..f7f2ff30d9
--- /dev/null
+++ b/configs/fast_api_debug/scripts/nuttx-debug
@@ -0,0 +1,52 @@
+#!/bin/bash
+
+COMMAND_FILE=configs/nrf52832_dk/scripts/arm-gdb.init
+IMAGE=nuttx
+
+#
+# Make sure all other runs of this debugger are killed off.
+#
+clear_hung_debuggers()
+{
+    PROGRAM=arm-none-eabi-gdb
+    if ps -ef | grep ${PROGRAM} >/dev/null; then
+        echo "Killing all other ${PROGRAM} programs"
+        killall ${PROGRAM} >/dev/null 2>&1
+    else
+        echo "No other versions of ${PROGRAM} running."
+    fi
+}
+
+find_nuttx()
+{
+    local rval=0
+    local DPATH=./
+
+    while [ ! -f ${DPATH}"${IMAGE}" ] ; do
+        DPATH="../"${DPATH}
+        if [ -d "$DPATH"/dev ] ; then
+            echo "Reached the top level dir." >&2
+            rval=-1
+            break
+        fi
+    done
+
+    echo $DPATH
+    return $rval
+}
+
+clear_hung_debuggers
+
+DIR=$(find_nuttx)
+if [ $? -ne 0 ] ; then
+	echo "Failed to find nuttx." >&2
+	exit -1
+fi
+
+pushd ${DIR} >/dev/null
+
+exec arm-none-eabi-gdb --command=$COMMAND_FILE $IMAGE
+
+popd >/dev/null
+
+exit
diff --git a/configs/fast_api_debug/src/Makefile b/configs/fast_api_debug/src/Makefile
new file mode 100644
index 0000000000..c1f070c6c5
--- /dev/null
+++ b/configs/fast_api_debug/src/Makefile
@@ -0,0 +1,64 @@
+############################################################################
+# configs/fast_api_debug/src/Makefile
+#
+#   Copyright (C) 2014 Gregory Nutt. All rights reserved.
+#   Author: dev@ziggurat29.com
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+-include $(TOPDIR)/Make.defs
+
+ASRCS =
+CSRCS = nrf52_boot.c  nrf52_autoleds.c
+
+ifeq ($(CONFIG_ARCH_BOARD_FAST_API_DEBUG),y)
+CFLAGS += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)fast_debug}
+endif
+ifeq ($(CONFIG_ARCH_BUTTONS),y)
+CSRCS +=  nrf52_buttons.c
+endif
+
+ifeq ($(CONFIG_LIB_BOARDCTL),y)
+CSRCS += nrf52_appinit.c
+endif
+
+ifeq ($(CONFIG_EXAMPLES_OSTEST),y)
+CSRCS += nrf52_ostest.c
+endif
+
+ifeq ($(CONFIG_NRF52_CS_CONTROL_BY_USER),y)
+CSRCS += nrf52_user_spi.c
+endif
+
+ifeq ($(CONFIG_CODE_ANALYSIS),y)
+CSRCS += code_analysis.c
+endif
+
+include $(TOPDIR)/configs/Board.mk
diff --git a/configs/fast_api_debug/src/code_analysis.c b/configs/fast_api_debug/src/code_analysis.c
new file mode 100644
index 0000000000..031022aeb8
--- /dev/null
+++ b/configs/fast_api_debug/src/code_analysis.c
@@ -0,0 +1,261 @@
+
+/****************************************************************************
+ * configs/nrf52832_dk/src/code_analysis.c
+ *
+ *   Copyright (C) 2017 Zglue  Inc. All rights reserved.
+ *   Author: Levin Li <zhiqiang@zglue.com>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+#include <nuttx/config.h>
+#include <stdint.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <debug.h>
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+struct code_analysis
+{
+  char      *module;
+  uint32_t  type;
+  uint32_t  start;
+  uint32_t  end;
+};
+
+enum
+{
+  CODE_INFO_TEXT = 0,
+  CODE_INFO_DATA,
+  CODE_INFO_BSS
+} CODE_INFO;
+
+static const char *name_section[] =
+{
+  "Text",
+  "Data",
+  "Bss"
+};
+
+#define SECTION_TEXT_VARS_END_SYMBOL(section_name)           _end_ ## section_name
+#define SECTION_TEXT_VARS_END_ADDR(section_name)         (uint32_t)&SECTION_TEXT_VARS_END_SYMBOL(section_name)
+
+#define SECTION_TEXT_VARS_START_SYMBOL(section_name)           _start_ ## section_name
+#define SECTION_TEXT_VARS_START_ADDR(section_name)         (uint32_t)&SECTION_TEXT_VARS_START_SYMBOL(section_name)
+
+#define SECTION_DATA_VARS_END_SYMBOL(section_name)           _end_ ## section_name ## _data
+#define SECTION_DATA_VARS_END_ADDR(section_name)         (uint32_t)&SECTION_DATA_VARS_END_SYMBOL(section_name)
+
+#define SECTION_DATA_VARS_START_SYMBOL(section_name)           _start_ ## section_name ## _data
+#define SECTION_DATA_VARS_START_ADDR(section_name)         (uint32_t)&SECTION_DATA_VARS_START_SYMBOL(section_name)
+
+#define SECTION_BSS_VARS_END_SYMBOL(section_name)           _end_ ## section_name ## _bss
+#define SECTION_BSS_VARS_END_ADDR(section_name)         (uint32_t)&SECTION_BSS_VARS_END_SYMBOL(section_name)
+
+#define SECTION_BSS_VARS_START_SYMBOL(section_name)           _start_ ## section_name ## _bss
+#define SECTION_BSS_VARS_START_ADDR(section_name)         (uint32_t)&SECTION_BSS_VARS_START_SYMBOL(section_name)
+
+#define SECTION_VARS_CREATE_SECTION_SYMBOL(section_name) \
+  extern uint32_t   SECTION_TEXT_VARS_START_SYMBOL(section_name); \
+  extern uint32_t   SECTION_TEXT_VARS_END_SYMBOL(section_name); \
+  \
+  extern uint32_t   SECTION_DATA_VARS_START_SYMBOL(section_name); \
+  extern uint32_t   SECTION_DATA_VARS_END_SYMBOL(section_name); \
+  \
+  extern uint32_t   SECTION_BSS_VARS_START_SYMBOL(section_name); \
+  extern uint32_t   SECTION_BSS_VARS_END_SYMBOL(section_name)
+
+/* define each module symbol variable */
+
+SECTION_VARS_CREATE_SECTION_SYMBOL(sched);
+SECTION_VARS_CREATE_SECTION_SYMBOL(mm);
+SECTION_VARS_CREATE_SECTION_SYMBOL(c_cxx);
+SECTION_VARS_CREATE_SECTION_SYMBOL(fs);
+SECTION_VARS_CREATE_SECTION_SYMBOL(drivers);
+SECTION_VARS_CREATE_SECTION_SYMBOL(soc);
+SECTION_VARS_CREATE_SECTION_SYMBOL(apps);
+
+static const struct code_analysis code_info[] =
+{
+  {
+    .module = "Sched",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(sched),
+    .end    = SECTION_TEXT_VARS_END_ADDR(sched),
+  },
+  {
+    .module = "Sched",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(sched),
+    .end    = SECTION_DATA_VARS_END_ADDR(sched),
+  },
+  {
+    .module = "Sched",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(sched),
+    .end    = SECTION_BSS_VARS_END_ADDR(sched),
+  },
+
+  {
+    .module = "MM",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(mm),
+    .end    = SECTION_TEXT_VARS_END_ADDR(mm),
+  },
+  {
+    .module = "MM",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(mm),
+    .end    = SECTION_DATA_VARS_END_ADDR(mm),
+  },
+  {
+    .module = "MM",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(mm),
+    .end    = SECTION_BSS_VARS_END_ADDR(mm),
+  },
+
+  {
+    .module = "Libc",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(c_cxx),
+    .end    = SECTION_TEXT_VARS_END_ADDR(c_cxx),
+  },
+  {
+    .module = "Libc",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(c_cxx),
+    .end    = SECTION_DATA_VARS_END_ADDR(c_cxx),
+  },
+  {
+    .module = "Libc",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(c_cxx),
+    .end    = SECTION_BSS_VARS_END_ADDR(c_cxx),
+  },
+
+  {
+    .module = "FS",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(fs),
+    .end    = SECTION_TEXT_VARS_END_ADDR(fs),
+  },
+  {
+    .module = "FS",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(fs),
+    .end    = SECTION_DATA_VARS_END_ADDR(fs),
+  },
+  {
+    .module = "FS",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(fs),
+    .end    = SECTION_BSS_VARS_END_ADDR(fs),
+  },
+
+  {
+    .module = "Drivers",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(drivers),
+    .end    = SECTION_TEXT_VARS_END_ADDR(drivers),
+  },
+  {
+    .module = "Drivers",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(drivers),
+    .end    = SECTION_DATA_VARS_END_ADDR(drivers),
+  },
+  {
+    .module = "Drivers",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(drivers),
+    .end    = SECTION_BSS_VARS_END_ADDR(drivers),
+  },
+
+  {
+    .module = "SoC",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(soc),
+    .end    = SECTION_TEXT_VARS_END_ADDR(soc),
+  },
+  {
+    .module = "SoC",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(soc),
+    .end    = SECTION_DATA_VARS_END_ADDR(soc),
+  },
+  {
+    .module = "SoC",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(soc),
+    .end    = SECTION_BSS_VARS_END_ADDR(soc),
+  },
+
+  {
+    .module = "Apps",
+    .type   = CODE_INFO_TEXT,
+    .start  = SECTION_TEXT_VARS_START_ADDR(apps),
+    .end    = SECTION_TEXT_VARS_END_ADDR(apps),
+  },
+  {
+    .module = "Apps",
+    .type   = CODE_INFO_DATA,
+    .start  = SECTION_DATA_VARS_START_ADDR(apps),
+    .end    = SECTION_DATA_VARS_END_ADDR(apps),
+  },
+  {
+    .module = "Apps",
+    .type   = CODE_INFO_BSS,
+    .start  = SECTION_BSS_VARS_START_ADDR(apps),
+    .end    = SECTION_BSS_VARS_END_ADDR(apps),
+  },
+
+};
+
+int zdk_code_analysis(void)
+{
+
+  /* output the text ,data, bss information for each module */
+  for (int i = 0; i < sizeof(code_info) / sizeof(struct code_analysis); i++)
+    {
+
+      _err("[%s] module, [%s] info: start:0x%08x, end:0x%08x. Size:%08d.\n",
+           code_info[i].module, name_section[code_info[i].type],
+           code_info[i].start, code_info[i].end, code_info[i].end - code_info[i].start);
+    }
+
+  return OK;
+}
+
diff --git a/configs/fast_api_debug/src/nrf52832-dk.h b/configs/fast_api_debug/src/nrf52832-dk.h
new file mode 100644
index 0000000000..65944819c4
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52832-dk.h
@@ -0,0 +1,125 @@
+/************************************************************************************
+ * configs/fast_api_debug/src/stm32l476-mdk.h
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Authors: Frank Bennett
+ *            Gregory Nutt <gnutt@nuttx.org>
+ *            Sebastien Lorquet <sebastien@lorquet.fr>
+ *            dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ************************************************************************************/
+
+#ifndef __CONFIGS_STM32L476_MDK_SRC_STM32L476_MDK_H
+#define __CONFIGS_STM32L476_MDK_SRC_STM32L476_MDK_H
+
+/************************************************************************************
+ * Included Files
+ ************************************************************************************/
+
+#include <nuttx/config.h>
+#include <nuttx/compiler.h>
+
+#include <stdint.h>
+
+/************************************************************************************
+ * Pre-processor Definitions
+ ************************************************************************************/
+/* Configuration ********************************************************************/
+
+#define HAVE_PROC             1
+#define HAVE_RTC_DRIVER       1
+
+#if !defined(CONFIG_FS_PROCFS)
+#  undef HAVE_PROC
+#endif
+
+#if defined(HAVE_PROC) && defined(CONFIG_DISABLE_MOUNTPOINT)
+#  warning Mountpoints disabled.  No procfs support
+#  undef HAVE_PROC
+#endif
+
+/* Check if we can support the RTC driver */
+
+#if !defined(CONFIG_RTC) || !defined(CONFIG_RTC_DRIVER)
+#  undef HAVE_RTC_DRIVER
+#endif
+
+/* LED.
+ * LD4: the red LED on PB2
+ * LD5: the green LED on PE8
+ *
+ * - When the I/O is HIGH value, the LED is on.
+ * - When the I/O is LOW, the LED is off.
+ */
+
+#define GPIO_LED_RED \
+  (GPIO_PORTB | GPIO_PIN2 | GPIO_OUTPUT_CLEAR | GPIO_OUTPUT | GPIO_PUSHPULL | \
+   GPIO_PULLUP | GPIO_SPEED_50MHz)
+
+#define GPIO_LED_GRN \
+  (GPIO_PORTE | GPIO_PIN8 | GPIO_OUTPUT_CLEAR | GPIO_OUTPUT | GPIO_PUSHPULL | \
+   GPIO_PULLUP | GPIO_SPEED_50MHz)
+
+/* BUTTONS -- NOTE that all have EXTI interrupts configured */
+
+#define MIN_IRQBUTTON   BUTTON_POWER
+#define MAX_IRQBUTTON   BUTTON_POWER
+#define NUM_IRQBUTTONS  1
+
+#define GPIO_BTN_POWER  (GPIO_INPUT|GPIO_FLOAT|GPIO_EXTI|GPIO_PORTD|GPIO_PIN2)
+
+/* SPI1 off */
+#define GPIO_SPI1_MOSI_OFF (GPIO_INPUT | GPIO_PULLDOWN | \
+                            GPIO_PORTE | GPIO_PIN15)
+#define GPIO_SPI1_MISO_OFF (GPIO_INPUT | GPIO_PULLDOWN | \
+                            GPIO_PORTE | GPIO_PIN14)
+#define GPIO_SPI1_SCK_OFF  (GPIO_INPUT | GPIO_PULLDOWN | \
+                            GPIO_PORTE | GPIO_PIN13)
+#define GPIO_SPI1_NSS_OFF  (GPIO_INPUT | GPIO_PULLDOWN | \
+                            GPIO_PORTE | GPIO_PIN12)
+
+/* Devices on the onboard I2C bus.
+ *
+ * Note that these are unshifted addresses.
+ */
+
+/************************************************************************************
+ * Public Data
+ ************************************************************************************/
+
+/* Global driver instances */
+
+
+
+/************************************************************************************
+ * Public Functions
+ ************************************************************************************/
+
+#endif /* __CONFIGS_STM32L476_MDK_SRC_STM32L476_MDK_H */
diff --git a/configs/fast_api_debug/src/nrf52_appinit.c b/configs/fast_api_debug/src/nrf52_appinit.c
new file mode 100644
index 0000000000..e1f73fdbfa
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_appinit.c
@@ -0,0 +1,922 @@
+/****************************************************************************
+ * configs/nrf52832_dk/src/nrf52_appinit.c
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <sys/mount.h>
+#include <stdio.h>
+#include <syslog.h>
+#include <errno.h>
+#include <debug.h>
+#include <string.h>
+#include <stdlib.h>
+
+#include <nuttx/arch.h>
+#include <nuttx/board.h>
+#include <nuttx/mtd/mtd.h>
+#include <nuttx/drivers/drivers.h>
+#include <nuttx/fs/nxffs.h>
+#include <nuttx/i2c/i2c_master.h>
+
+#ifdef CONFIG_FS_FAT
+#include <nuttx/fs/mkfatfs.h>
+#endif
+
+#include <nrf52.h>
+#include <arch/board/board.h>
+
+#include <nuttx/i2c/i2c_master.h>
+#include <nuttx/spi/spi.h>
+#include <nuttx/spi/spi_transfer.h>
+#include <nuttx/drivers/drivers.h>
+#include "nrf52_i2c.h"
+
+#ifdef CONFIG_NRF52_SPI
+#include "nrf52_spi.h"
+#endif
+
+#ifdef CONFIG_NRF52_LEGACY_SPI
+#include "nrf52_spi_legacy.h"
+#endif
+
+#include "nrf52_tim.h"
+#include "nrf52_rtc.h"
+#include "nrf52_wdg.h"
+#include "nrf52_pwm.h"
+#include "nrf52_qdec.h"
+#include "nrf_drv_clock.h"
+#include "chip/nrf52_tim.h"
+#include "nrf52_ppi.h"
+#include "nrf52_gpiote.h"
+#include "nrf_nvmc.h"
+
+#ifdef CONFIG_MC3672
+#include <nuttx/sensors/mc3672.h>
+#endif
+
+#ifdef CONFIG_BMM150
+#include <nuttx/sensors/bmm050.h>
+#endif
+
+#include "nrf52832-dk.h"
+#include "nrf52_adc.h"
+#include "nrf52_comp.h"
+
+#ifdef CONFIG_NRF52_PROCFS_DEVID
+#include "nrf52_procfs.h"
+#endif
+
+#ifdef HAVE_RTC_DRIVER
+#  include <nuttx/timers/rtc.h>
+#  include "nrf52_rtc.h"
+#endif
+
+
+
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+#ifdef CONFIG_NRF52_CS_CONTROL_BY_USER
+extern void customer_spi_cs_select(void);
+#endif
+
+#ifdef CONFIG_CODE_ANALYSIS
+extern int zdk_code_analysis(void);
+#endif
+
+/****************************************************************************
+ * Name: nrf52_i2c_register
+ *
+ * Description:
+ *   Register one I2C drivers for the I2C tool.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_SYSTEM_I2CTOOL
+#if defined(CONFIG_NRF52_I2C0)||defined(CONFIG_NRF52_I2C1)
+static void nrf52_i2c_register(int bus)
+{
+  FAR struct i2c_master_s *i2c;
+  int ret;
+
+  i2c = nrf52_i2cbus_initialize(bus);
+  if (i2c == NULL)
+    {
+      syslog(LOG_ERR, "ERROR: Failed to get I2C%d interface\n", bus);
+    }
+  else
+    {
+      ret = i2c_register(i2c, bus);
+      if (ret < 0)
+        {
+          syslog(LOG_ERR, "ERROR: Failed to register I2C%d driver: %d\n",
+                 bus, ret);
+          nrf52_i2cbus_uninitialize(i2c);
+        }
+    }
+}
+#endif
+#endif
+
+
+/****************************************************************************
+ * Name: nrf52_i2ctool
+ *
+ * Description:
+ *   Register I2C drivers for the I2C tool.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_SYSTEM_I2CTOOL
+static void nrf52_i2ctool(void)
+{
+  return;
+#ifdef CONFIG_NRF52_I2C0
+  nrf52_i2c_register(0);
+#endif
+#ifdef CONFIG_NRF52_I2C1
+  nrf52_i2c_register(1);
+#endif
+}
+#else
+#  define nrf52_i2ctool()
+#endif
+
+int nrf52_proc_fs_initialize(void)
+{
+  int ret = OK;
+
+#ifdef CONFIG_FS_PROCFS
+  /* Mount the procfs file system */
+
+  ret = mount(NULL, PROCFS_MOUNT, PROCFS_TYPE, 0, NULL);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: Failed to mount procfs at  %s: %d\n",
+             PROCFS_MOUNT, ret);
+    }
+
+#ifdef CONFIG_NRF52_PROCFS_DEVID
+  ret = devid_procfs_register();
+#endif
+
+#endif
+
+  return ret;
+}
+
+
+int nrf52_spi_flash_fs_initialize(void)
+{
+  int ret = OK;
+
+#if defined(CONFIG_NRF52_SPI1) || defined(CONFIG_NRF52_LEGACY_SPI2)
+
+  struct spi_dev_s *spi;
+
+  /* w25 spi flash is connected to SPI1 bus */
+#ifdef CONFIG_NRF52_SPI1
+  spi = nrf52_spibus_initialize(1);
+  if (NULL == spi)
+    {
+      syslog(LOG_ERR, "SPI2 Bus init  Error.\n");
+      return -ENODEV;
+    }
+#elif defined(CONFIG_NRF52_LEGACY_SPI2)
+  /* w25 spi flash is connected to SPI2 bus */
+
+  spi = legacy_spibus_initialize(2);
+  if (NULL == spi)
+    {
+      syslog(LOG_ERR, "SPI2 Bus init  Error.\n");
+      return -ENODEV;
+    }
+#endif
+
+#ifdef CONFIG_MTD_W25
+
+  FAR struct mtd_geometry_s geo;
+  FAR struct mtd_dev_s *mtd_block;
+  FAR struct mtd_dev_s *mtd_ftl;
+  char blockdev[18];
+  char chardev[12];
+
+  mtd_block = w25_initialize(spi);
+  if (NULL == mtd_block)
+    {
+      syslog(LOG_ERR, "w25 device initialize Error.\n");
+      return -ENODEV;
+    }
+
+  ret = mtd_block->ioctl(mtd_block, MTDIOC_GEOMETRY, (unsigned long)((uintptr_t)&geo));
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: mtd->ioctl failed: %d\n", ret);
+      return ret;
+    }
+
+  syslog(LOG_INFO, "W25 Flash Geometry:\n");
+  syslog(LOG_INFO, "  blocksize:      %lu\n", (unsigned long)geo.blocksize);
+  syslog(LOG_INFO, "  erasesize:      %lu\n", (unsigned long)geo.erasesize);
+  syslog(LOG_INFO, "  neraseblocks:   %lu\n", (unsigned long)geo.neraseblocks);
+
+#ifdef W25_TEST
+
+  uint8_t *p_buf = (uint8_t *)malloc(geo.erasesize);
+  if (NULL == p_buf)
+    {
+      syslog(LOG_WARNING, "Can't malloc buffer for w25 test.\n");
+    }
+  else
+    {
+      uint32_t nbytes;
+      uint32_t start_block = 0;
+      uint32_t end_block = 10;
+
+      /* test erase command */
+
+      syslog(LOG_WARNING, "Starting to Erase:\n");
+      nbytes = mtd_block->erase(mtd_block, start_block, end_block);
+      syslog(LOG_WARNING, "Erase block %d Done.\n", nbytes);
+
+      /* Read Test to verify Erase */
+      syslog(LOG_WARNING, "Starting to Reading:\n");
+
+      memset(p_buf, 0, geo.erasesize);
+      nbytes = mtd_block->read(mtd_block, start_block * geo.blocksize, geo.blocksize, p_buf);
+      syslog(LOG_WARNING, "Reading %d bytes from block %d to block %d.\n",
+             nbytes, start_block, 1);
+      for (int i = 0; i < geo.blocksize; i++)
+        {
+          if (p_buf[i] != 0xFF)
+            {
+              syslog(LOG_WARNING, "Erasing Error at block %d, index %d, value %d.\n",
+                     start_block, i, p_buf[i]);
+            }
+        }
+
+      /* Write Test */
+
+      syslog(LOG_WARNING, "Starting to write block size %d:\n", geo.blocksize);
+      for (int i = 0; i < geo.blocksize; i++)
+        {
+          p_buf[i] = (uint8_t)i;
+        }
+
+      nbytes = mtd_block->write(mtd_block, start_block * geo.blocksize, geo.blocksize, p_buf);
+
+      memset(p_buf, 0, geo.erasesize);
+      nbytes = mtd_block->read(mtd_block, start_block * geo.blocksize, geo.blocksize, p_buf);
+      syslog(LOG_WARNING, "Reading %d bytes from block %d to block %d.\n",
+             nbytes, start_block, 1);
+
+      for (int i = 0; i < geo.blocksize; i++)
+        {
+          if (p_buf[i] != (uint8_t)i)
+            {
+              syslog(LOG_WARNING, "Writing Error at block %d, index %d, expect value %d, actual value %d.\n",
+                     start_block, i, (uint8_t)i, p_buf[i]);
+            }
+        }
+      free(p_buf);
+    }
+
+#endif
+
+  /* Initialize to provide an FTL block driver on the MTD FLASH interface */
+
+  snprintf(blockdev, sizeof(blockdev) / sizeof(blockdev[0]),
+           "%s%d", MTD_BLOCK_MOUNT, SPI_FLASH_FS_MTD_MINOR);
+  snprintf(chardev, sizeof(blockdev) / sizeof(blockdev[0]),
+           "%s%d", MTD_CHAR_MOUNT, SPI_FLASH_FS_MTD_MINOR);
+
+#ifdef CONFIG_MTD_SECT512
+  mtd_ftl = s512_initialize(mtd_block);
+#else
+  mtd_ftl = mtd_block;
+#endif
+
+  ret = ftl_initialize(SPI_FLASH_FS_MTD_MINOR, mtd_ftl);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: W25 Failed to initialize the FTL layer: %d\n", ret);
+      return ret;
+    }
+
+  /* Now create a character device on the block device */
+
+  ret = bchdev_register(blockdev, chardev, false);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: bchdev_register %s failed: %d\n", chardev, ret);
+      return ret;
+    }
+
+  mkdir(SPI_FLASH_MOUNT_POINT, 0777);
+
+#ifdef CONFIG_FS_SMARTFS
+
+  ret = smart_initialize(SPI_FLASH_FS_SMARTFS_MINOR, mtd_block, NULL);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: smart_initialize failed: %d\n", ret);
+      return ret;
+    }
+
+#elif defined(CONFIG_FS_FAT)
+
+  ret = mount(blockdev, SPI_FLASH_MOUNT_POINT, SPI_FLASH_FS_TYPE, 0, NULL);
+  if (ret < 0)
+    {
+      struct fat_format_s fmt = FAT_FORMAT_INITIALIZER;
+//      fmt.ff_fattype = 32;
+      memcpy(fmt.ff_volumelabel, SPI_FLASH_FS_LABEL, SPI_FLASH_FS_LABEL_LEN);
+
+      syslog(LOG_NOTICE, "did not find valid fat filesystem on %s, ret : %d\n",
+             blockdev, ret);
+
+      syslog(LOG_NOTICE, "Starting to create FAT on %s \n", blockdev);
+      ret = mkfatfs(blockdev, &fmt);
+
+      if (OK == ret)
+        {
+          mount(blockdev, SPI_FLASH_MOUNT_POINT, SPI_FLASH_FS_TYPE, 0, NULL);
+        }
+      else
+        {
+          syslog(LOG_ERR, "Can't create FAT filesystem on %s, ret: %d\n", blockdev, ret);
+        }
+    }
+#endif
+
+#endif
+
+#endif
+
+  return ret;
+
+}
+
+int nrf52_internal_flash_fs_initialize(void)
+{
+  int ret = OK;
+
+#ifdef CONFIG_MTD_PROGMEM
+
+  FAR struct mtd_dev_s *mtd;
+  FAR struct mtd_geometry_s geo;
+  FAR struct mtd_dev_s *mtd_partiton;
+  char blockdev[18];
+  char chardev[12];
+  uint32_t flash_size;
+  uint32_t start_address;
+  uint32_t end_address;
+  uint32_t data_size;
+  uint32_t first_block = 0;
+
+  /* Create an instance of the NRF52 FLASH program memory device driver */
+
+  flash_size = nrf_nvmc_get_flash_size();
+  printf("Internal Flash %#x,  RAM %#x.\n", flash_size, nrf_nvmc_get_ram_size());
+
+  mtd = progmem_initialize();
+  if (!mtd)
+    {
+      syslog(LOG_ERR, "ERROR: progmem_initialize failed\n");
+      return -EINVAL;
+    }
+
+  /* Use the FTL layer to wrap the MTD driver as a block driver */
+
+  ret = ftl_initialize(PROGMEM_MTD_MINOR, mtd);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: Failed to initialize the FTL layer: %d\n", ret);
+      return ret;
+    }
+
+  /* Use the minor number to create device paths */
+
+  snprintf(blockdev, 18, "%s%d", MTD_BLOCK_MOUNT, PROGMEM_MTD_MINOR);
+  snprintf(chardev, 12, "%s%d", MTD_CHAR_MOUNT, PROGMEM_MTD_MINOR);
+
+  /* Now create a character device on the block device */
+
+  ret = bchdev_register(blockdev, chardev, false);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: bchdev_register %s failed: %d\n",
+             chardev, ret);
+      return ret;
+    }
+
+  /* get image information */
+
+  start_address = system_image_start_address();
+  end_address = system_image_ro_section_end();
+  data_size = system_image_data_section_size();
+  syslog(LOG_INFO, "Image: start_address: %#x, end_address: %#x , data size: %#x\n",
+         start_address, end_address, data_size);
+
+  /* Get the geometry of the FLASH device */
+
+  ret = mtd->ioctl(mtd, MTDIOC_GEOMETRY, (unsigned long)((uintptr_t)&geo));
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: mtd->ioctl failed: %d\n", ret);
+      return ret;
+    }
+
+  syslog(LOG_INFO, "Internal Flash Geometry:\n");
+  syslog(LOG_INFO, "  blocksize:      %lu\n", (unsigned long)geo.blocksize);
+  syslog(LOG_INFO, "  erasesize:      %lu\n", (unsigned long)geo.erasesize);
+  syslog(LOG_INFO, "  neraseblocks:   %lu\n", (unsigned long)geo.neraseblocks);
+
+#ifdef CONFIG_NRF52_BLUETOOTH
+  first_block = SYSTEM_SOFTDEVICE_IMAGE_SIZE;
+#endif
+
+  first_block += SYSTEM_BOOTLOADER_IMAGE_SIZE;
+  first_block += SYSTEM_APP_IMAGE_SIZE;
+
+  if (first_block > flash_size || first_block < (end_address + data_size))
+    {
+      syslog(LOG_ERR, "Attempt to create partition is out of Flash Size.\n");
+      return -1;
+    }
+
+  /* convert block from byte to block number */
+
+  first_block /= geo.blocksize;
+
+
+  mtd_partiton = mtd_partition(mtd, first_block, geo.neraseblocks - first_block);
+  if (NULL == mtd_partiton)
+    {
+      syslog(LOG_ERR, "ERROR: mtd_partition failed. offset=%lu nblocks=%lu\n",
+             (unsigned long)first_block, (unsigned long)geo.neraseblocks - first_block);
+      return -ENODEV;
+    }
+
+  /* Initialize to provide an FTL block driver on the MTD FLASH interface */
+
+  snprintf(blockdev, sizeof(blockdev) / sizeof(blockdev[0]),
+           "%s%d", MTD_BLOCK_MOUNT, PROGMEM_FS_MTD_MINOR);
+  snprintf(chardev, sizeof(blockdev) / sizeof(blockdev[0]),
+           "%s%d", MTD_CHAR_MOUNT, PROGMEM_FS_MTD_MINOR);
+
+  ret = ftl_initialize(PROGMEM_FS_MTD_MINOR, mtd_partiton);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: ftl_initialize %s failed: %d\n", blockdev, ret);
+      return ret;
+    }
+
+  /* Now create a character device on the block device */
+
+  ret = bchdev_register(blockdev, chardev, false);
+  if (ret < 0)
+    {
+      syslog(LOG_ERR, "ERROR: bchdev_register %s failed: %d\n", chardev, ret);
+      return ret;
+    }
+
+#if defined(CONFIG_FS_FAT)
+
+  ret = mount(blockdev, INTERNAL_FLASH_MOUNT_POINT, INTERNAL_FLASH_FS_TYPE, 0, NULL);
+  if (ret < 0)
+    {
+      struct fat_format_s fmt = FAT_FORMAT_INITIALIZER;
+//        fmt.ff_fattype = 32;
+      memcpy(fmt.ff_volumelabel, INTERNAL_FLASH_FS_LABEL, INTERNAL_FLASH_FS_LABEL_LEN);
+
+      syslog(LOG_NOTICE, "did not find valid fat filesystem on %s, ret : %d\n",
+             blockdev, ret);
+
+      syslog(LOG_NOTICE, "Starting to create FAT on %s \n", blockdev);
+      ret = mkfatfs(blockdev, &fmt);
+
+      if (OK == ret)
+        {
+          mount(blockdev, INTERNAL_FLASH_MOUNT_POINT, INTERNAL_FLASH_FS_TYPE, 0, NULL);
+        }
+      else
+        {
+          syslog(LOG_ERR, "Can't create FAT filesystem on %s, ret: %d\n", blockdev, ret);
+        }
+    }
+#endif
+#endif
+
+  return ret;
+}
+
+/****************************************************************************
+ * Name: board_app_initialize
+ *
+ * Description:
+ *   Perform application specific initialization.  This function is never
+ *   called directly from application code, but only indirectly via the
+ *   (non-standard) boardctl() interface using the command BOARDIOC_INIT.
+ *
+ * Input Parameters:
+ *   arg - The boardctl() argument is passed to the board_app_initialize()
+ *         implementation without modification.  The argument has no
+ *         meaning to NuttX; the meaning of the argument is a contract
+ *         between the board-specific initalization logic and the the
+ *         matching application logic.  The value cold be such things as a
+ *         mode enumeration value, a set of DIP switch switch settings, a
+ *         pointer to configuration data read from a file or serial FLASH,
+ *         or whatever you would like to do with it.  Every implementation
+ *         should accept zero/NULL as a default configuration.
+ *
+ * Returned Value:
+ *   Zero (OK) is returned on success; a negated errno value is returned on
+ *   any failure to indicate the nature of the failure.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_LIB_BOARDCTL
+int board_app_initialize(uintptr_t arg)
+{
+  int ret = OK;
+
+#ifdef CONFIG_CODE_ANALYSIS
+  zdk_code_analysis();
+#endif
+
+  if (ret != OK)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to do nrf clock init: %d\n",
+             ret);
+      return ret;
+    }
+
+
+#ifdef HAVE_RTC_DRIVER
+  FAR struct rtc_lowerhalf_s *rtclower;
+#endif
+
+
+#ifdef CONFIG_COUNTER
+  nrf_drv_clock_lfclk_request(NULL);
+#ifdef CONFIG_NRF52_RTC0
+  ret = nrf52_rtc_initialize("/dev/rtc0", 0);
+  if (ret != OK)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to register the rtc driver: %d\n",
+             ret);
+      return ret;
+    }
+#endif
+#ifdef CONFIG_NRF52_RTC1
+  ret = nrf52_rtc_initialize("/dev/rtc1", 1);
+  if (ret != OK)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to register the rtc driver: %d\n",
+             ret);
+      return ret;
+    }
+#endif
+#ifdef CONFIG_NRF52_RTC2
+  ret = nrf52_rtc_initialize("/dev/rtc2", 2);
+  if (ret != OK)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to register the rtc driver: %d\n",
+             ret);
+      return ret;
+    }
+#endif
+#endif
+
+#ifdef CONFIG_TIMER
+  /* Initialize and register the timer driver */
+
+#ifdef CONFIG_NRF52_TIM0
+  FAR struct nrf52_tim_dev_s *tim0;
+  tim0 = nrf52_timer_initialize("/dev/timer0", 0);
+  if (tim0 == NULL)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to register the timer driver: %d\n",
+             -ENODEV);
+      return -ENODEV;
+    }
+#endif
+
+#ifdef CONFIG_NRF52_TIM1
+  FAR struct nrf52_tim_dev_s *tim1;
+  tim1 = nrf52_timer_initialize("/dev/timer1", 1);
+  if (tim1 == NULL)
+    {
+      syslog(LOG_ERR,
+             "ERROR: Failed to register the timer driver: %d\n",
+             -ENODEV);
+      return -ENODEV;
+    }
+#endif
+
+#endif
+
+#ifdef CONFIG_I2C
+
+#ifdef CONFIG_NRF52_I2C0
+  FAR struct i2c_master_s *i2c0;
+  /* Initialize I2C */
+  i2c0 = nrf52_i2cbus_initialize(0);
+  if (!i2c0)
+    {
+      syslog(LOG_ERR, "ERROR: Failed to init the i2c0 driver\n");
+      return -ENODEV;
+    }
+#ifdef CONFIG_SYSTEM_I2CTOOL
+  /* Register I2C drivers on behalf of the I2C tool */
+  i2c_register(i2c0, 0);
+#endif
+#if defined(CONFIG_MC3672)
+  /* Then register the accelerometer sensor */
+  ret = mc3672_register("/dev/accel0", i2c0);
+  if (ret < 0)
+    {
+      snerr("ERROR: Error registering MC3672\n");
+      return -ENODEV;
+
+    }
+#endif
+#endif//CONFIG_NRF52_I2C0
+
+#ifdef CONFIG_NRF52_I2C1
+  FAR struct i2c_master_s *i2c1;
+  /* Initialize I2C */
+  i2c1 = nrf52_i2cbus_initialize(1);
+  if (!i2c1)
+    {
+      syslog(LOG_ERR, "ERROR: Failed to init the i2c1 driver\n");
+      return -ENODEV;
+    }
+
+#ifdef CONFIG_SYSTEM_I2CTOOL
+  /* Register I2C drivers on behalf of the I2C tool */
+  i2c_register(i2c1, 1);
+#endif
+#endif//CONFIG_NRF52_I2C1
+#endif//CONFIG_I2C
+
+#ifdef CONFIG_SPI
+
+#ifdef CONFIG_NRF52_CS_CONTROL_BY_USER
+  customer_spi_cs_select();
+#endif
+
+#if defined(CONFIG_NRF52_SPI0)||defined(CONFIG_NRF52_LEGACY_SPI0)
+  FAR struct spi_dev_s *spi0;
+
+#ifdef CONFIG_NRF52_SPI0
+  /* Initialize SPI0 */
+  spi0 = nrf52_spibus_initialize(0);
+  if (!spi0)
+    {
+      return -ENODEV;
+    }
+#elif defined(CONFIG_NRF52_LEGACY_SPI0)
+  /* Initialize SPI0 legacy*/
+  spi0 = legacy_spibus_initialize(0);
+  if (!spi0)
+    {
+      return -ENODEV;
+    }
+#endif
+
+#ifdef CONFIG_BMM150
+  /* Then register the accelerometer sensor */
+  struct bmm050_config_s bmm050_config;
+  bmm050_config.spi_devid = SPIDEV_MAGNETOMETER;
+
+#ifdef CONFIG_BMM150_INTERRUPT_ENABLE
+  /*issue:we haven't implement the interrupt mode until now*/
+  bmm050_config.irq = 0;
+  bmm050_config.attach = NULL;
+#else
+  bmm050_config.attach = NULL;
+#endif
+
+  ret = bmm050_register("/dev/mag0", spi0, &bmm050_config);
+  if (ret < 0)
+    {
+      snerr("ERROR: Error registering the BMM150\n");
+      return -ENODEV;
+    }
+#endif
+#endif /* CONFIG_NRF52_SPI0 */
+#endif /* CONFIG_SPI */
+
+
+#ifdef CONFIG_NRF52_PPI
+  ret = nrf_drv_ppi_init();
+  if (ret != 0)
+    {
+      snerr("ERROR: PPI Init error\n");
+      return -ENODEV;
+
+    }
+#endif
+
+#ifdef CONFIG_NRF52_EXAMPLES_GPIOTE_PPI
+  uint32_t compare_evt_addr_0 = 0, compare_evt_addr_1 = 0, compare_evt_addr_2 = 0;
+  compare_evt_addr_0 = nrf52_timer_event_address_get(tim0, NRF_TIMER_EVENT_COMPARE0);
+  compare_evt_addr_1 = nrf52_timer_event_address_get(tim0, NRF_TIMER_EVENT_COMPARE1);
+  compare_evt_addr_2 = nrf52_timer_event_address_get(tim0, NRF_TIMER_EVENT_COMPARE2);
+#endif
+
+#ifdef CONFIG_NRF52_GPIOTE
+  ret = nrf_drv_gpiote_init();
+  if (ret != 0)
+    {
+      snerr("ERROR: GPIOTE Init error\n");
+      return -ENODEV;
+
+    }
+#endif
+
+#ifdef CONFIG_NRF52_EXAMPLES_GPIOTE_PPI
+  nrf_ppi_channel_t ppi_channel_0 = NRF_PPI_CHANNEL0, ppi_channel_1 = NRF_PPI_CHANNEL0, ppi_channel_2 = NRF_PPI_CHANNEL0;
+  uint32_t gpiote_task_addr_0 = 0;
+  nrf_drv_gpiote_out_config_t config = GPIOTE_CONFIG_OUT_TASK_TOGGLE(false);
+  nrf_drv_gpiote_out_init(LED_1, &config);
+  gpiote_task_addr_0 = nrf_drv_gpiote_out_task_addr_get(LED_1);
+  nrf_drv_ppi_channel_alloc(&ppi_channel_0);
+  nrf_drv_ppi_channel_alloc(&ppi_channel_1);
+  nrf_drv_ppi_channel_alloc(&ppi_channel_2);
+  nrf_drv_ppi_channel_assign(ppi_channel_0, compare_evt_addr_0, gpiote_task_addr_0);
+  nrf_drv_ppi_channel_enable(ppi_channel_0);
+  nrf_drv_ppi_channel_assign(ppi_channel_1, compare_evt_addr_1, gpiote_task_addr_0);
+  nrf_drv_ppi_channel_enable(ppi_channel_1);
+  nrf_drv_ppi_channel_assign(ppi_channel_2, compare_evt_addr_2, gpiote_task_addr_0);
+  nrf_drv_ppi_channel_enable(ppi_channel_2);
+
+  nrf_drv_gpiote_out_task_enable(LED_1);
+#endif
+
+
+
+#ifdef CONFIG_SCHED_INSTRUMENTATION
+  /* Configure CPU load estimation */
+
+  cpuload_initialize_once();
+#endif
+
+#ifdef CONFIG_SYSTEM_I2CTOOL
+  /* Register I2C drivers on behalf of the I2C tool */
+  nrf52_i2ctool();
+#endif
+
+#ifdef HAVE_RTC_DRIVER
+  /* Instantiate the lower-half RTC driver */
+
+  rtclower = nrf52832_rtc_lowerhalf();
+  if (!rtclower)
+    {
+      serr("ERROR: Failed to instantiate the RTC lower-half driver\n");
+      return -ENOMEM;
+    }
+  else
+    {
+      /* Bind the lower half driver and register the combined RTC driver
+       * as /dev/rtc0
+       */
+
+      ret = rtc_initialize(0, rtclower);
+      if (ret < 0)
+        {
+          serr("ERROR: Failed to bind/register the RTC driver: %d\n", ret);
+          return ret;
+        }
+    }
+#endif
+
+#ifdef CONFIG_WATCHDOG
+#ifdef CONFIG_NRF52_WDG
+
+  nrf52_wdg_initialize("/dev/watchdog0", WDG_BEHAVIOUR_Pause, WDG_BEHAVIOUR_Pause);
+
+#endif
+#endif
+
+#ifdef CONFIG_PWM
+#ifdef CONFIG_NRF52_PWM
+  ret = nrf52_pwm_initialize();
+  if (ret < 0)
+    {
+      serr("ERROR: PWM initialize Fail\n");
+    }
+#endif
+#endif
+
+#ifdef CONFIG_QDECODER
+#ifdef CONFIG_NRF52_QDECODER
+  ret = nrf52_qdec_initialize("/dev/qdec0");
+  if (ret < 0)
+    {
+      serr("ERROR: PWM initialize Fail\n");
+    }
+#endif
+#endif
+
+  nrf52_proc_fs_initialize();
+
+  nrf52_internal_flash_fs_initialize();
+
+  nrf52_spi_flash_fs_initialize();
+
+#ifdef CONFIG_NRF52_ADC
+  adc_config_t adc_config;
+  adc_channel_config_t channel_config[CONFIG_NRF52_ADC_CHANNEL];
+
+  /*setup adc channel config */
+
+  for (int i = 0; i < CONFIG_NRF52_ADC_CHANNEL; i++)
+    {
+      channel_config[i].channel    = i;
+      channel_config[i].resistor_p = ADC_RESISTOR_BYPASS;
+      channel_config[i].resistor_n = ADC_RESISTOR_BYPASS;
+      channel_config[i].gain       = ADC_GAIN_1_4;
+      channel_config[i].ref        = ADC_REFERENCE_VDD1_4;
+      channel_config[i].time       = ADC_TIME_20US;
+      channel_config[i].mode       = ADC_CHANNEL_MODE_SINGLE_END;
+
+      /* analog input pin : Nodirc DK board , analog ping from AIN2(GPIO03) start */
+
+      channel_config[i].pin_p = i + ADC_INPUT_PIN_2;
+      channel_config[i].pin_n = 0;
+    }
+
+  adc_config.oversample = ADC_OVERSAMPLE_BYPASS;
+  adc_config.resolution = ADC_RESOLUTION_14BIT;
+  adc_config.mode       = ADC_MODE_ONE_SHOT;
+
+  ret = nrf52_adc_initialize(&adc_config, channel_config, CONFIG_NRF52_ADC_CHANNEL);
+
+  if (ret < 0)
+    {
+      serr("ERROR: ADC initialize Fail\n");
+    }
+#endif
+
+#ifdef CONFIG_NRF52_COMP_LPCOMP
+  ret = nrf52_comp_initialize();
+
+  if (ret < 0)
+    {
+      serr("ERROR: comparator initialize Fail\n");
+    }
+
+#endif
+
+  return OK;
+}
+#endif /* CONFIG_LIB_BOARDCTL */
+
+
diff --git a/configs/fast_api_debug/src/nrf52_autoleds.c b/configs/fast_api_debug/src/nrf52_autoleds.c
new file mode 100644
index 0000000000..2dfdfa0fe8
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_autoleds.c
@@ -0,0 +1,121 @@
+/****************************************************************************
+ * configs/stm32f3discovery/src/stm32_autoleds.c
+ *
+ *   Copyright (C) 2013, 2015 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <debug.h>
+
+#include "chip.h"
+#include "nrf52.h"
+#include "nrf52_gpio.h"
+
+
+
+#include <nuttx/arch.h>
+#include <nuttx/board.h>
+#include <arch/board/board.h>
+#include "nrf52832-dk.h"
+
+#ifdef CONFIG_ARCH_LEDS
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+#if LEDS_NUMBER > 0
+static const uint8_t m_board_led_list[LEDS_NUMBER] = LEDS_LIST;
+#endif
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Name: board_autoled_onoff
+ ****************************************************************************/
+
+void board_autoled_onoff(int led, bool state)
+{
+  if ((unsigned)led < LEDS_NUMBER)
+    {
+      nrf_gpio_pin_write((unsigned int)m_board_led_list[led], state);
+    }
+}
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Name: board_autoled_initialize
+ ****************************************************************************/
+
+void board_autoled_initialize(void)
+{
+  int i;
+
+  /* Configure LED1-8 GPIOs for output */
+
+  for (i = 0; i < LEDS_NUMBER; i++)
+    {
+      nrf_gpio_cfg_output(m_board_led_list[i]);
+      nrf_gpio_pin_write(m_board_led_list[i], 0);
+    }
+}
+
+/****************************************************************************
+ * Name: board_autoled_on
+ ****************************************************************************/
+
+void board_autoled_on(int led)
+{
+  board_autoled_onoff((unsigned int)led, true);
+}
+
+/****************************************************************************
+ * Name: board_autoled_off
+ ****************************************************************************/
+
+void board_autoled_off(int  led)
+{
+  board_autoled_onoff((unsigned int)led, false);
+}
+
+#endif /* CONFIG_ARCH_LEDS */
diff --git a/configs/fast_api_debug/src/nrf52_boot.c b/configs/fast_api_debug/src/nrf52_boot.c
new file mode 100755
index 0000000000..1376ca6d67
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_boot.c
@@ -0,0 +1,113 @@
+/************************************************************************************
+ * configs/fast_api_debug/src/stm32_boot.c
+ *
+ *   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *           dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ************************************************************************************/
+
+/************************************************************************************
+ * Included Files
+ ************************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <debug.h>
+
+#include <nuttx/arch.h>
+#include <nuttx/board.h>
+#include <nuttx/spi/spi.h>
+
+
+#include <arch/board/board.h>
+
+#include "up_arch.h"
+#include "nrf52832-dk.h"
+#if defined(CONFIG_ARCH_FAST_ZEUS) && CONFIG_ARCH_FAST_ZEUS == 1
+#include <nuttx/drivers/fast_zeus.h>
+#endif /* CONFIG_ARCH_FAST_ZEUS */
+
+/************************************************************************************
+ * Public Functions
+ ************************************************************************************/
+
+
+/************************************************************************************
+ * Name: nrf52_boardinitialize
+ *
+ * Description:
+ *   All nrf52 architectures must provide the following entry point.  This entry point
+ *   is called early in the initialization -- after all memory has been configured
+ *   and mapped but before any devices have been initialized.
+ *
+ ************************************************************************************/
+
+void nrf52_boardinitialize(void)
+{
+  /* Configure on-board LEDs if LED support has been selected. */
+
+#ifdef CONFIG_ARCH_LEDS
+  board_autoled_initialize();
+#endif
+}
+
+/****************************************************************************
+ * Name: board_initialize
+ *
+ * Description:
+ *   If CONFIG_BOARD_INITIALIZE is selected, then an additional
+ *   initialization call will be performed in the boot-up sequence to a
+ *   function called board_initialize().  board_initialize() will be
+ *   called immediately after up_intiialize() is called and just before the
+ *   initial application is started.  This additional initialization phase
+ *   may be used, for example, to initialize board-specific device drivers.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_BOARD_INITIALIZE
+void board_initialize(void)
+{
+  /* Perform NSH initialization here instead of from the NSH.  This
+   * alternative NSH initialization is necessary when NSH is ran in user-space
+   * but the initialization function must run in kernel space.
+   */
+#if defined(CONFIG_ARCH_FAST_ZEUS)
+  fast_register();
+
+#endif
+
+#if !defined(CONFIG_ARCH_FAST_ZEUS)
+//#if defined(CONFIG_NSH_LIBRARY) && !defined(CONFIG_NSH_ARCHINIT)
+  board_app_initialize(0);
+//#endif
+#endif
+}
+#endif
diff --git a/configs/fast_api_debug/src/nrf52_buttons.c b/configs/fast_api_debug/src/nrf52_buttons.c
new file mode 100644
index 0000000000..5c8560b580
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_buttons.c
@@ -0,0 +1,166 @@
+/****************************************************************************
+ * configs/fast_api_debug/src/stm32_buttons.c
+ *
+ *   Copyright (C) 2016-2017 Gregory Nutt. All rights reserved.
+ *   Author: dev@ziggurat29.com
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/****************************************************************************
+ * Included Files
+ ****************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdint.h>
+#include <errno.h>
+#include "nrf52.h"
+#include "nrf52_gpio.h"
+
+#include <nuttx/arch.h>
+#include <nuttx/board.h>
+#include <arch/board/board.h>
+
+#include "nrf52832-dk.h"
+
+#ifdef CONFIG_ARCH_BUTTONS
+
+/****************************************************************************
+ * Pre-processor Definitions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Private Data
+ ****************************************************************************/
+/* Pin configuration for each button.  This array is indexed by
+ * the BUTTON_* definitions in board.h
+ */
+#if BUTTONS_NUMBER > 0
+static const uint8_t m_board_btn_list[BUTTONS_NUMBER] = BUTTONS_LIST;
+#endif
+
+/****************************************************************************
+ * Private Functions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Public Functions
+ ****************************************************************************/
+
+/****************************************************************************
+ * Name: board_button_initialize
+ *
+ * Description:
+ *   board_button_initialize() must be called to initialize button resources.
+ *   After that, board_buttons() may be called to collect the current state
+ *   of all buttons or board_button_irq() may be called to register button
+ *   interrupt handlers.
+ *
+ ****************************************************************************/
+
+void board_button_initialize(void)
+{
+  int i;
+
+  /* Configure the GPIO pins as inputs.  NOTE that EXTI interrupts are
+   * configured for all pins.
+   */
+
+  for (i = 0; i < BUTTONS_NUMBER; i++)
+    {
+      nrf_gpio_cfg_output(m_board_btn_list[i]);
+    }
+}
+
+/****************************************************************************
+ * Name: board_buttons
+ ****************************************************************************/
+
+uint8_t board_buttons(void)
+{
+  uint8_t ret = 0;
+  int i;
+
+  /* Check that state of each key */
+
+  for (i = 0; i < BUTTONS_NUMBER; i++)
+    {
+      /* A LOW value means that the key is pressed. */
+
+      bool released = nrf_gpio_pin_read(m_board_btn_list[i]);
+
+      /* Accumulate the set of depressed (not released) keys */
+
+      if (!released)
+        {
+          ret |= (1 << i);
+        }
+    }
+
+  return ret;
+}
+
+/*****************************************************************************
+ * Button support.
+ *
+ * Description:
+ *   board_button_initialize() must be called to initialize button resources.
+ *   After that, board_buttons() may be called to collect the current state
+ *   of all buttons or board_button_irq() may be called to register button
+ *   interrupt handlers.
+ *
+ *   After board_button_initialize() has been called, board_buttons() may be
+ *   called to collect the state of all buttons.  board_buttons() returns an
+ *   8-bit bit set with each bit associated with a button.  See the
+ *   BUTTON_*_BIT definitions in board.h for the meaning of each bit.
+ *
+ *   board_button_irq() may be called to register an interrupt handler that
+ *   will be called when a button is depressed or released.  The ID value
+ *   is a button enumeration value that uniquely identifies a button resource.
+ *   See the BUTTON_* definitions in board.h for the meaning of enumeration
+ *   value.
+ *
+ ****************************************************************************/
+
+#ifdef CONFIG_ARCH_IRQBUTTONS
+int board_button_irq(int id, xcpt_t irqhandler, FAR void *arg)
+{
+  int ret = -EINVAL;
+
+  if (id >= MIN_IRQBUTTON && id <= MAX_IRQBUTTON)
+    {
+      ret = nrf52_gpiosetevent(m_board_btn_list[id], true, true, true,
+                               irqhandler, arg);
+    }
+
+  return ret;
+}
+#endif
+#endif /* CONFIG_ARCH_BUTTONS */
diff --git a/configs/fast_api_debug/src/nrf52_ostest.c b/configs/fast_api_debug/src/nrf52_ostest.c
new file mode 100644
index 0000000000..9357a038dd
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_ostest.c
@@ -0,0 +1,111 @@
+/************************************************************************************
+ * configs/nrf52832_dk/src/nrf52_ostest.c
+ *
+ *   Copyright (C) 2017 Gregory Nutt. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ************************************************************************************/
+
+/************************************************************************************
+ * Included Files
+ ************************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <string.h>
+#include <debug.h>
+
+#include <nuttx/irq.h>
+#include <arch/board/board.h>
+
+#include "up_arch.h"
+#include "up_internal.h"
+#include "nrf52832-dk.h"
+
+/************************************************************************************
+ * Pre-processor Definitions
+ ************************************************************************************/
+
+/* Configuration ********************************************************************/
+
+#undef HAVE_FPU
+#if defined(CONFIG_ARCH_FPU) && !defined(CONFIG_EXAMPLES_OSTEST_FPUTESTDISABLE) && \
+    defined(CONFIG_EXAMPLES_OSTEST_FPUSIZE) && defined(CONFIG_SCHED_WAITPID) && \
+    !defined(CONFIG_DISABLE_SIGNALS)
+#    define HAVE_FPU 1
+#endif
+
+#ifdef HAVE_FPU
+
+#if CONFIG_EXAMPLES_OSTEST_FPUSIZE != (4*SW_FPU_REGS)
+#  error "CONFIG_EXAMPLES_OSTEST_FPUSIZE has the wrong size"
+#endif
+
+/************************************************************************************
+ * Private Data
+ ************************************************************************************/
+
+static uint32_t g_saveregs[XCPTCONTEXT_REGS];
+
+/************************************************************************************
+ * Public Functions
+ ************************************************************************************/
+
+/* Given an array of size CONFIG_EXAMPLES_OSTEST_FPUSIZE, this function will return
+ * the current FPU registers.
+ */
+
+void arch_getfpu(FAR uint32_t *fpusave)
+{
+  irqstate_t flags;
+
+  /* Take a snapshot of the thread context right now */
+
+  flags = enter_critical_section();
+  up_saveusercontext(g_saveregs);
+
+  /* Return only the floating register values */
+
+  memcpy(fpusave, &g_saveregs[REG_S0], (4 * SW_FPU_REGS));
+  leave_critical_section(flags);
+}
+
+/* Given two arrays of size CONFIG_EXAMPLES_OSTEST_FPUSIZE this function
+ * will compare them and return true if they are identical.
+ */
+
+bool arch_cmpfpu(FAR const uint32_t *fpusave1, FAR const uint32_t *fpusave2)
+{
+  return memcmp(fpusave1, fpusave2, (4 * SW_FPU_REGS)) == 0;
+}
+
+#endif /* HAVE_FPU */
diff --git a/configs/fast_api_debug/src/nrf52_user_spi.c b/configs/fast_api_debug/src/nrf52_user_spi.c
new file mode 100644
index 0000000000..b7f6d6d209
--- /dev/null
+++ b/configs/fast_api_debug/src/nrf52_user_spi.c
@@ -0,0 +1,210 @@
+/****************************************************************************
+ * configs/nrf52832_dk/src/nrf52_user_spi.c
+ *
+ *   Copyright (C) 2017 Gregory Nutt. All rights reserved.
+ *   Copyright (C) 2017 Zglue  Inc. All rights reserved.
+ *   Author: Gregory Nutt <gnutt@nuttx.org>
+ *           Levin Li     <zhiqiang@zglue.com>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+/************************************************************************************
+ * Included Files
+ ************************************************************************************/
+
+#include <nuttx/config.h>
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <debug.h>
+#include <errno.h>
+
+#include <nuttx/spi/spi.h>
+#include <arch/board/board.h>
+
+#include <up_arch.h>
+#include <chip.h>
+#include "nrf52_gpio.h"
+
+#ifdef CONFIG_NRF52_SPI
+#include "nrf52_spi.h"
+#endif
+
+#ifdef CONFIG_NRF52_LEGACY_SPI
+#include "nrf52_spi_legacy.h"
+#endif
+
+/************************************************************************************
+ * Public Data
+ ************************************************************************************/
+/* Global driver instances */
+
+
+/************************************************************************************
+ * Public Functions
+ ************************************************************************************/
+
+static void user_cs_select(uint32_t cs_pin, bool selected)
+{
+  if (selected)
+    {
+      nrf_gpio_pin_clear(cs_pin);
+    }
+  else
+    {
+      nrf_gpio_pin_set(cs_pin);
+    }
+
+  return;
+}
+
+static void user_cs_config(uint32_t cs_pin)
+{
+
+  nrf_gpio_pin_set(cs_pin);
+  nrf_gpio_cfg_output(cs_pin);
+
+  return;
+}
+
+#if defined(CONFIG_NRF52_SPI0) || defined(CONFIG_NRF52_LEGACY_SPI0)
+static void nrf52_spi0_select(enum spi_dev_e devid, bool selected)
+{
+  spiinfo("devid: %d CS: %s\n", (int)devid, selected ? "assert" : "de-assert");
+
+  if (devid == SPIDEV_FLASH)
+    {
+      user_cs_select(SPI0_FLASH_CS, selected);
+    }
+  else if (devid == SPIDEV_MAGNETOMETER)
+    {
+      user_cs_select(SPI0_BMM150_CS, selected);
+    }
+}
+
+#endif
+
+#if defined(CONFIG_NRF52_SPI1) || defined(CONFIG_NRF52_LEGACY_SPI1)
+static void nrf52_spi1_select(enum spi_dev_e devid, bool selected)
+{
+  spiinfo("devid: %d CS: %s\n", (int)devid, selected ? "assert" : "de-assert");
+
+  if (devid == SPIDEV_FLASH)
+    {
+      user_cs_select(SPI1_FLASH_CS, selected);
+    }
+  else if (devid == SPIDEV_MAGNETOMETER)
+    {
+      user_cs_select(SPI1_BMM150_CS, selected);
+    }
+
+}
+#endif
+
+#if defined(CONFIG_NRF52_SPI2) || defined(CONFIG_NRF52_LEGACY_SPI2)
+static void nrf52_spi2_select(enum spi_dev_e devid, bool selected)
+{
+  spiinfo("devid: %d CS: %s\n", (int)devid, selected ? "assert" : "de-assert");
+
+  if (devid == SPIDEV_FLASH)
+    {
+      user_cs_select(SPI2_FLASH_CS, selected);
+    }
+  else if (devid == SPIDEV_MAGNETOMETER)
+    {
+      user_cs_select(SPI2_BMM150_CS, selected);
+    }
+}
+#endif
+
+static void customer_spi_select(nrf_spi_bus_t busid, enum spi_dev_e devid, bool selected)
+{
+  spiinfo("busid: %d, devid: %d CS: %s\n", busid, (int)devid, selected ? "assert" : "de-assert");
+
+#if defined(CONFIG_NRF52_SPI0) || defined(CONFIG_NRF52_LEGACY_SPI0)
+  if (SPI_NRF52_BUS_0 == busid)
+    {
+      nrf52_spi0_select(devid, selected);
+      return;
+    }
+#endif
+
+#if defined(CONFIG_NRF52_SPI1) || defined(CONFIG_NRF52_LEGACY_SPI1)
+  if (SPI_NRF52_BUS_1 == busid)
+    {
+      nrf52_spi1_select(devid, selected);
+      return;
+    }
+#endif
+
+#if defined(CONFIG_NRF52_SPI2) || defined(CONFIG_NRF52_LEGACY_SPI2)
+  if (SPI_NRF52_BUS_2 == busid)
+    {
+      nrf52_spi2_select(devid, selected);
+      return;
+    }
+
+#endif
+
+  /*if running here , means error */
+  spierr("Wrong Bus ID %d.\n", busid);
+
+  return;
+}
+
+void customer_spi_cs_select(void)
+{
+
+#if defined(CONFIG_NRF52_SPI0) || defined(CONFIG_NRF52_LEGACY_SPI0)
+  user_cs_config(SPI0_FLASH_CS);
+  user_cs_config(SPI0_BMM150_CS);
+#endif
+
+#if defined(CONFIG_NRF52_SPI1) || defined(CONFIG_NRF52_LEGACY_SPI1)
+  user_cs_config(SPI1_FLASH_CS);
+  user_cs_config(SPI1_BMM150_CS);
+#endif
+
+#if defined(CONFIG_NRF52_SPI2) || defined(CONFIG_NRF52_LEGACY_SPI2)
+  user_cs_config(SPI2_FLASH_CS);
+  user_cs_config(SPI2_BMM150_CS);
+#endif
+
+#ifdef CONFIG_NRF52_SPI
+  nrf52_spibus_register(customer_spi_select);
+#endif
+
+#ifdef CONFIG_NRF52_LEGACY_SPI
+  nrf52_legacy_spibus_register(customer_spi_select);
+#endif
+
+}
+
+
diff --git a/configs/nrf52832_dk/Makefile b/configs/nrf52832_dk/Makefile
index 8e55844964..30fddd8525 100644
--- a/configs/nrf52832_dk/Makefile
+++ b/configs/nrf52832_dk/Makefile
@@ -22,6 +22,7 @@ APPS = $(shell ls */defconfig | sed -e 's/\/.*//')
 CD = cd
 LN = ln -sf
 CP = cp
+RM = rm -f
 LD_SCRIPTS = ld.standard.script ld.softd.script tmp
 TMPDIR = /tmp
 
@@ -56,8 +57,15 @@ endef
 # of that path.  E.g. if the path is arch/arm/src then cd to src and
 # run cscope -s../../..
 #
-define DO_CSCOPE
-        cd $(DEPTH)/$1 && cscope -R -k -b -s $(call BACK_TRACK,$1)
+define REDO_CSCOPE
+	@echo "Run cscope from $(DEPTH)/$1"
+        $(Q) cd $(DEPTH)/$1 && cscope -R -k -b -s $(call BACK_TRACK,$1)
+endef
+
+#
+define UNDO_CSCOPE
+	@echo "Remove cscope.out from $(DEPTH)/$1"
+        $(Q) cd $(DEPTH)/$1 && $(RM) cscope.out
 endef
 
 #
@@ -140,9 +148,9 @@ $(APPS):
 	$(Q) $(MAKE) Q=$(Q) V=$(V) -C $(DEPTH)
 
 cscope: clean_cscope
-	$(Q)$(call DO_CSCOPE,)
-	$(Q)$(call DO_CSCOPE,$(CHIP_SRC))
-	$(Q)$(call DO_CSCOPE,configs/$(PLATFORM))
+	$(Q)$(call REDO_CSCOPE,)
+	$(Q)$(call REDO_CSCOPE,$(CHIP_SRC))
+	$(Q)$(call REDO_CSCOPE,configs/$(PLATFORM))
 
 clean:
 	$(Q) if [ "$(MAKECMDGOALS)" = "clean" ] ; then \
@@ -159,9 +167,9 @@ clobber: distclean
 clean_env: clean_cscope clean_cruft
 
 clean_cscope:
-	$(Q)$(call RM_CSCOPE,)
-	$(Q)$(call RM_CSCOPE,$(CHIP_SRC))
-	$(Q)$(call RM_CSCOPE,configs/$(PLATFORM))
+	$(Q)$(call UNDO_CSCOPE,)
+	$(Q)$(call UNDO_CSCOPE,$(CHIP_SRC))
+	$(Q)$(call UNDO_CSCOPE,configs/$(PLATFORM))
 
 #
 # Remove all those pesky files resulting from side effects of running
diff --git a/configs/nrf52832_dk/ble_dfu/defconfig b/configs/nrf52832_dk/ble_dfu/defconfig
index 023f8436da..c1774883c6 100644
--- a/configs/nrf52832_dk/ble_dfu/defconfig
+++ b/configs/nrf52832_dk/ble_dfu/defconfig
@@ -1029,6 +1029,7 @@ CONFIG_BLE_APP_PPCP_MAX_INTERVAL=3200
 CONFIG_BLE_APP_PPCP_SLAVE_LATENCY=0
 CONFIG_BLE_APP_CONN_SUP_TIMEOUT=1800
 
+CONFIG_ZEUS1=y
 #
 # IEEE 802.15.4 applications
 #
diff --git a/configs/nrf52832_dk/hello_nuttx/Make.defs b/configs/nrf52832_dk/hello_nuttx/Make.defs
new file mode 100644
index 0000000000..e9ce363f74
--- /dev/null
+++ b/configs/nrf52832_dk/hello_nuttx/Make.defs
@@ -0,0 +1,42 @@
+############################################################################
+# configs/nrf52832_dk/hello/Make.defs
+#
+#   Copyright (C) 2016 Gregory Nutt. All rights reserved.
+#   Author: dev@ziggurat29.com
+#   Copyright (C) 2017 zGlue Inc.
+#   Author: bill@zglue.com
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+include ${TOPDIR}/.config
+include ${TOPDIR}/tools/Config.mk
+include ${TOPDIR}/arch/arm/src/armv7-m/Toolchain.defs
+include ${TOPDIR}/configs/$(CONFIG_ARCH_BOARD)/defaults.mk
+
diff --git a/configs/nrf52832_dk/scripts/.gitignore b/configs/nrf52832_dk/scripts/.gitignore
new file mode 100644
index 0000000000..3b87b2be70
--- /dev/null
+++ b/configs/nrf52832_dk/scripts/.gitignore
@@ -0,0 +1,3 @@
+ld.standard.script
+ld.softd.script
+
diff --git a/configs/nrf52832_dk/src/micro_ecc_lib_nrf52 b/configs/nrf52832_dk/src/micro_ecc_lib_nrf52
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/drivers/Kconfig b/drivers/Kconfig
index 648cdb86cf..22df60dda3 100644
--- a/drivers/Kconfig
+++ b/drivers/Kconfig
@@ -578,3 +578,7 @@ menuconfig DRIVERS_CONTACTLESS
 source drivers/contactless/Kconfig
 
 source drivers/syslog/Kconfig
+
+source drivers/fast_api/Kconfig
+
+source drivers/gpio_api/Kconfig
diff --git a/drivers/Makefile b/drivers/Makefile
index 94f027afbb..82821fd727 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -76,6 +76,11 @@ include usbmonitor$(DELIM)Make.defs
 include video$(DELIM)Make.defs
 include wireless$(DELIM)Make.defs
 include contactless$(DELIM)Make.defs
+include fast_api$(DELIM)Make.defs
+
+# ifeq ($(CONFIG_ARCH_VIRTUAL_GPIO),y)
+# include gpio_api$(DELIM)Make.defs
+# endif
 
 ifneq ($(CONFIG_NFILE_DESCRIPTORS),0)
   CSRCS += dev_null.c dev_zero.c
diff --git a/drivers/fast_api/Kconfig b/drivers/fast_api/Kconfig
new file mode 100644
index 0000000000..c4dabfa2ab
--- /dev/null
+++ b/drivers/fast_api/Kconfig
@@ -0,0 +1,9 @@
+#
+# For a description of the syntax of this configuration file,
+# see the file kconfig-language.txt in the NuttX tools repository.
+#
+
+
+config ARCH_FAST_ZEUS
+       bool "FAST API"
+       default n
diff --git a/drivers/fast_api/Make.defs b/drivers/fast_api/Make.defs
new file mode 100644
index 0000000000..98b7d22a35
--- /dev/null
+++ b/drivers/fast_api/Make.defs
@@ -0,0 +1,45 @@
+############################################################################
+# drivers/fast_debug/Make.defs
+#
+#   Copyright (C) 2013, 2016 Gregory Nutt. All rights reserved.
+#   Author: Gregory Nutt <gnutt@nuttx.org>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+# Don't build anything if there is no SPI support
+
+ifeq ($(CONFIG_ARCH_FAST_ZEUS),y)
+CSRCS += fast_zeus.c
+CFLAGS += -l_NRF52
+
+DEPPATH += --dep-path fast_api
+VPATH += fast_api
+
+endif
diff --git a/drivers/fast_api/fast_zeus.c b/drivers/fast_api/fast_zeus.c
new file mode 100644
index 0000000000..8779175dab
--- /dev/null
+++ b/drivers/fast_api/fast_zeus.c
@@ -0,0 +1,191 @@
+/****************************************************************************
+ * configs/zeus_austin/src/zeus_fast.c
+ *
+ *   Copyright (C) 2018 zGlue Inc. All rights reserved.
+ *   Author: Bill Rees <bill@zglue.com>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+#include <stdint.h>
+#include <stdbool.h>
+#include <stdio.h>
+#include <string.h>
+#include <debug.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <nuttx/fs/fs.h>
+#include <nuttx/irq.h>
+#include <nuttx/arch.h>
+#include <nuttx/semaphore.h>
+#include <nuttx/fs/ioctl.h>
+#include <nuttx/drivers/drivers.h>
+#include <arch/board/board.h>
+#include <nuttx/spi/spi_transfer.h>
+#include <nuttx/drivers/fast_zeus.h>
+#include <nuttx/fast_api/fast_api.h>
+#include "nrf52_jtag.h"
+
+static int fast_open(FAR struct file *filep);
+static ssize_t fast_read(FAR struct file *filep, FAR char *buffer, size_t buflen);
+static ssize_t fast_write(FAR struct file *filep, FAR const char *buffer, size_t buflen);
+static int fast_ioctl(FAR struct file *filep, int cmd, unsigned long arg);
+#ifndef CONFIG_DISABLE_POLL
+static int fast_poll(FAR struct file *filep, struct pollfd *fds, bool setup);
+#endif
+const char *fast_dev_path = FAST_DEV_PATH;
+
+struct zg_fast_dev_s
+{
+  char     id[FAST_IDLEN];
+  char    *buf;
+  ssize_t  count;
+  ssize_t  buflen;
+  sem_t    ioctl_sem;
+} zg_fast_dev_s;
+
+/* Internal data blob holding semaphore, buf pointer, buflen, count
+ * and anything else needed for transfering data over spi.
+ */
+static struct zg_fast_dev_s g_fastdev;
+static struct zg_fast_dev_s *g_fastdev_p = &g_fastdev;
+
+/* Most of these ops are not supported (basically all but open(), ioctl())
+ */
+static const struct file_operations g_fast_ops =
+{
+  fast_open,       /* open   */
+  0,               /* close  */
+  fast_read,       /* read   */
+  fast_write,      /* write  */
+  0,               /* seek   */
+  fast_ioctl,      /* ioctl  */
+#ifndef CONFIG_DISABLE_POLL
+  fast_poll,       /* poll   */
+#endif
+#ifndef CONFIG_DISABLE_PSEUDOFS_OPERATIONS
+  0,               /* unlink */
+#endif
+};
+
+static int fast_open(FAR struct file *filep)
+{
+  if (filep->f_oflags & O_NONBLOCK)
+    {
+
+    }
+  return OK;
+}
+
+static ssize_t fast_read(FAR struct file *filep, FAR char *buffer, size_t buflen)
+{
+  set_errno(-ENOSYS);
+  return !OK;
+}
+
+static ssize_t fast_write(FAR struct file *filep, FAR const char *buffer, size_t buflen)
+{
+  set_errno(-ENOSYS);
+  return !OK;
+}
+
+
+
+
+static int fast_ioctl(FAR struct file *filep, int cmd, unsigned long arg)
+{
+  int ret = OK;
+
+#if 0  //MinYang comment temp, Bill will fix this one
+  while (sem_trywait(&g_fastdev_p->ioctl_sem) != OK)
+    {
+      if (filep->f_oflags & O_NONBLOCK)
+        {
+          set_errno(-EAGAIN);
+          return !OK;
+        }
+    }
+#endif
+  switch (cmd)
+    {
+      case FAST_API_INIT:
+        fast_api_init(arg);
+        break;
+      case FAST_GET_SYSTEM_INFORMATION:
+        fast_get_system_information(arg);
+        break;
+      case FAST_CONNECT_CHIP:
+        /*      fast_jtag_read(ujtag_instruction, *data); */
+        break;
+      case FAST_CONNECT_SYSTEM:
+        /*      fast_config_file_read(offset, length, *buffer); */
+        break;
+      default:
+        break;
+    }
+
+#if 0  //MinYang comment temp, Bill will fix this one
+  sem_post(&g_fastdev_p->ioctl_sem);
+#endif
+  return ret;
+}
+
+#ifndef CONFIG_DISABLE_POLL
+static int fast_poll(FAR struct file *filep, struct pollfd *fds, bool setup)
+{
+  set_errno(-ENOSYS);
+  return !OK;
+}
+#endif
+
+int32_t fast_init(void)
+{
+  DBG_ENTER();
+  memset(&g_fastdev, 0, sizeof(struct zg_fast_dev_s));
+  sem_init(&g_fastdev_p->ioctl_sem, 0, 0);
+  sem_setprotocol(&g_fastdev_p->ioctl_sem, SEM_PRIO_NONE);
+#ifdef CONFIG_NRF52_JTAG
+  jtag_pins_init();
+#endif
+  DBG_EXIT();
+  return OK;
+}
+
+int32_t fast_register(void)
+{
+  DBG_ENTER();
+  if (fast_init() == OK)
+    {
+      (void)register_driver(fast_dev_path, FAR & g_fast_ops, 0644, FAR (void *) &g_fastdev);
+    }
+
+  DBG_EXIT();
+  return !OK;
+}
+
diff --git a/drivers/gpio_api/Kconfig b/drivers/gpio_api/Kconfig
new file mode 100644
index 0000000000..2cfb0078bf
--- /dev/null
+++ b/drivers/gpio_api/Kconfig
@@ -0,0 +1,22 @@
+#
+# For a description of the syntax of this configuration file,
+# see the file kconfig-language.txt in the NuttX tools repository.
+#
+
+
+config     ARCH_VIRTUAL_GPIO
+           bool "gpio driver lib"
+           default n
+           ---help---
+                An internal gpio interface backed by chip code
+                that provides a general way for others to use
+                across mcus
+
+if ARCH_VIRTUAL_GPIO
+
+config     TARGET_DRIVER
+           string
+           default "gpio_api"
+           ---help---
+                Specifies the driver involved.
+endif
diff --git a/drivers/gpio_api/Make.defs b/drivers/gpio_api/Make.defs
new file mode 100644
index 0000000000..68037cd9e6
--- /dev/null
+++ b/drivers/gpio_api/Make.defs
@@ -0,0 +1,46 @@
+############################################################################
+# drivers/fast_debug/Make.defs
+#
+#   Copyright (C) 2013, 2016 Gregory Nutt. All rights reserved.
+#   Author: Gregory Nutt <gnutt@nuttx.org>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the above copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the above copyright
+#    notice, this list of conditions and the following disclaimer in
+#    the documentation and/or other materials provided with the
+#    distribution.
+# 3. Neither the name NuttX nor the names of its contributors may be
+#    used to endorse or promote products derived from this software
+#    without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+############################################################################
+
+# Don't build anything if there is no SPI support
+
+ifeq ($(CONFIG_ARCH_VIRTUAL_GPIO),y)
+
+CSRCS += gpio_api.c
+
+DEPPATH += --dep-path gpio_api
+VPATH += fast_debug
+CFLAGS += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" $(TOPDIR)$(DELIM)drivers$(DELIM)gpio_api}
+
+endif
diff --git a/drivers/gpio_api/gpio_api.c b/drivers/gpio_api/gpio_api.c
new file mode 100644
index 0000000000..f5f962a8b3
--- /dev/null
+++ b/drivers/gpio_api/gpio_api.c
@@ -0,0 +1,15 @@
+
+
+#include <nuttx/config.h>
+#include <stdint.h>
+#include <stdbool.h>
+#include "gpio_api.h"
+
+#if defined(CONFIG_ARCH_VIRTUAL_GPIO)
+
+typedef struct
+{
+  uint8_t   pin_mask;
+}
+
+#endif
diff --git a/drivers/gpio_api/gpio_api.h b/drivers/gpio_api/gpio_api.h
new file mode 100644
index 0000000000..38ff1ac3d2
--- /dev/null
+++ b/drivers/gpio_api/gpio_api.h
@@ -0,0 +1,9 @@
+
+
+
+#ifndef __DRIVERS_GPIO_API_GPIO_API_H
+#define __DRIVERS_GPIO_API_GPIO_API_H
+
+#define RW 1
+
+#endif /* __DRIVERS_GPIO_API_GPIO_API_H  */
diff --git a/drivers/i2c/Make.defs b/drivers/i2c/Make.defs
index d7d708bdf2..426c2ca03a 100644
--- a/drivers/i2c/Make.defs
+++ b/drivers/i2c/Make.defs
@@ -40,7 +40,7 @@ ifeq ($(CONFIG_I2C),y)
 CSRCS += i2c_read.c i2c_write.c i2c_writeread.c
 
 ifeq ($(CONFIG_I2C_DRIVER),y)
-CSRCS += i2c_driver.c
+	CSRCS += i2c_driver.c
 endif
 
 # Include I2C device driver build support
diff --git a/include/nuttx/drivers/fast_zeus.h b/include/nuttx/drivers/fast_zeus.h
new file mode 100755
index 0000000000..053acfeb65
--- /dev/null
+++ b/include/nuttx/drivers/fast_zeus.h
@@ -0,0 +1,68 @@
+/****************************************************************************
+ * drivers/fast_debug/zeus_fast.h
+ *
+ *   Copyright (C) 2018 zGlue Inc. All rights reserved.
+ *   Author: Bill Rees <bill@zglue.com>
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name NuttX nor the names of its contributors may be
+ *    used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ ****************************************************************************/
+
+#ifndef __DRIVERS_FAST_DEBUG_FAST_ZEUS_H
+#define __DRIVERS_FAST_DEBUG_FAST_ZEUS_H
+
+#ifdef CONFIG_DEBUG_FAST_ZEUS1
+#  define fasterr(format, ...)     _err(format, ##__VA_ARGS__)
+#  define fastwarn(format, ...)    _warn(format, ##__VA_ARGS__)
+#  define fastinfo(format, ...)    _info(format, ##__VA_ARGS__)
+#  define DBG_ENTER(format, ...)   _err("%s"  format, __func__, ##__VA_ARGS__)
+#  define DBG_EXIT(format, ...)    _warn("%s" format, __func__, ##__VA_ARGS__)
+#else
+#  define fasterr(x...)
+#  define fastwarn(format, ...)
+#  define fastinfo(format, ...)
+#  define DBG_ENTER(format, ...)
+#  define DBG_EXIT(format, ...)
+#endif
+
+#define FAST_DEV_PATH  "/dev/fast"
+#define FAST_IDLEN   32
+
+/* FAST driver ioctl definitions *********************************************/
+#define _FASTIOCVALID(c)                (_IOC_TYPE(c)==_FASTBASE)
+#define _FASTIOC(nr)                    _IOC(_FASTBASE,nr)
+#define  FAST_API_INIT                 _FASTIOC(1)
+#define  FAST_GET_SYSTEM_INFORMATION   _FASTIOC(2)
+#define  FAST_CONNECT_CHIP             _FASTIOC(3)
+#define  FAST_CONNECT_SYSTEM           _FASTIOC(4)
+
+int32_t fast_register(void);
+int32_t fast_init(void);
+
+#endif /* __DRIVERS_FAST_DEBUG_FAST_ZEUS_H */
+
diff --git a/include/nuttx/fast_api/fast_api.h b/include/nuttx/fast_api/fast_api.h
new file mode 100755
index 0000000000..c442223c53
--- /dev/null
+++ b/include/nuttx/fast_api/fast_api.h
@@ -0,0 +1,495 @@
+/****************************************************************************
+ * This file contains information definitons of the FAST API
+ *
+ *   Copyright (C) 2017 Zglue  Inc. All rights reserved.
+ *   Author: Arjun Hary
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ *****************************************************************************/
+
+#ifndef FAST_API_H
+#define FAST_API_H
+
+#include "stdint.h"
+
+/****************************************************************************
+ * Public Definitions
+ ****************************************************************************/
+
+#define CHIP_DESCRIPTOR_SIZE 10
+
+typedef enum
+{
+  FAST_OK                                = 0,
+
+  /* General failure codes */
+  FAST_FAILURE                           = 1000,
+  FAST_NULL_POINTER,
+  FAST_PERMISSION_DENIED,
+  FAST_INVALID_ARGUMENT,
+  FAST_INVALID_OPERATION,
+  FAST_INVALID_OTP_ADDRESS,
+  FAST_SYSTEM_ID_MISTMATCH,
+  FAST_OPERATION_TIMED_OUT,
+  FAST_INVALID_ID,
+
+  /* power state failure codes */
+  FAST_INVALID_POWER_STATE               = 2000,
+  FAST_INVALID_POWER_STATE_TRANSITION,
+
+  /* FAST configuration error codes */
+  FAST_NO_CONFIG_FILE_PRESENT            = 3000,
+  FAST_INVALID_CONFIG_FILE,
+  FAST_CONFIG_FILE_READ_FAILURE,
+  FAST_CONFIG_FILE_WRITE_FAILURE,
+  FAST_INVALID_CONFIG_FILE_ID,
+  FAST_INVALID_CHIP_ID,
+  FAST_CHIP_CONNECT_FAILURE,
+  FAST_SYSTEM_CONNECT_FAILURE,
+  FAST_CHIP_DISCONNECT_FAILURE,
+  FAST_SYSTEM_DISCONNECT_FAILURE,
+
+  /* Register operation error codes */
+  FAST_INVALID_REGISTER_ADDRESS         = 4000,
+
+  /* GPIO expander error codes */
+  FAST_INVALID_GPIO_PORT                = 5000,
+  FAST_INVALID_GPIO_PIN,
+  FAST_INVALID_PIN_FUNCTION,
+  FAST_INVALID_PIN_LEVEL,
+
+  /* PMIC/Analog error codes */
+  FAST_INVALID_BOOST_VOLTAGE_OUT        = 6000,
+  FAST_INVALID_BOOST_BYPASS_MODE,
+  FAST_INVALID_HVLDO_VOLTAGE_OUT,
+  FAST_INVALID_HVLDO_BYPASS_MODE,
+  FAST_INVALID_VRAIL_VOLTAGE_OUT,
+  FAST_INVALID_VRAIL_NUMBER,
+  FAST_INVALID_THERMAL_MONITOR_ALARM_TEMP,
+  FAST_INVALID_THERMAL_MONITOR_SHUTDOWN_TEMP,
+
+  /* LED driver error codes */
+  FAST_INVALID_LED_ID                   = 7000,
+  FAST_INVALID_DUTY_CYCLE,
+  FAST_INVALID_PERIOD,
+  FAST_INVALID_INTENSITY,
+  FAST_INVALID_BRIGHTNESS,
+}   fast_api_error_codes_t;
+
+/* FAST supported power states */
+typedef enum
+{
+  FAST_FULL_PROGRAMABLE   = 0,
+  FAST_LPM,
+  FAST_ULPM,
+} fast_power_state_t;
+
+/* FAST debug level */
+typedef enum
+{
+  FAST_DEBUG_LEVEL_0    = 0,
+  FAST_DEBUG_LEVEL_1,
+  FAST_DEBUG_LEVEL_2,
+} fast_debug_level_t;
+
+/* FAST GPIO function */
+typedef enum
+{
+  FAST_GPIO_FUNCTION_INPUT  = 0,
+  FAST_GPIO_FUNCTION_OUTPUT,
+} fast_gpio_functions_t;
+
+/* FAST GPIO pin */
+typedef enum
+{
+  FAST_GPIO_PORT0 = 0,
+} fast_gpio_port_t;
+
+/* FAST GPIO pin */
+typedef enum
+{
+  FAST_GPIO_PIN0  = 0,
+  FAST_GPIO_PIN1,
+  FAST_GPIO_PIN2,
+  FAST_GPIO_PIN3,
+  FAST_GPIO_PIN4,
+  FAST_GPIO_PIN5,
+  FAST_GPIO_PIN6,
+  FAST_GPIO_PIN7,
+} fast_gpio_pin_t;
+
+/* FAST GPIO pin level */
+typedef enum
+{
+  FAST_GPIO_PIN_LEVEL_LOW   = 0,
+  FAST_GPIO_PIN_LEVEL_HIGH,
+} fast_gpio_pin_level_t;
+
+/* FAST GPIO pin edge */
+typedef enum
+{
+  FAST_GPIO_PIN_RISING_EDGE   = 0,
+  FAST_GPIO_PIN_FALLING_EDGE,
+  FAST_GPIO_PIN_BOTH_EDGES,
+} fast_gpio_pin_irq_edge_t;
+
+/* FAST LED ID */
+typedef enum
+{
+  FAST_LED0   = 0,
+  FAST_LED1,
+  FAST_LED2,
+} fast_led_id_t;
+
+/* FAST LED brightness */
+typedef enum
+{
+  FAST_LED_BRIGHTNESS_3_125  = 0,
+  FAST_LED_BRIGHTNESS_6_25,
+  FAST_LED_BRIGHTNESS_9_375,
+  FAST_LED_BRIGHTNESS_12_5,
+  FAST_LED_BRIGHTNESS_15_625,
+  FAST_LED_BRIGHTNESS_18_75,
+  FAST_LED_BRIGHTNESS_21_875,
+  FAST_LED_BRIGHTNESS_25,
+  FAST_LED_BRIGHTNESS_28_125,
+  FAST_LED_BRIGHTNESS_31_25,
+  FAST_LED_BRIGHTNESS_34_375,
+  FAST_LED_BRIGHTNESS_37_5,
+  FAST_LED_BRIGHTNESS_40_625,
+  FAST_LED_BRIGHTNESS_43_75,
+  FAST_LED_BRIGHTNESS_46_875,
+  FAST_LED_BRIGHTNESS_50,
+  FAST_LED_BRIGHTNESS_53_125,
+  FAST_LED_BRIGHTNESS_56_25,
+  FAST_LED_BRIGHTNESS_59_375,
+  FAST_LED_BRIGHTNESS_62_5,
+  FAST_LED_BRIGHTNESS_65_625,
+  FAST_LED_BRIGHTNESS_68_75,
+  FAST_LED_BRIGHTNESS_71_875,
+  FAST_LED_BRIGHTNESS_75,
+  FAST_LED_BRIGHTNESS_78_125,
+  FAST_LED_BRIGHTNESS_81_25,
+  FAST_LED_BRIGHTNESS_84_375,
+  FAST_LED_BRIGHTNESS_87_5,
+  FAST_LED_BRIGHTNESS_90_625,
+  FAST_LED_BRIGHTNESS_93_75,
+  FAST_LED_BRIGHTNESS_96_875,
+  FAST_LED_BRIGHTNESS_100,
+} fast_led_brightness_range_control_t;
+
+/* FAST LED current range */
+typedef enum
+{
+  FAST_LED_SCALE_DISABLED  = 0,
+  FAST_LED_SCALE_3_2_mA,
+  FAST_LED_SCALE_6_4_mA,
+  FAST_LED_SCALE_12_8_mA,
+} fast_led_intensity_control_t;
+
+/* FAST LED duty cycle */
+typedef enum
+{
+  FAST_LED_DUTY_CYCLE_6_25  = 0,
+  FAST_LED_DUTY_CYCLE_12_5,
+  FAST_LED_DUTY_CYCLE_18_75,
+  FAST_LED_DUTY_CYCLE_25_0,
+  FAST_LED_DUTY_CYCLE_31_25,
+  FAST_LED_DUTY_CYCLE_37_5,
+  FAST_LED_DUTY_CYCLE_43_75,
+  FAST_LED_DUTY_CYCLE_50_0,
+  FAST_LED_DUTY_CYCLE_56_25,
+  FAST_LED_DUTY_CYCLE_62_5,
+  FAST_LED_DUTY_CYCLE_68_75,
+  FAST_LED_DUTY_CYCLE_75_0,
+  FAST_LED_DUTY_CYCLE_81_25,
+  FAST_LED_DUTY_CYCLE_87_5,
+  FAST_LED_DUTY_CYCLE_93_75,
+  FAST_LED_DUTY_CYCLE_100,
+} fast_led_duty_cycle_t;
+
+/* FAST LED period */
+typedef enum
+{
+  FAST_LED_PERIOD_0_5_S = 0,
+  FAST_LED_PERIOD_1_0_S,
+  FAST_LED_PERIOD_1_5_S,
+  FAST_LED_PERIOD_2_0_S,
+  FAST_LED_PERIOD_2_5_S,
+  FAST_LED_PERIOD_3_0_S,
+  FAST_LED_PERIOD_3_5_S,
+  FAST_LED_PERIOD_4_0_S,
+  FAST_LED_PERIOD_4_5_S,
+  FAST_LED_PERIOD_5_0_S,
+  FAST_LED_PERIOD_5_5_S,
+  FAST_LED_PERIOD_6_0_S,
+  FAST_LED_PERIOD_6_5_S,
+  FAST_LED_PERIOD_7_0_S,
+  FAST_LED_PERIOD_7_5_S,
+  FAST_LED_PERIOD_8_0_S,
+} fast_led_period_t;
+
+/* FAST PMIC boost voltage out */
+typedef enum
+{
+  FAST_PMIC_BOOST_VOUT_2_5V = 0,
+  FAST_PMIC_BOOST_VOUT_2_8V,
+  FAST_PMIC_BOOST_VOUT_2_9V,
+  FAST_PMIC_BOOST_VOUT_3_0V,
+  FAST_PMIC_BOOST_VOUT_3_3V,
+  FAST_PMIC_BOOST_VOUT_3_4V,
+  FAST_PMIC_BOOST_VOUT_3_5V,
+  FAST_PMIC_BOOST_VOUT_3_6V,
+  FAST_PMIC_BOOST_VOUT_3_7V,
+  FAST_PMIC_BOOST_VOUT_3_8V,
+  FAST_PMIC_BOOST_VOUT_3_9V,
+  FAST_PMIC_BOOST_VOUT_4_0V,
+  FAST_PMIC_BOOST_VOUT_4_2V,
+  FAST_PMIC_BOOST_VOUT_4_3V,
+  FAST_PMIC_BOOST_VOUT_4_4V,
+  FAST_PMIC_BOOST_VOUT_4_5V,
+} fast_pmic_boost_voltage_out_t;
+
+/* FAST PMIC bypass modes */
+typedef enum
+{
+  FAST_PMIC_BYPASS_DISABLED  = 0,
+  FAST_PMIC_BYPASS_FORCE_BYPASS,
+  FAST_PMIC_BYPASS_AUTO_BYPASS,
+} fast_pmic_bypass_mode_t;
+
+/* FAST PMIC current limit */
+typedef enum
+{
+  FAST_PMIC_CURRENT_LIMIT_200mA  = 0,
+  FAST_PMIC_CURRENT_LIMIT_300mA,
+  FAST_PMIC_CURRENT_LIMIT_400mA,
+  FAST_PMIC_CURRENT_LIMIT_500mA
+} fast_pmic_boost_current_limit_t;
+
+/* FAST PMIC current limit */
+typedef enum
+{
+  FAST_PMIC_VRAIL0  = 0,
+  FAST_PMIC_VRAIL1,
+  FAST_PMIC_VRAIL2,
+} fast_pmic_vrail_id_t;
+
+/* FAST PMIC votlage out for hvldo and vrail */
+typedef enum
+{
+  FAST_PMIC_VOLTAGE_OUT_0_5V  = 0,
+  FAST_PMIC_VOLTAGE_OUT_0_6V,
+  FAST_PMIC_VOLTAGE_OUT_0_7V,
+  FAST_PMIC_VOLTAGE_OUT_0_8V,
+  FAST_PMIC_VOLTAGE_OUT_0_9V,
+  FAST_PMIC_VOLTAGE_OUT_1_0V,
+  FAST_PMIC_VOLTAGE_OUT_1_1V,
+  FAST_PMIC_VOLTAGE_OUT_1_2V,
+  FAST_PMIC_VOLTAGE_OUT_1_3V,
+  FAST_PMIC_VOLTAGE_OUT_1_4V,
+  FAST_PMIC_VOLTAGE_OUT_1_5V,
+  FAST_PMIC_VOLTAGE_OUT_1_6V,
+  FAST_PMIC_VOLTAGE_OUT_1_7V,
+  FAST_PMIC_VOLTAGE_OUT_1_8V,
+  FAST_PMIC_VOLTAGE_OUT_1_9V,
+  FAST_PMIC_VOLTAGE_OUT_2_0V,
+  FAST_PMIC_VOLTAGE_OUT_2_1V,
+  FAST_PMIC_VOLTAGE_OUT_2_2V,
+  FAST_PMIC_VOLTAGE_OUT_2_3V,
+  FAST_PMIC_VOLTAGE_OUT_2_4V,
+  FAST_PMIC_VOLTAGE_OUT_2_5V,
+  FAST_PMIC_VOLTAGE_OUT_2_6V,
+  FAST_PMIC_VOLTAGE_OUT_2_7V,
+  FAST_PMIC_VOLTAGE_OUT_2_8V,
+  FAST_PMIC_VOLTAGE_OUT_2_9V,
+  FAST_PMIC_VOLTAGE_OUT_3_0V,
+  FAST_PMIC_VOLTAGE_OUT_3_1V,
+  FAST_PMIC_VOLTAGE_OUT_3_2V,
+  FAST_PMIC_VOLTAGE_OUT_3_3V,
+  FAST_PMIC_VOLTAGE_OUT_3_4V,
+  FAST_PMIC_VOLTAGE_OUT_3_5V,
+  FAST_PMIC_VOLTAGE_OUT_3_6V,
+} fast_pmic_voltage_out_t;
+
+/* FAST PMIC thermal alarm temperature */
+typedef enum
+{
+  FAST_PMIC_THERMAL_ALARM_TEMP_45C  = 0,
+  FAST_PMIC_THERMAL_ALARM_TEMP_65C,
+  FAST_PMIC_THERMAL_ALARM_TEMP_85C,
+  FAST_PMIC_THERMAL_ALARM_TEMP_105C,
+  FAST_PMIC_THERMAL_ALARM_TEMP_125C,
+  FAST_PMIC_THERMAL_ALARM_TEMP_145C,
+  FAST_PMIC_THERMAL_ALARM_TEMP_165C,
+} fast_pmic_thermal_alarm_temp_t;
+
+/* FAST PMIC thermal shutdown temperature */
+typedef enum
+{
+  FAST_PMIC_THERMAL_SHUTDOWN_TEMP_110C  = 0,
+  FAST_PMIC_THERMAL_SHUTDOWN_TEMP_135C,
+  FAST_PMIC_THERMAL_SHUTDOWN_TEMP_150C,
+  FAST_PMIC_THERMAL_SHUTDOWN_TEMP_165C,
+} fast_pmic_thermal_shutdown_temp_t;
+
+typedef struct FAST_fault_status_mask_t
+{
+  uint8_t thermal_alarm_trig : 1;
+  uint8_t boost_uvlo_trig    : 1;
+  uint8_t boost_ilim_trig    : 1;
+  uint8_t vrail3_ovc_trig    : 1;
+  uint8_t vrail2_ovc_trig    : 1;
+  uint8_t vrail1_ovc_trig    : 1;
+  uint8_t hvldo_ovc_trig     : 1;
+  uint8_t reserved           : 1;
+} fast_fault_status_mask_t;
+
+/* FAST SPI bit mode configuration */
+typedef enum
+{
+  FAST_SPI_8_BIT_MODE  = 0,
+  FAST_SPI_16_BIT_MODE,
+  FAST_SPI_32_BIT_MODE,
+} fast_spi_bit_mode_t;
+
+/* FAST SPI bit order configuration */
+typedef enum
+{
+  FAST_SPI_MSB_FIRST  = 0,
+  FAST_SPI_LSB_FIRST,
+} fast_spi_bit_order_t;
+
+/* FAST SPI polarity configuration */
+typedef enum
+{
+  FAST_SPI_CPOL_0  = 0,
+  FAST_SPI_CPOL_1,
+} fast_spi_cpol_t;
+
+/* FAST SPI phase configuration */
+typedef enum
+{
+  FAST_SPI_CPHA_0  = 0,
+  FAST_SPI_CPHA_1,
+} fast_spi_cpha_t;
+
+/* FAST tile program mode configuration */
+typedef enum
+{
+  FAST_PROGRAM_TILE  = 0,
+  FAST_CLEAR_TILE,
+  FAST_CLEAR_TILE_COMPLETELY,
+} fast_tile_program_mode_t;
+
+
+typedef struct __attribute__((packed)) fast_system_information_t
+{
+  /* LSB */
+  uint32_t    config_file_id            : 8;
+  uint32_t    config_file_version       : 4;
+  uint16_t    number_of_chiplets_on_fast        : 8;
+  uint16_t    supported_zeus                    : 4;
+  /* MSB */
+} fast_system_information_t;
+
+typedef struct __attribute__((packed)) fast_system_chips_information_t
+{
+  /* LSB */
+  uint16_t    chip_global_id;
+  uint8_t    chip_description[CHIP_DESCRIPTOR_SIZE * 2];
+} fast_system_chips_information_t;
+
+/****************************************************************************
+ * Function declarations
+ ****************************************************************************/
+
+/* Read ID API */
+int16_t fast_read_id(uint8_t *data_ptr, uint8_t number_of_bytes);
+
+/* Power management API */
+int16_t fast_enter_power_state(fast_power_state_t power_state);
+
+/* LED APIs */
+int16_t fast_configure_led(fast_led_id_t led_id, fast_led_duty_cycle_t duty_cycle, fast_led_period_t led_period,
+                           fast_led_intensity_control_t intensity, fast_led_brightness_range_control_t brightness, bool invert_pwm);
+int16_t fast_enable_led(fast_led_id_t led_id);
+int16_t fast_disable_led(fast_led_id_t led_id);
+
+/* Register operations API */
+int16_t fast_reg_write(uint32_t reg_addr, uint16_t reg_data);
+int16_t fast_reg_read(uint32_t reg_addr, uint16_t *reg_data);
+
+/* OTP */
+int16_t fast_read_fast_otp(uint32_t start_addr, uint8_t *data_ptr, uint32_t number_of_bytes);
+int16_t fast_read_customer_otp(uint32_t start_addr, uint8_t *data_ptr, uint32_t number_of_bytes);
+
+/* PMIC/Analog APIs */
+int16_t fast_pmic_boost_configure(fast_pmic_boost_voltage_out_t boost_voltage, fast_pmic_bypass_mode_t bypass_mode,
+                                  fast_pmic_boost_current_limit_t current_limit);
+int16_t fast_pmic_hvldo_configure(fast_pmic_voltage_out_t voltage_out, fast_pmic_bypass_mode_t bypass_mode,
+                                  bool current_limit_enable);
+int16_t fast_pmic_vrail_configure(fast_pmic_vrail_id_t vrail_number, fast_pmic_voltage_out_t voltage_out, bool bypass_enable,
+                                  bool current_limit_enable);
+int16_t fast_pmic_thermal_monitor_enable(fast_pmic_thermal_alarm_temp_t alarm_temperature,
+                                         fast_pmic_thermal_shutdown_temp_t shutdown_temperature);
+int16_t fast_pmic_thermal_monitor_disable(void);
+
+/* FAST faults and status */
+int16_t fast_clear_fault_interrupt(void);
+int16_t fast_get_fault_status(uint16_t *data_ptr);
+int16_t fast_enable_fault_interrupt(fast_fault_status_mask_t fault_status_mask);
+
+/* FAST GPIO expander API */
+int16_t fast_gpio_init(fast_gpio_port_t gpio_port, uint16_t gpio_pin_mask, fast_gpio_pin_level_t gpio_pin_level);
+int16_t fast_gpio_configure_pin(fast_gpio_port_t gpio_port, fast_gpio_pin_t gpio_pin, fast_gpio_functions_t gpio_function);
+int16_t fast_gpio_set_pin_level(fast_gpio_port_t gpio_port, fast_gpio_pin_t gpio_pin, fast_gpio_pin_level_t gpio_level);
+int16_t fast_gpio_get_pin_level(fast_gpio_port_t gpio_port, fast_gpio_pin_t gpio_pin, uint8_t *gpio_level);
+void fast_gpio_clear_irq(void);
+int16_t fast_gpio_enable_irq(fast_gpio_port_t gpio_port, fast_gpio_pin_t gpio_pin, fast_gpio_pin_irq_edge_t gpio_pin_irq);
+int16_t fast_gpio_disable_irq(fast_gpio_port_t gpio_port, fast_gpio_pin_t gpio_pin);
+
+/* FAST configuration API */
+int16_t fast_get_system_information(fast_system_information_t *data_ptr);
+int16_t fast_get_system_chips_information(fast_system_chips_information_t *system_chips_data);
+int16_t fast_connect_system(uint8_t config_file_id);
+int16_t fast_disconnect_system(uint8_t config_file_id);
+int16_t fast_connect_chip(uint8_t config_file_id, uint8_t chip_id);
+int16_t fast_disconnect_chip(uint8_t config_file_id, uint8_t chip_id);
+
+/* FAST DEBUG API */
+int16_t fast_set_debug_level(fast_debug_level_t debug_level);
+
+/* FAST SPI configuration */
+int16_t fast_spi_configure(fast_spi_bit_order_t bit_order, fast_spi_bit_mode_t bit_mode, fast_spi_cpol_t cpol,
+                           fast_spi_cpha_t cpha);
+
+/* FAST API Init */
+int16_t fast_api_init(uint8_t config_file_id);
+
+/* FAST API close */
+int16_t fast_api_close(uint8_t config_file_id);
+#endif
diff --git a/include/nuttx/fs/ioctl.h b/include/nuttx/fs/ioctl.h
index df89284ace..13162ed99c 100644
--- a/include/nuttx/fs/ioctl.h
+++ b/include/nuttx/fs/ioctl.h
@@ -89,6 +89,7 @@
 #define _QDIOCBASE      (0x2300) /* Quadrature decoder ioctl commands */
 #define _RNGBASE_       (0x2400) /* Random Number Generator ioctl commands */
 #define _COMPIOCBASE    (0x2500) /* comparator ioctl commands */
+#define _FASTBASE       (0x2600) /* FAST interface ioctl commands */
 
 /* boardctl() commands share the same number space */
 
diff --git a/lib/lib_fast_api b/lib/lib_fast_api
new file mode 100755
index 0000000000000000000000000000000000000000..5c4f89f6cf5744f939fa005b0d62167ff6c5cf30
GIT binary patch
literal 13342
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

literal 0
HcmV?d00001

diff --git a/lib/lib_fast_api_temp b/lib/lib_fast_api_temp
new file mode 100755
index 0000000000000000000000000000000000000000..dc7634362441269b2fe5e4240dbf4f9487c1b2bd
GIT binary patch
literal 13166
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
Pp%{rXK7ZSGvgQ68>{D9u

literal 0
HcmV?d00001

diff --git a/lib/lib_nrf52 b/lib/lib_nrf52
index c76648b569b736d92a831704d18ade964a9ac9dc..29bd4347ba7bcf9fb4e32347101f51cfe81377fc 100755
GIT binary patch
delta 36
rcmcaSi}Ttn&JAtcjGWDF+}nZl{~w&3Tnr3MHVh2B+k04;j(Y$A@5c*H

delta 32
ocmcaMi}Ug<&JAtc&F$RV+qoJ4|6u20U|_OgVA$Tz!gSmN0MtJVF#rGn

diff --git a/nordic_fastapi.bat b/nordic_fastapi.bat
new file mode 100755
index 0000000000..80c2a42283
--- /dev/null
+++ b/nordic_fastapi.bat
@@ -0,0 +1,4 @@
+nrfjprog -f NRF52 -e
+nrfjprog -f NRF52 --program nuttx.hex
+nrfjprog -f NRF52 --program output_binary.hex
+nrfjprog -f NRF52 -r
-- 
2.14.1

