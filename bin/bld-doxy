#!/bin/bash


declare -A FF
errno=0

#
#
#$
dbg()
{
        [ "$DEBUG" = "1" ] || return 1
        return 0
}
#
#
#
echo_dbg()
{
        dbg || return

        echo -e "$@" >&2
}

#
#
#
build()
{
  make
}



#
#
#
prepare()
{
        local SrcDir=

        SrcDir="$(pwd)"
        mkdir -p build
        cd build
        cmake -Dbuild_doc=ON -G "Unix Makefiles" "$SrcDir"

}

#
# Verify as well as possible that we're running
# in the root of a doxygen source tree.
#
sanity_check()
{
        local CMakeFile=
        declare -a Projects

        echo_dbg "== ${FUNCNAME[0]}()"
        CMakeFile="CMakeLists.txt"
        [ ! -d ".git" ] && errno=1 && return $errno
        [ ! -f "$CMakeFile" ] && echo_dbg "No such file: <$CMakeFile>" && errno=2 && return $errno

        echo_dbg "Check for project(doxygen) in $CMakeList"
        if Projects=( $(grep "^project(" $CMakeFile) ) ; then
                for i in $(seq 0 ${#Pojects[@]}) ; do
                        Tmp=${Projects[$i]#project(}
                        echo_dbg "Project[$i] ${Project[$i]}, Tmp $Tmp"
                        [ "${Tmp%)}" = "doxygen" ] && return 0
                done
        fi

        errno=3
        return $errno
}

#
# List possible args.
#
list()
{
        declare -a List

        List=( $(grep "()$" $0 | sed -e 's/^/        /') )
        for i in $(seq 0 $(( ${#List[@]} - 1)) ); do
                FF[${List[$i]}]="$i"
                [ "${1,,}" = "ok" ] && echo  -e "\t${List[$i]}" >&2
        done
}

#
#
#
help()
{
    list ok
}

#
#
#
function parse
{

    [ $# -eq 0 ] && ARG="-h"
    while [ $# -ne 0 ] ; do
        ARG=$1
        case "$ARG" in
        -h)     help
                exit
                ;;
        *) [ -n "${FF[$1()]}" ]  && return
           echo -e "<${FF[$1]}> :: Unrecognized arg: $1" >&2
                ;;
        esac
        shift
    done
    return 1
}

list
parse $@ && $@
exit

if ! sanity_check ; then
        echo "Error <$errno>" >&2
        echo "The current directory is not a complete doxygen source tree." >&2
        exit 2
fi

echo "This looks like a proper doxygen source tree."
prepare && build


