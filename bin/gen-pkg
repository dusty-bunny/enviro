#!/bin/bash


declare -A DebianDirs
DebianDirs["engine-sdk"    ]="engine-sdk"
DebianDirs["engine-clean"  ]="engine-sdk-cleanup"
DebianDirs["pkg-engine"    ]="pkg-engine"
DebianDirs["nuttx-tools"   ]="nuttx-tools"
DebianDirs["nuttx-style"   ]="nuttx-style"
DebianDirs["sdk-nuttx-7.25"]="sdk-nuttx-7.25"
DebianDirs["sdk-gcc-arm"   ]="sdk-gcc-arm"

helpem()
{
        cat <<EOF
    $(basename $0): [-p <pkg-name> ] | [ -h]
        -p :  Package name to create
        -h :  Emit this help message.
EOF
}

do-exit()
{
        local ErrCode=
        local ErrMsg=

        ErrCode="$1" ; shift
        ErrMsg="$@"

        echo -e "$ErrMsg" >&2
        exit $ErrCode
}

build_pkgdirs()
{
        local Pkg=
        local DebDir=
        local ChangeLog=

        Pkg="$1" ; shift

        DebDir="debian.${DebianDirs[$Pkg]}"
        ChangeLog="$HOME/debian/$DebDir/changelog"
        if [ -f "$ChangeLog" ] ; then
                pushd ~/src/zglue/packaging/ >/dev/null
                mkdir -p "repo.$Pkg"
                cd "repo.$Pkg"
                foo=( $(head -1 "$ChangeLog") )
                foo[1]=${foo[1]:1}
                targetdir=${foo[0]}-${foo[1]%%-*}
                mkdir -p $targetdir
                cd $targetdir
                ln -s $HOME/debian/$DebDir debian
                popd >/dev/null
        fi
}

[ $# -eq 0 ] && helpem && do-exit 3 ""
while [ $# -gt 0 ] ; do
        case "$1" in
        -p) PKG="$2"
            [ -z "${DebianDirs[$PKG]}" ] && do-exit 1 "Not a known debian dir:"
            shift
         ;;
        -h) helpem && exit
         ;;
        *) do-exit 1 "No clue what you mean: \"$1\""
         ;;
        esac
        shift
done
[ -z "$PKG" ] && do-exit 2 "Bad package name: <$PKG>"
build_pkgdirs $PKG

