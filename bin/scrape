#!/bin/bash

fecho()
{
	echo -e "  $*" >&2
}
#
# Save a web page and all associated components needed to function fully.
# Recurse to pick up multi page stories.
#

[ $# -eq 0 ] && fecho "No web page provided" >&2 && exit 1
# SHORTFORM=${1#*//}
SHORTFORM=${1##*/}
WEBSITE="https://www.literotica.com/s/${SHORTFORM}"
# WEBSITE=https:"${1#http*:}" ; shift
fecho "Website :: <$WEBSITE>"

# DEBUG=1
dbg_echo()
{
	[ "$DEBUG" = "1" ] || return
	echo -e "$1" >&2
}

get_page_count()
{
        local Source=

        Source=$1 ; shift
        [ ! -f "${Source}" ] && return 1
        sed -n -e 's/^.*\([0-9][0-9]*\) *Pages.*/\1/p' ${Source}
}

get_page()
{
	local Website=
	local StoryPage=

	StoryPage="$1"
	Website=${StoryPage%%s/*}
	wget --recursive \
	     --page-requisites \
	     --html-extension \
	     --convert-links \
	     --domains ${Website} \
	     --no-parent \
	     ${StoryPage} >/dev/null 2>&1
	[ -f "${StoryPage#https://}.html" ] || return 1

	echo "${StoryPage#https://}.html retrieved"
	return 0
}

reset_index_page()
{
	local Url=
	local Stem=
	local HERE=
	local FileName=

	Url="$1"
	Stem="${Url#https://}" ; shift
	HERE=$(pwd)
	FileName="${Stem}.html"
	eval sed -i -e "'"s,href=.https://"\("${Stem}"\)".page="\("[0-9]"*""\)",href='"'file://$HERE/\\1_page-\\2\\.html,g"'" $FileName
}

reset_hrefs()
{
	local Url=
	local HERE=
	local Page=
	local Stem=
	local FileName=

	Url="$1"
	Stem="${Url#https://}" ; shift
	HERE=$(pwd)
	reset_index_page "$Url"

	for dafile in $(ls ${Stem}\?*) ; do
		Page=_page-${dafile#*page=}
		[ "$dafile" == "${Stem}.html" ] && continue
		FileName="${Stem}${Page}"
		dbg_echo "mv $dafile ${FileName}"
		mv $dafile ${FileName}
		eval sed -i -e "'"s,href=.https://"\("${dafile%?page=*}"\)".page="\("[0-9]"*""\)",href='"'file://$HERE/\\1_page-\\2\\.html,g"'" $FileName
	done
}

#
# Keep pulling the next page until no more pages.
#
get_story()
{
        local Pages=
	local Count=
        local Story=
        local File=

        Story="$1"
	Count=2
	Pages=0
	File="${Story#https://}.html"
	get_page $Story 2>/dev/null
	if Doh=$(grep Pages: $File) 2>/dev/null ; then
		Pages=$(echo $Doh | sed -e 's,^.*>\([0-9][0-9]*\)[	 ]*Pages:.*,\1,')
	fi
	[ $Pages -gt -0 ] && fecho "This story is $Pages pages long"
	while [ $Count -le $Pages ] ; do
		get_page "${Story}?page=$Count"
		Count=$(( Count + 1 ))
	done

	reset_hrefs $Story
}


fecho "Download the story ${WEBSITE##*/s/}"
get_story "$WEBSITE"

