#!/bin/bash

UTF_OUT=utf-8

dbg()
{
        [ "$DEBUG" = 1 ] || return 1
        return 0
}

Func()
{
        dbg || return
        echo "::$FUNCNAME[1] $@"
}

file_unicode_check()
{
        Func $@
        local Blah=
        local UTF_IN=
        local UTF_OUT=

        return
        while [ $# -ne 0 ] ; do
                Parts=( $(file -ib $1) )
                UTF_IN="${Parts[1]##*=}"
                if [ "${UTF_IN,,}" != "${UTF_OUT,,}" ] ; then
                        iconv -f $UTF_IN  -t $UTF_OUT "$1" > "$1"-utf8
                fi
                shift
        done
}

strip_srcs()
{
        Func $@
        for file in "$@" ; do
                if [ "${file%%.c}" == "$file" -a "${file%%.h}" == "$file" ] ; then
                        echo "Skipping $file"
                        continue
                fi
                sed -i -e 's/[ 	]\+$//' "$file"
        done
}

strip_ascii()
{
        Func $@
        for file in "$@" ; do
                [ ! -f "$file" ] && continue
                [ -n "$(file -ib $file 2>/dev/null | grep charset=binary)" ] && continue
                [ "$(basename $0)" == "$(basename "$file")" ] && echo ======== && continue
        sed -i -e 's/[ 	]\+$//' -e 's/^[ ]\+	/	/' -e 's/$//' "$file" && echo "Processed: "$file""
        done
}

if ! file_unicode_check "$@" ; then
        echo "Faid processing a unicode conversion to $UTF_OUT." >&2
        exit 1
fi
strip_ascii "$@"
strip_srcs "$@"
