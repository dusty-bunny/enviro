#!/bin/bash

#
# Then need to finish by cloning nuttx tools and building kconfig-mconf, et al.
# To get this to work you will need to synlink autmake-1.15 to automake-1.16.1
#
# Use ./configure --enable-mconf to enable "make menuconfig"

#
# Once Kconfig stuff is built copy the /usr/local/lib/libkconfig* to /usr/lib.
#

BASE_PKGS="                \
    python2.7        \
    python2.7-doc        \
    python2.7-examples    \
    python3.8        \
    python3.8-doc        \
    python3.8-examples    \
    python-pip        \
    python3-pip        \
    autoconf        \
    automake        \
    autotools-dev        \
"

MORE_PKGS="    \
    flex    \
    bison    \
    gawk    \
    gperf    \
    libncursew5-dev    \
"


do_apt()
{
    local Action=
    local Pkgs=

    case "$1" in
    remove|install) Action="$1"
        ;;
    *) return 1
        ;;
    esac
    shift
    Pkgs="$@"
    echo "sudo apt-get -y $Action $Pkgs"
    echo "sudo apt-get -y autoremove"
}

install()
{
    do_apt install $@
}

remove()
{
    do_apt remove $@
}

helpp()
{
cat <<END

    $(basename $0):  [-i|-r]  [-m|-p]
        -i  Do an install of packages.
        -r  Do an remove of packages.
        -m  Install the "BASE" set of packages.
        -p  Install the "MORE" set of packages.
END
}

[ $# -lt 2 -o $# -gt 2 ] && echo "Too many args or none. [$#]" >&2 && helpp && exit 3
declare -a CMD
declare -A ARG
declare -A PKGS

PKGS["-p"]="$BASE_PKGS"
PKGS["-m"]="$MORE_PKGS"
ARG["-r"]=remove
ARG["-i"]=install

while [ "$#" -ne 0 ] ; do
        case "$1" in
        -i|-r)  [ -n "$Action" ]    &&  echo "Action already specified. [$Action]" >&2 && helpp && exit 2
            Action=${ARG[$1]}
            ;;
        -m|-p) [ ${#CMD[@]} -ne 0 ] && echo "Set of packages to use already made." >&2 && helpp && exit 2
            CMD=( ${PKGS[$1]} )
            ;;
        *) helpp
           exit 5
            ;;
        esac
        shift
done

$Action "${CMD[@]}"
