#!/bin/bash

#
#
#
DEBUG=${DEBUG:-}
SOFTDEVICE_DIR=arch/arm/src/nrf52/softdevice
SOFTDEVICE=s132_nrf52_5.0.0-1.alpha_softdevice.hex

declare -A nRF52
declare -A Program_Chip

FLASH_KEYS=( "HEX_FILE" "FLASHER" "FLASH_RESET" "FLASH_ERASE" "FLASH_FLASH" )
nRF52["HEX_FILE"]="nuttx.hex"
nRF52["BINHEX"]="output_binary.hex"
nRF52["BINHEX_ADDR"]="0x60000"
nRF52["MEMRD"]="--memrd"
nRF52["FLASHER"]="nrfjprog"
nRF52["FLAG_RESET"]="-r"
nRF52["FLAG_ERASE"]="-e"
nRF52["FLAG_FLASH"]="--program"
nRF52["FLAG_VERIFY"]="--verify"

set_programmer_values()
{
        local tmp=

        tmp=$(declare -p "$1")
        eval Program_Chip=${tmp#*=}
}

print_programmer_chip_values()
{
        local key=
        local tmp=

        tmp=$(declare -p "$1")
        for key in "${tmp[0]}" ; do
                echo -n -e "\\t$key\\t"
                [ "${#key}" -le 8 ] && echo -n -e "\\t"
                echo -e "${tmp[$key]}"
        done
}

# Binary to hex file tool downloads
# https://sourceforge.net/projects/srecord/files/srecord-win32/
#
# In windows command line:
# srec_cat.exe -Output_Block_Size=16 output_binary.bin -Binary -offset 0x60000 -o output_binary.hex -Intel
#
# For Nordic, write a hex file into flash.
# nrfjprog -f NRF52 --program output_binary.hex
#
# Also can use below command to read memory from Nordic
# nrfjprog -f nrf52 --memrd 0x60000
#
# I created nordic_fastapi.bat
# nrfjprog -f NRF52 -e
# nrfjprog -f NRF52 --program nuttx.hex
# nrfjprog -f NRF52 --program output_binary.hex
# ########## nrfjprog -f NRF52 --program s132_nrf52_5.0.0-1.alpha_softdevice.hex
# nrfjprog -f NRF52 -r

echo_dbg()
{
        [ "$DEBUG" = "1" ] || return
        echo -e "$@" >&2
}

Exec()
{
        echo_dbg "$@"
        [  -z "$DEBUG" ] && $@
}
# CWD="$(pwd)"
# set_programmer_values nRF52
# tmp=$(declare -p "$1" | sed -e 's/^.* //')
# echo "tmp: $tmp"
# print_programmer_chip_values Program_Chip

REPO_ROOT="$(git rev-parse --show-toplevel 2>/dev/null)"
echo_dbg "REPO_ROOT ($REPO_ROOT)"
  (
        cd $REPO_ROOT || return 1
        if [ ! -f  "${nRF52["HEX_FILE"]}" ] ; then
                echo "Where's  ${nRF52["HEX_FILE"]}"
                exit -1
        fi

        Exec "${nRF52["FLASHER"]}" "${nRF52["FLAG_ERASE"]}"
        for File in "${nRF52["HEX"]}" "${nRF52["BINHEX"]}" ; do
                [ ! -f "$File" ] && continue
                Exec "${nRF52["FLASHER"]}" "${nRF52["FLAG_FLASH"]}" $File
        done
        Exec "${nRF52["FLASHER"]}" "${nRF52["FLAG_RESET"]}"

#       if grep softdevice System.map >/dev/null ; then
#               echo_dbg "Programmig the softdevice ($SOFTDEVICE)"
#               Exec nrfjprog --program $SOFTDEVICE_DIR/$SOFTDEVICE
#       fi
  )

