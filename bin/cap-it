#!/bin/bash

declare -A VARTYPES

[ "$TRACE" = "1" ] && set -x && echo "set X"

help_msg()
{
        cat << "EOF"

    cap-it:  [-u|-l] <file-0>..<file-N>

       -u : Capitalize all typedefed variables so any variable name
             of the form [a-z]*_t will be changed to [A-Z]*_t.

       -l : Inverse of uc.

       -h : This message.

        file-0 ... : Set of files to process.

EOF
}

#
# Convert the case of some variable to upper or lower case.
#
re_case()
{
        local Case=
        local File=
        local Stem=
        local CMD=

        Case="$1" ; shift
	Stem=${1%_[tu]} ; shift
        [ -f "$1" ] || return 1
        File="$1" ; shift

	if [ "$Case" = "uc" ] ; then
	        echo "Converting type variable to upper case." >&2
	        CMD=( "sed" "-i" "-e" "'s/${Stem}_t/${Stem^^}_t/g'" "$File" )
	elif [ "$Case" = "lc" ] ; then
	        echo "Converting type variable to lower case." >&2
	        CMD=( "sed" "-i" "-e" "'s/${Stem}_t/${Stem,,}_t/g'" "$File" )
	else
                echo "Huh?  How did we get here?" >&2
                exit 2
	fi
	eval "${CMD[@]}"
}

foo()
{
        local File=
        local STEM=

        File=$1
        grep "[a-zA-Z_0-9]\+_t" $File | sed -e 's/[u]*int[0-9]*_t//g' \
                -n -e 's/.*[ 	]\([a-zA-Z0-9_][a-zA-Z0-9_]\+_t\)[^a-zA-Z0-9_].*/\1/p' | while read Type ; do
                                STEM=${Type%_t}
                                echo "VARTYPES[$STEM]=$Type"
        done
}

[ $# -lt 1 ] && help_msg && exit 1
while [ $# -ne 0 ] ; do
        case "$1" in
        -h) help_msg && exit
        ;;
        -l) CASE=lc
        ;;
        -u) CASE=uc
        ;;
        *) [ ! -f "$1" ] && echo "File not found:[$1]" && help_msg && exit 1
           FILES=( "$1" "${FILES[@]}" )
        ;;
        esac
        shift
done
( [ -z "$CASE" ] || [ -z "${FILES[*]}" ] ) && help_msg && exit 1

#
# Fill out hash table
#
for File in "${FILES[@]}" ; do
	#
	# Establish VARTYPES hash
	#
	eval $(foo "$File")
        for Key in "${!VARTYPES[@]}" ; do
                [ "$DEBUG" = "1" ] && echo -e "VARTYPES[$Key]\t${VARTYPES[$Key]}"
        done
done

#
# Apply hash table to each file.
#
for File in "${FILES[@]}" ; do
        echo "Processing $File"
        for Key in "${!VARTYPES[@]}" ; do
                re_case "$CASE" "${VARTYPES[$Key]}" "$File"
        done
done

