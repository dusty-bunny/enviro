#!/bin/bash

declare -A VARTYPES

help_msg()
{
        cat << "EOF"

    cap-it:  [-u|-l] <file-0>..<file-N>

       -u : Capitalize all typedefed variables so any variable name
             of the form [a-z]*_t will be changed to [A-Z]*_t.

       -l : Default: Inverse of uc.

       -h : This message.

        file-0 ... : Set of files to process.

EOF
}

foo()
{
        File=$1
        grep "[a-zA-Z_0-9]\+_t" $File | sed -e 's/[u]*int[0-9]*_t//g' \
                -n -e 's/.*[ 	]\([a-zA-Z0-9_][a-zA-Z0-9_]\+_t\)[^a-zA-Z0-9_].*/\1/p' | while read Type ; do
                                STEM=${Type%_t}
                                echo "VARTYPES[$STEM]=$Type"
        done
}

CASE=lc
[ $# -lt 1 ] && help_msg && exit 1
while [ $# -ne 0 ] ; do
        case "$1" in
        -h) help_msg && exit
        ;;
        -l) CASE=lc
        ;;
        -u) CASE=uc
        ;;
        *) [ ! -f ] "$1" && echo "File not found:[$1]" && help_msg && exit 1
           FILES=( "$1" "${FILES[@]}" )
        ;;
        esac
        shift
done

eval $(foo $file)
for File in "${FILES[@]}" ; do
        grep "[a-zA-Z_0-9]\+_t" $file | sed -e '/*.*\([a-zA-Z0-9_]\+_t\)/\1/p'
done
exit

STEM=${1%_t} ; shift


CMD=( "sed" "-i" "-e" "\'s/${STEM}_t/${STEM^^}_t/g\'" "$FILE" )
if [ "$CASE" = "uc" ] ; then
        echo "Converting type variable to upper case." >&2
        CMD=( "sed" "-i" "-e" "\'s/${STEM}_t/${STEM^^}_t/g\'" "$FILE" )
        eval "${CMD[@]}"
fi

if [ "$CASE" = "lc" ] ; then
        echo "Converting type variable to lower case." >&2
        eval sed -i -e \'s/${STEM^^}_t/${STEM,,}_t/g\' "$FILE"
fi

