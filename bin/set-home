#!/bin/bash

DEBUG=${DEBUG:-0}

#
# Relocate so when we do a git checkout we don't overwrite ourselvves.
#
if [ "$(basename "$0")" = "set-home" ] ; then
        cd /tmp
        cat $0 > .setup
        chmod +x .setup
        exec /tmp/.setup
fi

VIM_SHARE_DIR=/usr/share/vim
MSG="# Uncomment any one of the colors to provide vim with a color scheme"
PREAMBLE="# COLOR="
if [ ! -d  ~/bin/home-env/bin ] ; then
        echo "The repo may not be placed correctly. Please make sure" >&2
        echo "that the repo, home-env.git, is cloned into ~/bin." >&2
fi

mk_vimrc_color()
{
        local File=
        local VimShareDir=
        local ColorDefault=

        File=~/.vimrc_color
        VimShareDir=/usr/share/vim
        ColorDefault=pablo

        cat >$File <<"EOF"
"
"
" Uncomment aney ONE of the following color scheme directives
" to have vim colorize the text. Of course comment out any color
" directive in use.
"
"
EOF
        PREAMBLE="\" color "
        find $VimShareDir -type f -name "*.vim" \
                | grep /colors/ \
                | eval sed -e \''s:^.*\/::'\' -e \'s:^:$PREAMBLE:\' \
                        -e 's:\.vim$::' >> $File
        sed -i -e '/pablo$/s/^\" //' $File

        [ "$DEBUG" = "1" ] && cat $File
}

pushd ~ >/dev/null

_DIR=.git
_DIR=git

[ ! -d bin/home-env/.git ] && echo "No $_DIR found in bin/set-home" && exit 1
ln -sf bin/home-env/.git
git checkout .
mk_vimrc_color

BASHRC=~/.bashrc

if ! grep bash_aliases $BASHRC >/dev/null ; then
        echo -e "\nif [ -f ~/.bash_aliases ] ; then" >> $BASHRC
        echo -e "\tsource ~/.bash_aliases" >> $BASHRC
        echo -e "fi\n" >> $BASHRC
fi
popd >/dev/null

