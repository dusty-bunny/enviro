#!/bin/bash


do-exit()
{
        local ErrCode=
        local ErrMsg=

        ErrCode="$1" ; shift
        ErrMsg="$@"

        echo -e "$ErrMsg" >&2
        exit $ErrCode
}

dump-hash()
{
        local HashName=
        local iii=
        local ppp=

        for ppp in $@ ; do
                echo "declare -p ${ppp}"
                declare -p ${ppp} | sed -e 's,^declare*=(,,'
        done
}

#
# Generate output suitable for initializing
# a hash arrray: declare -A ...
#
set-hash()
{
        local KeyVal=
        local Hash=

        Hash="$1" ; shift
        while [ $# -ne 0 ] ; do
                KeyVal="$1"
                eval ${Hash[${KeyVal%=*}]}=[${KeyVal#*=}]
                shift
        done

        return
}

gen-changelog()
{
        local Distrib=
        local Developer=
        local Email=
        local PkgVer=
        local PkgUrgency=
        local Date=

        PkgVer="$1" ; shift
        PkgUrgency="$1" ; shift
        Developer="$1" ; shift
        Email="$1" ; shift
        Date=$(date -R)
        Distrib="${DISTRIBS[@]}"

        cat ${DEBDIRS["apt"]}/${PKG_ATTRIBS["PkgRoot"]}.changelog <<EOF
        "${PKG_ATTRIBS["PkgRoot"]} (${PkgVer}-1) ${Distrib%,};\t"
        "urgency=$PkgUrgency\n\n"
        "\tInitial set.\n\n"
        "$Developer <$Email>\t$Date"
EOF
        return
}

#
# Set by set-pkg-atribs
#
declare -a Package=()

while [ $# -ne 0 ] ; do
        case "$1" in
        --dist|-d) Distrib[foo]+=$2; shift
        ;;
        --File|-F) DescrFile="$2"; shift
                   [ ! -f "$DescrFile" ] && do-exit 8 "$DescrFile not found"
        ;;
        --pkg|-p) [ ${#Package[@]} -ne 0 ] \
                  && do-exit 3  \
                     "A Package already present. Use -p for primary pkg"
                  Package[0]="$2"; shift
        ;;
        # Allow specifing multiple packages
        # for the build.
        #
        --xtra|-x) Package[${#Package[@]}]="$2"; shift
        ;;
        # Which debian package meta file to work on.
        # Valid values are changelog, control, compat,
        # copyright.
        #
        --file|-f) DEBFILE="$2"; shift
        ;;
        *) do-exit 99 "Not a valid arg: $1"
        ;;
        esac
        shift
done
[ ${#Package[@]} -eq 0 ] && do-exit 4 "No primary package name set."
declare -A PKG_ATTRIBS
declare -A DISTRIBS
declare -A DevAttrs
declare -A DISTRIBS
declare -A DEBFILES
declare -A DevAttrs
set-hash DevAttrs "developer=bill" "email=redskyorca@icloud.com"

for ppp in $(seq 1 ${#Package[@]}) ; do

        # Setup basic PKG_ATTRIBS hash and do
        # so early so other the hashes can
        # reflect each Package entry.
        #
        ThisDir=$(pwd)
        set-hash PKG_ATTRIBS "PkgRoot=${ThisDir%[_-]*}" "PkgVer=${ThisDir#$PkgRoot[_-]}" "DebVer=${PKG_ATTRIBS[PkgVer]}-1"

        set-hash DISTRIBS "phoo=phoo" "random=random" "beggers=beggers" "banquat=banquat"

        PKGROOT=${PKG_ATTRIBS["PkgRoot"]}
        set-hash DEBFILES "changelog=changelog" "compat=compat" \
                        "control=control" "copyright=copyright" "links=links" \
                        "docs=${PKGROOT}.docs" "man=${PKGROOT}.manpages" \
                        "info=${PKGROOT}.info"

        dump-hash DevAttrs  PKG_ATTRIB DISTRIBS DEBFILES


        gen-changelog ${PKG_ATTRIBS["PkgVer"]} medium ${DevAttrs["developer"]} \
                       ${DevAttrs["email"]}
done

